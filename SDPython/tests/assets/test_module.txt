[0/27] 'sbs::compositing' (SDModule)
	Definitions:
		[1/29] 'sbs::compositing::valueprocessor'
			Label: 'Value Processor'
			Description: 'The <b>Value Processor</b> filter evaluates a function for a single value'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'function' = SDValueBool(bool(false)) [FUNCTION_ONLY]
					Label: 'Value Processor Function'
					Description: 'Function evaluated by this Value Processor'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[2/29] 'sbs::compositing::fxmaps'
			Label: 'FX-Map'
			Description: 'The <b>FX-Map</b> filter creates procedural noises and patterns'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'background' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> parameter sets an optional color or grayscale input background image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'inputpattern' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'renderroi' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Render Region'
					Description: 'The <b>Render Region</b> parameter sets the region to render (left, right, top, bottom)'
					Types:
						'float4' (SDTypeFloat4)
				'tilingroi' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Tiling Region'
					Description: 'The <b>Tiling Region</b> parameter sets a region of the FX-Map to tile (left, right, top, bottom)'
					Types:
						'float4' (SDTypeFloat4)
				'culling' = SDValueBool(bool(false)) 
					Label: 'Cull Outside'
					Description: 'Activate <b>Cull Outside</b> parameter in order to discard all patterns w/ centers outside the tiling region'
					Types:
						'bool' (SDTypeBool)
				'hurst' = SDValueFloat(float(1)) 
					Label: 'Roughness'
					Description: 'The <b>Roughness</b> parameter calculates the roughness value (depth and opacity multiplier). It applies a bias to the FX-Map's blending process'
					Types:
						'float' (SDTypeFloat)
				'opacitymult' = SDValueFloat(float(1)) 
					Label: 'Global Opacity'
					Description: 'The <b>Global Opacity</b> parameter is an opacity multiplier applied to each Fx-Map's patterns'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[3/29] 'sbs::compositing::blend'
			Label: 'Blend'
			Description: 'The <b>Blend</b> filter mixes two color inputs according to the grayscale input intensity'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'source' [CONNECTABLE, READ_ONLY]
					Label: 'Foreground'
					Description: 'Input 1 color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'destination' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'Input 2 color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'opacity' [CONNECTABLE, READ_ONLY]
					Label: 'Opacity'
					Description: 'Optional Opacity Input: per-pixel blending result mask'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'opacitymult' = SDValueFloat(float(1)) 
					Label: 'Opacity'
					Description: 'The <b>Opacity</b> parameter sets the transparency of the blend'
					Types:
						'float' (SDTypeFloat)
				'blendingmode' = SDValueEnum("sbs::compositing::blendingmode",0) 
					Label: 'Blending Mode'
					Description: 'The <b>Blending Mode</b> parameter defines the blending operation used to combine the foreground and background images'
					Types:
						'sbs::compositing::blendingmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'colorblending' = SDValueEnum("sbs::compositing::colorblending",0) 
					Label: 'Alpha Blending'
					Description: 'The <b>Alpha Blending</b> parameter defines the how alpha channels of color source and destination are interpreted'
					Types:
						'sbs::compositing::colorblending' (SDTypeEnum)
						'int' (SDTypeInt)
				'maskrectangle' = SDValueFloat4(float4(0,1,0,1)) 
					Label: 'Cropping Area'
					Description: 'The <b>Cropping Area</b> parameter applies a cropping area on the foreground input'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[4/29] 'sbs::compositing::curve'
			Label: 'Curve'
			Description: 'The <b>Curve</b> filter replaces the colors or grayscale values of the input image by remapping them with a curve'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'exposecurve' = SDValueBool(bool(false)) 
					Label: 'Apply / Expose curve'
					Description: 'The <b>Apply / Expose curve</b> parameter allows to copy the user curve to the output instead of applying it to the input image'
					Types:
						'bool' (SDTypeBool)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Curve Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'curveluminance' 
					Label: 'Curve luminance'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvered' 
					Label: 'Curve red'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvegreen' 
					Label: 'Curve Green'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curveblue' 
					Label: 'Curve blue'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				'curvealpha' 
					Label: 'Curve Alpha'
					Types:
						'SDTypeArray<sbs::compositing::curve_key>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[5/29] 'sbs::compositing::pixelprocessor'
			Label: 'Pixel Processor'
			Description: 'The <b>Pixel Processor</b> filter evaluates a function per pixel'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'input' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'Input Image 0'
					Description: 'Input Image 0'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'perpixel' = SDValueFloat4(float4(0,0,0,1)) [FUNCTION_ONLY]
					Label: 'Per Pixel Function'
					Description: 'Function evaluated per pixel'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[6/29] 'sbs::compositing::svg'
			Label: 'SVG'
			Description: 'The <b>Vector Graphics</b> filter takes a vector graphic image and inserts it into the graph as a bitmap'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale or color image output'
					Types:
						'bool' (SDTypeBool)
				'background' = SDValueFloat4(float4(0,0,0,0)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> input/parameter sets the output image's background color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'vectorresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the location of the vector image (SVG format) in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[7/29] 'sbs::compositing::bitmap'
			Label: 'Bitmap'
			Description: 'The <b>Bitmap</b> filter imports a bitmap image resource into the graph'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				'resizemethod' = SDValueEnum("sbs::compositing::resizemethod",0) 
					Label: 'Resize method'
					Description: 'The <b>Resize method</b> parameter select how the bitmap is resized if required'
					Types:
						'sbs::compositing::resizemethod' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[8/29] 'sbs::compositing::shuffle'
			Label: 'Channels Shuffle'
			Description: 'The <b>Channels Shuffle</b> filter lets you create an output image using individual channels from either of the two input images, arranged in any order'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input 1'
					Description: 'Primary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'input2' [CONNECTABLE, READ_ONLY]
					Label: 'Input 2'
					Description: 'Secondary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'channelred' = SDValueEnum("sbs::compositing::channelred",0) 
					Label: 'Red Channel'
					Description: 'Choose the source channel to be inserted into the output image's Red channel'
					Types:
						'sbs::compositing::channelred' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelgreen' = SDValueEnum("sbs::compositing::channelgreen",1) 
					Label: 'Green Channel'
					Description: 'Choose the source channel to be inserted into the output image's Green channel'
					Types:
						'sbs::compositing::channelgreen' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelblue' = SDValueEnum("sbs::compositing::channelblue",2) 
					Label: 'Blue Channel'
					Description: 'Choose the source channel to be inserted into the output image's Blue channel'
					Types:
						'sbs::compositing::channelblue' (SDTypeEnum)
						'int' (SDTypeInt)
				'channelalpha' = SDValueEnum("sbs::compositing::channelalpha",3) 
					Label: 'Alpha Channel'
					Description: 'Choose the source channel to be inserted into the output image's Alpha channel'
					Types:
						'sbs::compositing::channelalpha' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[9/29] 'sbs::compositing::normal'
			Label: 'Normal'
			Description: 'The <b>Normal</b> filter computes a normal map from a grayscale input image interpreted as height map'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Input Image Grayscale; interpreted as a height map'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter modifies the intensity of height map '
					Types:
						'float' (SDTypeFloat)
				'inversedy' = SDValueBool(bool(false)) 
					Label: 'Normal Format'
					Description: 'The <b>Normal Format</b> parameter inverts y coordinates of height map (Open-GL)'
					Types:
						'bool' (SDTypeBool)
				'input2alpha' = SDValueBool(bool(true)) 
					Label: 'Alpha Channel Content'
					Description: 'When checked, the <b>Alpha Channel Content</b> parameter will fill the normal map's alpha channel with the input texture'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[10/29] 'sbs::compositing::uniform'
			Label: 'Uniform Color'
			Description: 'The <b>Uniform Color</b> filter creates an image that uses only one color, whether it is an RGB color image or a grayscale image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'outputcolor' = SDValueFloat4(float4(0,0,0,1)) 
					Label: 'Output Color'
					Description: 'The <b>Color Output</b> parameter creates a uniform color output image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[11/29] 'sbs::compositing::hsl'
			Label: 'HSL'
			Description: 'The <b>HSL</b> filter adjusts the color appearance of an output image by modifying the intensity of the <b>hue</b>, <b>saturation</b>, and <b>lightness</b> parameters of the color input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'hue' = SDValueFloat(float(0.5)) 
					Label: 'Hue'
					Description: 'The <b>Hue</b> parameter determines the color of the input image'
					Types:
						'float' (SDTypeFloat)
				'saturation' = SDValueFloat(float(0.5)) 
					Label: 'Saturation'
					Description: 'The <b>Saturation</b> parameter determines the saturation of the input image's color'
					Types:
						'float' (SDTypeFloat)
				'luminosity' = SDValueFloat(float(0.5)) 
					Label: 'Lightness'
					Description: 'The <b>Lightness</b> parameter determines the lightness of the input image'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[12/29] 'sbs::compositing::blur'
			Label: 'Blur'
			Description: 'The <b>Blur</b> filter softens the input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the blur in pixels'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[13/29] 'sbs::compositing::gradient'
			Label: 'Gradient Map'
			Description: 'The <b>Gradient Map</b> filter replaces the grayscale values of the input image by remapping with a color gradient'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'colorswitch' = SDValueBool(bool(true)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between the grayscale and the color image'
					Types:
						'bool' (SDTypeBool)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Gradient Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the grayscale input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'gradientrgba' 
					Label: 'Gradient RGBA'
					Types:
						'SDTypeArray<sbs::compositing::gradient_key_rgba>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[14/29] 'sbs::compositing::dyngradient'
			Label: 'Gradient (Dynamic)'
			Description: 'The <b>Dynamic Gradient Map</b> filter replaces the grayscale values of the first input image by remapping with a color gradient read from the second input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Grayscale Input'
					Description: 'Primary Input Image. Grayscale image to remap'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'input2' [CONNECTABLE, READ_ONLY]
					Label: 'Gradient Input'
					Description: '<b>Gradient image</b>. Gradient is sampled from this image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'addressingrepeat' = SDValueBool(bool(false)) 
					Label: 'Gradient Addressing'
					Description: 'This parameter determines how out of 0..1 range <b>HDR</b> pixels of the grayscale input are handled: clamped or fold up to 0..1.'
					Types:
						'bool' (SDTypeBool)
				'uvselector' = SDValueEnum("sbs::compositing::uvselector",0) 
					Label: 'Gradient Orientation'
					Description: 'The <b>Gradient Orientation</b> parameter defines how the gradient values are sampled in gradient input'
					Types:
						'sbs::compositing::uvselector' (SDTypeEnum)
						'int' (SDTypeInt)
				'coordinate' = SDValueFloat(float(0)) 
					Label: 'Gradient Input Position'
					Description: 'Normalized coordinate of the line/column to sample in gradient input'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[15/29] 'sbs::compositing::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> node is not doing anything'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Input Image or Value.'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
		[16/29] 'sbs::compositing::dirmotionblur'
			Label: 'Directional Blur'
			Description: 'The <b>Directional Blur</b> filter displaces the color input pixels in a given direction according to a specific intensity'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the blur'
					Types:
						'float' (SDTypeFloat)
				'mblurangle' = SDValueFloat(float(0)) 
					Label: 'Angle'
					Description: 'The <b>Angle</b> parameter defines the direction of the blur effect'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[17/29] 'sbs::compositing::sharpen'
			Label: 'Sharpen'
			Description: 'The <b>Sharpen</b> filter emphasizes the edges in the image, or the differences between adjacent light and dark sample points in an image and improves the clarity of a fuzzy image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter determines the intensity of the sharpening'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[18/29] 'sbs::compositing::text'
			Label: 'Text'
			Description: 'The <b>Text</b> filter defines the text color, size, alignment and position'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(false)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'text' = SDValueString(string()) 
					Label: 'Text'
					Description: 'The <b>Text</b> parameter determines the text description'
					Types:
						'string' (SDTypeString)
				'fontdata' = SDValueString(string()) 
					Label: 'Font'
					Description: 'The <b>Font</b> resource used to render the <b>Text</b>'
					Types:
						'string' (SDTypeString)
				'fontsize' = SDValueFloat(float(0.25)) 
					Label: 'Font Size'
					Description: 'The <b>Font Size</b> parameter sets the font size of the text in points'
					Types:
						'float' (SDTypeFloat)
				'alignment' = SDValueEnum("sbs::compositing::alignment",1) 
					Label: 'Alignment'
					Description: 'The <b>Alignment</b> parameter sets the text alignment as left, center (default), or right'
					Types:
						'sbs::compositing::alignment' (SDTypeEnum)
						'int' (SDTypeInt)
				'matrix22' = SDValueFloat4(float4(1,0,0,1)) 
					Label: 'Transformation'
					Description: 'The 2x2 <b>Transformation</b> matrix applied to the rendered text'
					Types:
						'float4' (SDTypeFloat4)
				'position' = SDValueFloat2(float2(0,0)) 
					Label: 'Position'
					Description: 'The <b>Position</b> parameter determines the position of the text in the output image'
					Types:
						'float2' (SDTypeFloat2)
				'background' = SDValueFloat4(float4(0,0,0,1)) [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Background'
					Description: 'The <b>Background</b> input/parameter sets the output image's background color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'frontcolor' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Font Color'
					Description: 'The <b>Font Color</b> parameter sets the color of the text'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[19/29] 'sbs::compositing::transformation'
			Label: 'Transformation 2D'
			Description: 'The <b>Transformation 2D</b> filter applies a 2D geometric transformation to either a color or a grayscale input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be transformed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'matrix22' = SDValueFloat4(float4(1,0,0,1)) 
					Label: 'Transform matrix'
					Description: 'Open the underlying transform <b>matrix</b> for direct editing'
					Types:
						'float4' (SDTypeFloat4)
				'offset' = SDValueFloat2(float2(0,0)) 
					Label: 'Offset'
					Description: 'The <b>Offset</b> parameter defines the 2D displacement of the image'
					Types:
						'float2' (SDTypeFloat2)
				'mipmapmode' = SDValueEnum("sbs::compositing::mipmapmode",0) 
					Label: 'Mipmap Mode'
					Description: 'The <b>Mipmap Mode</b> parameter reduces artifacts in an image using texture filtering'
					Types:
						'sbs::compositing::mipmapmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'manualmiplevel' = SDValueInt(int(0)) 
					Label: 'Mipmap Level'
					Description: 'The <b>MipMap level</b> parameter sets the mipmap level used if the Mipmap mode parameter is set to Manual'
					Types:
						'int' (SDTypeInt)
				'mattecolor' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Matte Color'
					Description: 'The <b>Matte Color</b> parameter is used as the background color when tiling of transformation is disabled'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'filtering' = SDValueEnum("sbs::compositing::filtering",0) 
					Label: 'Filtering'
					Description: 'Filtering'
					Types:
						'sbs::compositing::filtering' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[20/29] 'sbs::compositing::directionalwarp'
			Label: 'Directional Warp'
			Description: 'The <b>Directional Warp</b> filter displaces the input image’s color pixels in a given direction to create a warp effect'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputintensity' [CONNECTABLE, READ_ONLY]
					Label: 'Intensity Input'
					Description: '<b>Warp Intensity image</b>. Grayscale image map defining the amount of warp to apply to the primary input image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(10)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the warp'
					Types:
						'float' (SDTypeFloat)
				'warpangle' = SDValueFloat(float(0)) 
					Label: 'Warp Angle'
					Description: 'The <b>Angle</b> parameter sets the angle of the warp'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[21/29] 'sbs::compositing::grayscaleconversion'
			Label: 'Grayscale Conversion'
			Description: 'The <b>Grayscale Conversion</b> filter replaces the color values of the input image using a grayscale gradient'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'channelsweights' = SDValueFloat4(float4(0.330000013,0.330000013,0.330000013,0)) 
					Label: 'Channels Weights'
					Description: 'The <b>Channels Weights</b> parameter defines the weightings for each channel. These weightings are used to calculate the grayscale result'
					Types:
						'float4' (SDTypeFloat4)
				'alphamult' = SDValueBool(bool(false)) 
					Label: 'Flatten Alpha'
					Description: 'The <b>Flatten Alpha</b> parameter multiplies the grayscale conversion by the input image’s alpha channel'
					Types:
						'bool' (SDTypeBool)
				'mattelevel' = SDValueFloat(float(1)) 
					Label: 'Background Value'
					Description: 'The <b>Background Value</b> parameter determines which pixels are to be treated as transparent. (Only used if the <b>Flatten Alpha</b> parameter is set to True)'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[22/29] 'sbs::compositing::distance'
			Label: 'Distance'
			Description: 'The <b>Distance</b> filter computes per-pixel distance to nearest white pixel from a mask and/or copy from this position in source input '
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'colorswitch' = SDValueBool(bool(false)) 
					Label: 'Color Mode'
					Description: 'The <b>Color Mode</b> parameter toggles between a grayscale and a color output image'
					Types:
						'bool' (SDTypeBool)
				'mask' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Mask Input'
					Description: 'Mask input to compute distance from'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'source' [CONNECTABLE, READ_ONLY]
					Label: 'Source Input'
					Description: 'Optional source input for nearest pixel copy'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'distance' = SDValueFloat(float(10)) 
					Label: 'Maximum Distance'
					Description: 'The <b>Maximum Distance</b> parameter adjusts the distance computation and copy limit'
					Types:
						'float' (SDTypeFloat)
				'combinedistance' = SDValueBool(bool(true)) 
					Label: 'Combine Source/Distance'
					Description: 'If Source Input is set, determines if is combined with computed distance.'
					Types:
						'bool' (SDTypeBool)
				'distancemode' = SDValueInt(int(0)) 
					Label: 'Distance Mode'
					Description: 'Choose the method of distance computation'
					Types:
						'sbs::compositing::distancemode' (SDTypeEnum)
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[23/29] 'sbs::compositing::levels'
			Label: 'Levels'
			Description: 'The <b>Levels</b> filter adjusts the global tonal range and color balance of an image by modifying intensity levels of the image’s shadows, midtones, and highlights'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'levelinlow' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Level In Low'
					Description: 'The <b>Level in low</b> parameter defines the input image's lowlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelinhigh' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Level In High'
					Description: 'The <b>Level in high</b> parameter defines the input image's highlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelinmid' = SDValueFloat4(float4(0.5,0.5,0.5,0.5)) 
					Label: 'Level In Mid'
					Description: 'The <b>Level in mid</b> parameter defines the input image's midtone levels'
					Types:
						'float4' (SDTypeFloat4)
				'leveloutlow' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Level Out Low'
					Description: 'The <b>Level in low</b> parameter defines the output image's lowlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'levelouthigh' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Level Out High'
					Description: 'The <b>Level out high</b>parameter defines the output image's highlight levels'
					Types:
						'float4' (SDTypeFloat4)
				'clampinterm' = SDValueBool(bool(true)) 
					Label: 'Intermediary Clamp'
					Description: 'This parameter determines if transformed input value is clamped to 0..1 before computing output level'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[24/29] 'sbs::compositing::emboss'
			Label: 'Emboss'
			Description: 'The <b>Emboss</b> filter displaces the Input 1 image’s color pixels in a given direction'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. Image to be processed'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputgradient' [CONNECTABLE, READ_ONLY]
					Label: 'Intensity Input'
					Description: 'The intensity input displaces the Input 1 image’s color pixels in a given direction'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(5)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter adjusts the global intensity of illumination effect'
					Types:
						'float' (SDTypeFloat)
				'lightangle' = SDValueFloat(float(0)) 
					Label: 'Light Angle'
					Description: 'The <b>Light Angle</b> defines the illumination angle of the embossed image's highlight'
					Types:
						'float' (SDTypeFloat)
				'highlightcolor' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Highlight Color'
					Description: 'The <b>Highlight</b> parameter sets the color of the highlight if the input image is color'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				'shadowcolor' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Shadow Color'
					Description: 'The <b>Shadow Color</b> parameter sets the color of the shadowed regions of the embossed image'
					Types:
						'ColorRGBA' (SDTypeColorRGBA)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[25/29] 'sbs::compositing::warp'
			Label: 'Warp'
			Description: 'The <b>Warp</b> filter displaces the color pixels in the input image'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'input1' [CONNECTABLE, READ_ONLY, PRIMARY]
					Label: 'Input'
					Description: 'Primary Input Image. The color or grayscale image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'inputgradient' [CONNECTABLE, READ_ONLY]
					Label: 'Gradient Input'
					Description: 'The slope of the gradient of the grayscale input image determines the warp effect in the output image'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				'intensity' = SDValueFloat(float(1)) 
					Label: 'Intensity'
					Description: 'The <b>Intensity</b> parameter sets the intensity of the warp'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
		[26/29] 'sbs::compositing::input_color'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[27/29] 'sbs::compositing::input_grayscale'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				'bitmapresourcepath' = SDValueString(string()) 
					Label: 'PKG Resource Path'
					Description: 'The <b>PKG Resource Path</b> parameter displays the bitmap's location in your package'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[28/29] 'sbs::compositing::input_value'
			Label: 'Input'
			Description: 'Input'
			SDPropertyCategory = 'Input'
				'$outputsize' = SDValueInt2(int2(8,8)) 
					Label: 'Output Size'
					Description: 'The <b>Output Size</b> parameter defines the horizontal and vertical size of the output image as a power of 2. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int2' (SDTypeInt2)
				'$format' = SDValueEnum("sbs::compositing::format",0) 
					Label: 'Output Format'
					Description: 'The <b>Output Format</b> parameter sets the output image format. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::format' (SDTypeEnum)
						'int' (SDTypeInt)
				'$pixelsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pixel Size'
					Description: 'The <b>Pixel Size</b> parameter defines the horizontal and vertical size of a pixel. This</b> parameter is used by the non-local</b> filters: Blur, Sharpen, Transformation 2D, Directional Motion Blur, and Directional Warp. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'float2' (SDTypeFloat2)
				'$pixelratio' = SDValueEnum("sbs::compositing::pixelratio",1) 
					Label: 'Pixel Ratio'
					Description: 'The <b>Pixel Ratio</b> parameter defines the behavior of the pixel size's aspect ratio with respect to the output size's aspect ratio. The parameter is used by non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::pixelratio' (SDTypeEnum)
						'int' (SDTypeInt)
				'$tiling' = SDValueEnum("sbs::compositing::tiling",3) 
					Label: 'Tiling Mode'
					Description: 'The <b>Tiling</b> parameter defines the input’s tiling behavior. The parameter is used by the non-local filters. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'sbs::compositing::tiling' (SDTypeEnum)
						'int' (SDTypeInt)
				'$randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'The <b>Random Seed</b> parameter defines the random seed of the filter node. This parameter is used by all random generators. Random seed is cumulative if the inherited qualifier is set. The final random seed is the sum of the random seeds of all of filters of its hierarchy. Parameter can be <i>inherited</i> from parent object, or set to an <i>absolute</i> value'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				
		[29/29] 'sbs::compositing::output'
			Label: 'Input'
			Description: 'Input connector'
			SDPropertyCategory = 'Input'
				'inputNodeOutput' [CONNECTABLE, READ_ONLY]
					Label: 'Input'
					Description: 'Input connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'SDTypeTexture' (SDTypeTexture)
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Annotation'
				'label' 
					Label: 'Label'
					Types:
						'string' (SDTypeString)
				'description' 
					Label: 'Description'
					Types:
						'string' (SDTypeString)
				'identifier' 
					Label: 'Identifier'
					Types:
						'string' (SDTypeString)
				'userdata' 
					Label: 'User Data'
					Types:
						'string' (SDTypeString)
				'group' 
					Label: 'Group'
					Types:
						'string' (SDTypeString)
				'visible_if' 
					Label: 'Visible If'
					Types:
						'string' (SDTypeString)
				'usages' 
					Label: 'Usages'
					Types:
						'SDTypeArray<SDTypeUsage>' (SDTypeArray)
				'mipmaps' 
					Label: 'Mipmaps'
					Types:
						'int' (SDTypeInt)
				'format' 
					Label: 'Format'
					Types:
						'int' (SDTypeInt)
				
	Types:
		[1/18] 'sbs::compositing::distancemode'
			'sbs::compositing::distancemode' (SDTypeEnum)
				int euclidean = SDValueInt(int(0))
					Label: 'Euclidean distance'
					Description: 'Euclidean distance'
				int manhattan = SDValueInt(int(1))
					Label: 'Manhattan distance'
					Description: 'Manhattan distance'
				int chebyshev = SDValueInt(int(2))
					Label: 'Chebyshev distance'
					Description: 'Chebyshev distance'
		[2/18] 'sbs::compositing::filtering'
			'sbs::compositing::filtering' (SDTypeEnum)
				int bilinear = SDValueInt(int(0))
					Label: 'Bilinear'
					Description: 'Bilinear'
				int nearest = SDValueInt(int(1))
					Label: 'Nearest'
					Description: 'Nearest'
		[3/18] 'sbs::compositing::mipmapmode'
			'sbs::compositing::mipmapmode' (SDTypeEnum)
				int automatic = SDValueInt(int(0))
					Label: 'Automatic'
					Description: 'Automatic'
				int manual = SDValueInt(int(1))
					Label: 'Manual'
					Description: 'Manual'
		[4/18] 'sbs::compositing::alignment'
			'sbs::compositing::alignment' (SDTypeEnum)
				int left = SDValueInt(int(0))
					Label: 'Left'
					Description: 'Left'
				int center = SDValueInt(int(1))
					Label: 'Center'
					Description: 'Center'
				int right = SDValueInt(int(2))
					Label: 'Right'
					Description: 'Right'
		[5/18] 'sbs::compositing::uvselector'
			'sbs::compositing::uvselector' (SDTypeEnum)
				int u = SDValueInt(int(0))
					Label: 'Horizontal'
					Description: 'Horizontal'
				int v = SDValueInt(int(1))
					Label: 'Vertical'
					Description: 'Vertical'
		[6/18] 'sbs::compositing::gradient_key_rgba'
			'sbs::compositing::gradient_key_rgba' (SDTypeStruct)
				ColorRGBA value
					Label: 'Gradient RGBA Value'
					Description: 'Gradient RGBA Value'
				float position
					Label: 'Gradient RGB Position'
					Description: 'Gradient RGB Position'
				float midpoint
					Label: 'Gradient RGBA Midpoint'
					Description: 'Gradient RGBA Midpoint'
		[7/18] 'sbs::compositing::channelalpha'
			'sbs::compositing::channelalpha' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[8/18] 'sbs::compositing::channelblue'
			'sbs::compositing::channelblue' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[9/18] 'sbs::compositing::gradient_key_alpha'
			'sbs::compositing::gradient_key_alpha' (SDTypeStruct)
				float value
					Label: 'Gradient Alpha Value'
					Description: 'Gradient Alpha Value'
				float position
					Label: 'Gradient Alpha Position'
					Description: 'Gradient Alpha Position'
				float midpoint
					Label: 'Gradient Alpha Midpoint'
					Description: 'Gradient Alpha Midpoint'
		[10/18] 'sbs::compositing::channelgreen'
			'sbs::compositing::channelgreen' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[11/18] 'sbs::compositing::channelred'
			'sbs::compositing::channelred' (SDTypeEnum)
				int input1red = SDValueInt(int(0))
					Label: 'Input 1 Red Channel'
					Description: 'Input 1 Red Channel'
				int input1green = SDValueInt(int(1))
					Label: 'Input 1 Green Channel'
					Description: 'Input 1 Green Channel'
				int input1blue = SDValueInt(int(2))
					Label: 'Input 1 Blue Channel'
					Description: 'Input 1 Blue Channel'
				int input1alpha = SDValueInt(int(3))
					Label: 'Input 1 Alpha Channel'
					Description: 'Input 1 Alpha Channel'
				int input2red = SDValueInt(int(4))
					Label: 'Input 2 Red Channel'
					Description: 'Input 2 Red Channel'
				int input2green = SDValueInt(int(5))
					Label: 'Input 2 Green Channel'
					Description: 'Input 2 Green Channel'
				int input2blue = SDValueInt(int(6))
					Label: 'Input 2 Blue Channel'
					Description: 'Input 2 Blue Channel'
				int input2alpha = SDValueInt(int(7))
					Label: 'Input 2 Alpha Channel'
					Description: 'Input 2 Alpha Channel'
		[12/18] 'sbs::compositing::blendingmode'
			'sbs::compositing::blendingmode' (SDTypeEnum)
				int copy = SDValueInt(int(0))
					Label: 'Copy'
					Description: 'Copy'
				int add = SDValueInt(int(1))
					Label: 'Add (Linear Dodge)'
					Description: 'Add (Linear Dodge)'
				int substract = SDValueInt(int(2))
					Label: 'Subtract'
					Description: 'Subtract'
				int multiply = SDValueInt(int(3))
					Label: 'Multiply'
					Description: 'Multiply'
				int addsub = SDValueInt(int(4))
					Label: 'Add Sub'
					Description: 'Add Sub'
				int max = SDValueInt(int(5))
					Label: 'Max (Lighten)'
					Description: 'Max (Lighten)'
				int min = SDValueInt(int(6))
					Label: 'Min (Darken)'
					Description: 'Min (Darken)'
				int switch = SDValueInt(int(7))
					Label: 'Switch'
					Description: 'Switch'
				int divide = SDValueInt(int(8))
					Label: 'Divide'
					Description: 'Divide'
				int overlay = SDValueInt(int(9))
					Label: 'Overlay'
					Description: 'Overlay'
				int screen = SDValueInt(int(10))
					Label: 'Screen'
					Description: 'Screen'
				int softlight = SDValueInt(int(11))
					Label: 'Soft Light'
					Description: 'Soft Light'
		[13/18] 'sbs::compositing::curve_key'
			'sbs::compositing::curve_key' (SDTypeStruct)
				float2 position
					Label: 'Luminance Position'
					Description: 'Luminance Position'
				bool isLocked
					Label: 'Luminance Locked'
					Description: 'Luminance Locked'
				float2 left
					Label: 'Luminance Left Tangent Handle'
					Description: 'Luminance Left Tangent Handle'
				bool isLeftBroken
					Label: 'Luminance Left Broken'
					Description: 'Luminance Left Broken'
				float2 right
					Label: 'Luminance Right Tangent Handle'
					Description: 'Luminance Right Tangent Handle'
				bool isRightBroken
					Label: 'Luminance Right Broken'
					Description: 'Luminance Right Broken'
		[14/18] 'sbs::compositing::resizemethod'
			'sbs::compositing::resizemethod' (SDTypeEnum)
				int stretchbilinear = SDValueInt(int(0))
					Label: 'Smooth stretch'
					Description: 'Smooth stretch'
				int stretchnearest = SDValueInt(int(1))
					Label: 'Nearest stretch'
					Description: 'Nearest stretch'
		[15/18] 'sbs::compositing::colorblending'
			'sbs::compositing::colorblending' (SDTypeEnum)
				int usesourcealpha = SDValueInt(int(0))
					Label: 'Use Source Alpha'
					Description: 'Use Source Alpha'
				int ignorealpha = SDValueInt(int(1))
					Label: 'Ignore Alpha'
					Description: 'Ignore Alpha'
				int straight = SDValueInt(int(2))
					Label: 'Straight Alpha Blending'
					Description: 'Straight Alpha Blending'
				int premul = SDValueInt(int(3))
					Label: 'Premultiplied Alpha Blending (Copy only)'
					Description: 'Premultiplied Alpha Blending (Copy only)'
		[16/18] 'sbs::compositing::format'
			'sbs::compositing::format' (SDTypeEnum)
				int 8_bits_per_channel = SDValueInt(int(0))
					Label: '8 Bits per Channel'
					Description: '8 Bits per Channel'
				int 16_bits_per_channel = SDValueInt(int(1))
					Label: '16 Bits per Channel'
					Description: '16 Bits per Channel'
				int hdr_low_precision = SDValueInt(int(2))
					Label: 'HDR Low Precision (16F)'
					Description: 'HDR Low Precision (16F)'
				int hdr_high_precision = SDValueInt(int(3))
					Label: 'HDR High Precision (32F)'
					Description: 'HDR High Precision (32F)'
		[17/18] 'sbs::compositing::tiling'
			'sbs::compositing::tiling' (SDTypeEnum)
				int no_tiling = SDValueInt(int(0))
					Label: 'No Tiling'
					Description: 'No Tiling'
				int horizontal_tiling = SDValueInt(int(1))
					Label: 'Horizontal Tiling'
					Description: 'Horizontal Tiling'
				int vertical_tiling = SDValueInt(int(2))
					Label: 'Vertical Tiling'
					Description: 'Vertical Tiling'
				int h_and_v_tiling = SDValueInt(int(3))
					Label: 'H and V Tiling'
					Description: 'H and V Tiling'
		[18/18] 'sbs::compositing::pixelratio'
			'sbs::compositing::pixelratio' (SDTypeEnum)
				int stretch = SDValueInt(int(0))
					Label: 'Stretch'
					Description: 'Stretch'
				int square = SDValueInt(int(1))
					Label: 'Square'
					Description: 'Square'
[1/27] 'sbs::function' (SDModule)
	Definitions:
		[1/82] 'sbs::function::const_float1'
			Label: 'Float'
			Description: 'The <b>Float</b> function defines a constant floating value'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat(float(0)) 
					Label: 'Constant'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float'
					Description: 'The <b>Float</b> function defines a constant floating value'
					Types:
						'float' (SDTypeFloat)
				
		[2/82] 'sbs::function::const_float2'
			Label: 'Float2'
			Description: 'The <b>Float2</b> function defines a constant two floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat2(float2(0,0)) 
					Label: 'Constant'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float2'
					Description: 'The <b>Float2</b> function defines a constant two floating values vector'
					Types:
						'float2' (SDTypeFloat2)
				
		[3/82] 'sbs::function::const_float3'
			Label: 'Float3'
			Description: 'The <b>Float3</b> function defines a constant three floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat3(float3(0,0,0)) 
					Label: 'Constant'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float3'
					Description: 'The <b>Float3</b> function defines a constant three floating values vector'
					Types:
						'float3' (SDTypeFloat3)
				
		[4/82] 'sbs::function::const_float4'
			Label: 'Float4'
			Description: 'The <b>Float4</b> function defines a constant four floating values vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueFloat4(float4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Float4'
					Description: 'The <b>Float4</b> function defines a constant four floating values vector'
					Types:
						'float4' (SDTypeFloat4)
				
		[5/82] 'sbs::function::const_int1'
			Label: 'Integer'
			Description: 'The <b>Integer</b> function defines a constant integer'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer'
					Description: 'The <b>Integer</b> function defines a constant integer'
					Types:
						'int' (SDTypeInt)
				
		[6/82] 'sbs::function::const_int2'
			Label: 'Integer2'
			Description: 'The <b>Integer2</b> function defines a constant two integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer2'
					Description: 'The <b>Integer2</b> function defines a constant two integers vector'
					Types:
						'int2' (SDTypeInt2)
				
		[7/82] 'sbs::function::const_int3'
			Label: 'Integer3'
			Description: 'The <b>Integer3</b> function defines a constant three integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer3'
					Description: 'The <b>Integer3</b> function defines a constant three integers vector'
					Types:
						'int3' (SDTypeInt3)
				
		[8/82] 'sbs::function::const_int4'
			Label: 'Integer4'
			Description: 'The <b>Integer4</b> function defines a constant four integers vector'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Integer4'
					Description: 'The <b>Integer4</b> function defines a constant four integers vector'
					Types:
						'int4' (SDTypeInt4)
				
		[9/82] 'sbs::function::const_bool'
			Label: 'Boolean'
			Description: 'The <b>Boolean</b> function defines a constant boolean'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueBool(bool(false)) 
					Label: 'Constant'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Boolean'
					Description: 'The <b>Boolean</b> function defines a constant boolean'
					Types:
						'bool' (SDTypeBool)
				
		[10/82] 'sbs::function::const_string'
			Label: 'String'
			Description: 'The <b>Path</b> function defines a constant string'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'String'
					Description: 'The <b>Path</b> function defines a constant string'
					Types:
						'string' (SDTypeString)
				
		[11/82] 'sbs::function::vector2'
			Label: 'Vector Float2'
			Description: 'The <b>Vector Float2</b> function casts two floating values in a vector with two coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float2'
					Description: 'The <b>Vector Float2</b> function casts two floating values in a vector with two coordinates'
					Types:
						'float2' (SDTypeFloat2)
				
		[12/82] 'sbs::function::vector3'
			Label: 'Vector Float3'
			Description: 'The <b>Vector Float3</b> function casts two floating values into a vector with three coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float3'
					Description: 'The <b>Vector Float3</b> function casts two floating values into a vector with three coordinates'
					Types:
						'float3' (SDTypeFloat3)
				
		[13/82] 'sbs::function::vector4'
			Label: 'Vector Float4'
			Description: 'The <b>Vector Float4</b> function casts two floating values into a vector with four coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'In'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Float4'
					Description: 'The <b>Vector Float4</b> function casts two floating values into a vector with four coordinates'
					Types:
						'float4' (SDTypeFloat4)
				
		[14/82] 'sbs::function::swizzle1'
			Label: 'Swizzle Float1'
			Description: 'The <b>Swizzle Float1</b> function extracts a single specified coordinate from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float1'
					Description: 'The <b>Swizzle Float1</b> function extracts a single specified coordinate from the input Vector'
					Types:
						'float' (SDTypeFloat)
				
		[15/82] 'sbs::function::swizzle2'
			Label: 'Swizzle Float2'
			Description: 'The <b>Swizzle Float2</b> function extracts two specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float2'
					Description: 'The <b>Swizzle Float2</b> function extracts two specified coordinates from the input Vector'
					Types:
						'float2' (SDTypeFloat2)
				
		[16/82] 'sbs::function::swizzle3'
			Label: 'Swizzle Float3'
			Description: 'The <b>Swizzle Float3</b> function extracts three specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float3'
					Description: 'The <b>Swizzle Float3</b> function extracts three specified coordinates from the input Vector'
					Types:
						'float3' (SDTypeFloat3)
				
		[17/82] 'sbs::function::swizzle4'
			Label: 'Swizzle Float4'
			Description: 'The <b>Swizzle Float4</b> function extracts four specified coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Float4'
					Description: 'The <b>Swizzle Float4</b> function extracts four specified coordinates from the input Vector'
					Types:
						'float4' (SDTypeFloat4)
				
		[18/82] 'sbs::function::ivector2'
			Label: 'Vector Integer2'
			Description: 'The <b>Vector Integer2</b> function casts two integer values in a vector with two coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer2'
					Description: 'The <b>Vector Integer2</b> function casts two integer values in a vector with two coordinates'
					Types:
						'int2' (SDTypeInt2)
				
		[19/82] 'sbs::function::ivector3'
			Label: 'Vector Integer3'
			Description: 'The <b>Vector Integer3</b> function casts two integer values in a vector with three coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer3'
					Description: 'The <b>Vector Integer3</b> function casts two integer values in a vector with three coordinates'
					Types:
						'int3' (SDTypeInt3)
				
		[20/82] 'sbs::function::ivector4'
			Label: 'Vector Integer4'
			Description: 'The <b>Vector Integer4</b> function casts two integer values in a vector with four coordinates'
			SDPropertyCategory = 'Input'
				'componentsin' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'In'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
				'componentslast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Vector Integer4'
					Description: 'The <b>Vector Integer4</b> function casts two integer values in a vector with four coordinates'
					Types:
						'int4' (SDTypeInt4)
				
		[21/82] 'sbs::function::iswizzle1'
			Label: 'Swizzle Integer1'
			Description: 'The <b>Swizzle Integer1</b> function extracts a single specified integer coordinate from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt(int(0)) 
					Label: 'Constant'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer1'
					Description: 'The <b>Swizzle Integer1</b> function extracts a single specified integer coordinate from the input Vector'
					Types:
						'int' (SDTypeInt)
				
		[22/82] 'sbs::function::iswizzle2'
			Label: 'Swizzle Integer2'
			Description: 'The <b>Swizzle Integer2</b> function extracts two specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer2'
					Description: 'The <b>Swizzle Integer2</b> function extracts two specified integer coordinates from the input Vector'
					Types:
						'int2' (SDTypeInt2)
				
		[23/82] 'sbs::function::iswizzle3'
			Label: 'Swizzle Integer3'
			Description: 'The <b>Swizzle Integer3</b> function extracts three specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt3(int3(0,0,0)) 
					Label: 'Constant'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer3'
					Description: 'The <b>Swizzle Integer3</b> function extracts three specified integer coordinates from the input Vector'
					Types:
						'int3' (SDTypeInt3)
				
		[24/82] 'sbs::function::iswizzle4'
			Label: 'Swizzle Integer4'
			Description: 'The <b>Swizzle Integer4</b> function extracts four specified integer coordinates from the input Vector'
			SDPropertyCategory = 'Input'
				'vector' [CONNECTABLE, READ_ONLY]
					Label: 'Vector'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
				'__constant__' = SDValueInt4(int4(0,0,0,0)) 
					Label: 'Constant'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Swizzle Integer4'
					Description: 'The <b>Swizzle Integer4</b> function extracts four specified integer coordinates from the input Vector'
					Types:
						'int4' (SDTypeInt4)
				
		[25/82] 'sbs::function::set'
			Label: 'Set'
			Description: 'Set'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Set'
					Description: 'Set'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
				
		[26/82] 'sbs::function::get_float1'
			Label: 'Get Float'
			Description: 'The <b>Get Float</b> function accesses a function's or graph's  floating value input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float'
					Description: 'The <b>Get Float</b> function accesses a function's or graph's  floating value input(s)'
					Types:
						'float' (SDTypeFloat)
				
		[27/82] 'sbs::function::get_float2'
			Label: 'Get Float2'
			Description: 'The <b>Get Float2</b> function accesses a function's or graph's two floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float2'
					Description: 'The <b>Get Float2</b> function accesses a function's or graph's two floating values vector input(s)'
					Types:
						'float2' (SDTypeFloat2)
				
		[28/82] 'sbs::function::get_float3'
			Label: 'Get Float3'
			Description: 'The <b>Get Float3</b> function accesses a function's or graph's three floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float3'
					Description: 'The <b>Get Float3</b> function accesses a function's or graph's three floating values vector input(s)'
					Types:
						'float3' (SDTypeFloat3)
				
		[29/82] 'sbs::function::get_float4'
			Label: 'Get Float4'
			Description: 'The <b>Get Float4</b> function accesses a function's or graph's four floating values vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Float4'
					Description: 'The <b>Get Float4</b> function accesses a function's or graph's four floating values vector input(s)'
					Types:
						'float4' (SDTypeFloat4)
				
		[30/82] 'sbs::function::get_integer1'
			Label: 'Get Integer'
			Description: 'The <b>Get Integer</b> function accesses a function's or graph's integer input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer'
					Description: 'The <b>Get Integer</b> function accesses a function's or graph's integer input(s)'
					Types:
						'int' (SDTypeInt)
				
		[31/82] 'sbs::function::get_integer2'
			Label: 'Get Integer2'
			Description: 'The <b>Get Integer2</b> function accesses a function's or graph's two integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer2'
					Description: 'The <b>Get Integer2</b> function accesses a function's or graph's two integers vector input(s)'
					Types:
						'int2' (SDTypeInt2)
				
		[32/82] 'sbs::function::get_integer3'
			Label: 'Get Integer3'
			Description: 'The <b>Get Integer3</b> function accesses a function's or graph's three integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer3'
					Description: 'The <b>Get Integer3</b> function accesses a function's or graph's three integers vector input(s)'
					Types:
						'int3' (SDTypeInt3)
				
		[33/82] 'sbs::function::get_integer4'
			Label: 'Get Integer4'
			Description: 'The <b>Get Integer4</b> function accesses a function's or graph's four integers vector input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Integer4'
					Description: 'The <b>Get Integer4</b> function accesses a function's or graph's four integers vector input(s)'
					Types:
						'int4' (SDTypeInt4)
				
		[34/82] 'sbs::function::get_bool'
			Label: 'Get Boolean'
			Description: 'The <b>Get Boolean</b> function accesses a function's or graph's boolean input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get Boolean'
					Description: 'The <b>Get Boolean</b> function accesses a function's or graph's boolean input(s)'
					Types:
						'bool' (SDTypeBool)
				
		[35/82] 'sbs::function::get_string'
			Label: 'Get String'
			Description: 'The <b>Get String</b> function accesses a function's or graph's string input(s)'
			SDPropertyCategory = 'Input'
				'__constant__' = SDValueString(string()) 
					Label: 'Constant'
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Get String'
					Description: 'The <b>Get String</b> function accesses a function's or graph's string input(s)'
					Types:
						'string' (SDTypeString)
				
		[36/82] 'sbs::function::samplelum'
			Label: 'Sample Gray'
			Description: 'Returns the grayscale pixel value of input image.'
			SDPropertyCategory = 'Input'
				'pos' [CONNECTABLE, READ_ONLY]
					Label: 'Position'
					Types:
						'float2' (SDTypeFloat2)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sample Gray'
					Description: 'Returns the grayscale pixel value of input image.'
					Types:
						'float' (SDTypeFloat)
				
		[37/82] 'sbs::function::samplecol'
			Label: 'Sample Color'
			Description: 'Returns the color pixel value of input image.'
			SDPropertyCategory = 'Input'
				'pos' [CONNECTABLE, READ_ONLY]
					Label: 'Position'
					Types:
						'float2' (SDTypeFloat2)
				'__constant__' = SDValueInt2(int2(0,0)) 
					Label: 'Constant'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sample Color'
					Description: 'Returns the color pixel value of input image.'
					Types:
						'float4' (SDTypeFloat4)
				
		[38/82] 'sbs::function::tofloat'
			Label: 'To Float'
			Description: 'The <b>To Float</b> function converts integer to floating value'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float'
					Description: 'The <b>To Float</b> function converts integer to floating value'
					Types:
						'float' (SDTypeFloat)
				
		[39/82] 'sbs::function::tofloat2'
			Label: 'To Float2'
			Description: 'The <b>To Float2</b> function converts two integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float2'
					Description: 'The <b>To Float2</b> function converts two integer values to floating point values'
					Types:
						'float2' (SDTypeFloat2)
				
		[40/82] 'sbs::function::tofloat3'
			Label: 'To Float3'
			Description: 'The <b>To Float3</b> function converts three integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float3'
					Description: 'The <b>To Float3</b> function converts three integer values to floating point values'
					Types:
						'float3' (SDTypeFloat3)
				
		[41/82] 'sbs::function::tofloat4'
			Label: 'To Float4'
			Description: 'The <b>To Float4</b> function converts four integer values to floating point values'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Float4'
					Description: 'The <b>To Float4</b> function converts four integer values to floating point values'
					Types:
						'float4' (SDTypeFloat4)
				
		[42/82] 'sbs::function::toint1'
			Label: 'To Integer'
			Description: 'The <b>To Integer</b> function converts floating value to integer'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer'
					Description: 'The <b>To Integer</b> function converts floating value to integer'
					Types:
						'int' (SDTypeInt)
				
		[43/82] 'sbs::function::toint2'
			Label: 'To Integer2'
			Description: 'The <b>To Integer2</b> function converts two floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer2'
					Description: 'The <b>To Integer2</b> function converts two floating values to integers '
					Types:
						'int2' (SDTypeInt2)
				
		[44/82] 'sbs::function::toint3'
			Label: 'To Integer3'
			Description: 'The <b>To Integer3</b> function converts three floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer3'
					Description: 'The <b>To Integer3</b> function converts three floating values to integers '
					Types:
						'int3' (SDTypeInt3)
				
		[45/82] 'sbs::function::toint4'
			Label: 'To Integer4'
			Description: 'The <b>To Integer4</b> function converts four floating values to integers '
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'To Integer4'
					Description: 'The <b>To Integer4</b> function converts four floating values to integers '
					Types:
						'int4' (SDTypeInt4)
				
		[46/82] 'sbs::function::add'
			Label: 'Add'
			Description: 'The <b>Add</b> function adds two same type values: a+b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Add'
					Description: 'The <b>Add</b> function adds two same type values: a+b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[47/82] 'sbs::function::sub'
			Label: 'Subtraction'
			Description: 'The <b>Subtraction</b> function substracts two same type values: a-b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Subtraction'
					Description: 'The <b>Subtraction</b> function substracts two same type values: a-b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[48/82] 'sbs::function::mul'
			Label: 'Multiplication'
			Description: 'The <b>Multiplication</b> function multiplies two same type values: a × b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Multiplication'
					Description: 'The <b>Multiplication</b> function multiplies two same type values: a × b'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[49/82] 'sbs::function::mulscalar'
			Label: 'Scalar Multiplication'
			Description: 'The <b>Scalar Multiplication</b> function multiplies first entry value by a floating value: a × scalar'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'scalar' [CONNECTABLE, READ_ONLY]
					Label: 'Scalar'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Scalar Multiplication'
					Description: 'The <b>Scalar Multiplication</b> function multiplies first entry value by a floating value: a × scalar'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[50/82] 'sbs::function::div'
			Label: 'Division'
			Description: 'The <b>Division</b> function divides two same type values: a/b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Division'
					Description: 'The <b>Division</b> function divides two same type values: a/b'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[51/82] 'sbs::function::neg'
			Label: 'Negation'
			Description: 'The <b>Negation</b> function returns the negation value of entry: -a'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'Value'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Negation'
					Description: 'The <b>Negation</b> function returns the negation value of entry: -a'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[52/82] 'sbs::function::mod'
			Label: 'Modulo'
			Description: 'The <b>Modulo</b> function returns modulo of entry value: mod(a,divisor)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'Divisor'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Modulo'
					Description: 'The <b>Modulo</b> function returns modulo of entry value: mod(a,divisor)'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[53/82] 'sbs::function::dot'
			Label: 'Dot Product'
			Description: 'The <b>Dot product</b> function returns dot product between two same type values: dot(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Dot Product'
					Description: 'The <b>Dot product</b> function returns dot product between two same type values: dot(a,b)'
					Types:
						'float' (SDTypeFloat)
				
		[54/82] 'sbs::function::and'
			Label: 'And'
			Description: 'The <b>And</b> function returns true if the two boolean entries values are true: a&b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'And'
					Description: 'The <b>And</b> function returns true if the two boolean entries values are true: a&b'
					Types:
						'bool' (SDTypeBool)
				
		[55/82] 'sbs::function::or'
			Label: 'Or'
			Description: 'The <b>Or</b> function returns true if one of the two boolean entries values are true: a|b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Or'
					Description: 'The <b>Or</b> function returns true if one of the two boolean entries values are true: a|b'
					Types:
						'bool' (SDTypeBool)
				
		[56/82] 'sbs::function::not'
			Label: 'Not'
			Description: 'The <b>Not</b> function returns the negation boolean of entry: !x'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Not'
					Description: 'The <b>Not</b> function returns the negation boolean of entry: !x'
					Types:
						'bool' (SDTypeBool)
				
		[57/82] 'sbs::function::eq'
			Label: 'Equal'
			Description: 'The <b>Equal</b> function returns true if entries values are equal: a=b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Equal'
					Description: 'The <b>Equal</b> function returns true if entries values are equal: a=b'
					Types:
						'bool' (SDTypeBool)
				
		[58/82] 'sbs::function::noteq'
			Label: 'Not Equal'
			Description: 'The <b>Not Equal</b> function returns true if entries values are different: a ≠ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Not Equal'
					Description: 'The <b>Not Equal</b> function returns true if entries values are different: a ≠ b'
					Types:
						'bool' (SDTypeBool)
				
		[59/82] 'sbs::function::gt'
			Label: 'Greater'
			Description: 'The <b>Greater</b> function returns true if first entry is greater than second entry: a>b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Greater'
					Description: 'The <b>Greater</b> function returns true if first entry is greater than second entry: a>b'
					Types:
						'bool' (SDTypeBool)
				
		[60/82] 'sbs::function::gteq'
			Label: 'Greater or Equal'
			Description: 'The <b>Greater or Equal</b> function returns true if first entry is greater than second entry or equal: a ≥ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Greater or Equal'
					Description: 'The <b>Greater or Equal</b> function returns true if first entry is greater than second entry or equal: a ≥ b'
					Types:
						'bool' (SDTypeBool)
				
		[61/82] 'sbs::function::lr'
			Label: 'Lower'
			Description: 'The <b>Lower</b> function returns true if first entry is lower than second entry: a &lt b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Lower'
					Description: 'The <b>Lower</b> function returns true if first entry is lower than second entry: a &lt b'
					Types:
						'bool' (SDTypeBool)
				
		[62/82] 'sbs::function::lreq'
			Label: 'Lower or Equal'
			Description: 'The <b>Lower or Equal</b> function returns true if first entry is lower than second entry or equal: a ≤ b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Lower or Equal'
					Description: 'The <b>Lower or Equal</b> function returns true if first entry is lower than second entry or equal: a ≤ b'
					Types:
						'bool' (SDTypeBool)
				
		[63/82] 'sbs::function::abs'
			Label: 'Absolute'
			Description: 'The <b>Absolute</b> function returns absolute value of entry value: abs(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'XA'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Absolute'
					Description: 'The <b>Absolute</b> function returns absolute value of entry value: abs(a)'
					Types:
						'int' (SDTypeInt)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[64/82] 'sbs::function::floor'
			Label: 'Floor'
			Description: 'The <b>Floor</b> function returns the highest value lower or equal to the entry value: floor(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Floor'
					Description: 'The <b>Floor</b> function returns the highest value lower or equal to the entry value: floor(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[65/82] 'sbs::function::ceil'
			Label: 'Ceil'
			Description: 'The <b>Ceil</b> function returns the smallest value upper or equal to the entry value: ceil(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Ceil'
					Description: 'The <b>Ceil</b> function returns the smallest value upper or equal to the entry value: ceil(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[66/82] 'sbs::function::cos'
			Label: 'Cosine'
			Description: 'The <b>Cosine</b> function returns cosine value of entry value: cos(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'a'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Cosine'
					Description: 'The <b>Cosine</b> function returns cosine value of entry value: cos(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[67/82] 'sbs::function::sin'
			Label: 'Sine'
			Description: 'The <b>Sine</b> function returns sine value of entry value: sin(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sine'
					Description: 'The <b>Sine</b> function returns sine value of entry value: sin(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[68/82] 'sbs::function::tan'
			Label: 'Tangent'
			Description: 'The <b>Tangent</b> function returns the tangent value of entry value: tan(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Tangent'
					Description: 'The <b>Tangent</b> function returns the tangent value of entry value: tan(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[69/82] 'sbs::function::atan2'
			Label: 'Arc Tangent 2'
			Description: 'The <b>Arc Tangent 2</b> function returns the arc tangent value of the two floating value vector entry: arcTan2(xa,ya)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Arc Tangent 2'
					Description: 'The <b>Arc Tangent 2</b> function returns the arc tangent value of the two floating value vector entry: arcTan2(xa,ya)'
					Types:
						'float' (SDTypeFloat)
				
		[70/82] 'sbs::function::cartesian'
			Label: 'Cartesian'
			Description: 'The <b>Cartesian</b> function converts two polar cordinates to two carthesian coordinates: carth(rho,theta)'
			SDPropertyCategory = 'Input'
				'rho' [CONNECTABLE, READ_ONLY]
					Label: 'Rho'
					Types:
						'float' (SDTypeFloat)
				'theta' [CONNECTABLE, READ_ONLY]
					Label: 'Theta'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Cartesian'
					Description: 'The <b>Cartesian</b> function converts two polar cordinates to two carthesian coordinates: carth(rho,theta)'
					Types:
						'float2' (SDTypeFloat2)
				
		[71/82] 'sbs::function::sqrt'
			Label: 'Square Root'
			Description: 'The <b>Square Root</b> function returns square root value of entry value: √¯ a'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Square Root'
					Description: 'The <b>Square Root</b> function returns square root value of entry value: √¯ a'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[72/82] 'sbs::function::log'
			Label: 'Logarithm'
			Description: 'The <b>Logarithm</b> function returns the logarithmic value of entry value: log(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Logarithm'
					Description: 'The <b>Logarithm</b> function returns the logarithmic value of entry value: log(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[73/82] 'sbs::function::exp'
			Label: 'Exponential'
			Description: 'The <b>Exponential</b> function returns the exponential value of entry value: exp(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Exponential'
					Description: 'The <b>Exponential</b> function returns the exponential value of entry value: exp(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[74/82] 'sbs::function::log2'
			Label: 'Logarithm base 2'
			Description: 'The <b>Log2</b> function returns the logarithmic value base 2 of entry value: log2(a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Logarithm base 2'
					Description: 'The <b>Log2</b> function returns the logarithmic value base 2 of entry value: log2(a)'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[75/82] 'sbs::function::pow2'
			Label: '2Pow'
			Description: 'The <b>2Pow</b> function returns the pow 2 value of entry value: 2<sup><font size="+2">a</font></sup>'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: '2Pow'
					Description: 'The <b>2Pow</b> function returns the pow 2 value of entry value: 2<sup><font size="+2">a</font></sup>'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[76/82] 'sbs::function::lerp'
			Label: 'Linear Interpolation'
			Description: 'The <b>Linear Interpolation</b> function returns the linear interpolation between two values in function of a floating value: (1-x)a+x × b'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE, READ_ONLY]
					Label: 'X'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Linear Interpolation'
					Description: 'The <b>Linear Interpolation</b> function returns the linear interpolation between two values in function of a floating value: (1-x)a+x × b'
					Types:
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[77/82] 'sbs::function::min'
			Label: 'Minimum'
			Description: 'The <b>Minimum</b> function returns minimum value of entries values: min(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Minimum'
					Description: 'The <b>Minimum</b> function returns minimum value of entries values: min(a,b)'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[78/82] 'sbs::function::max'
			Label: 'Maximum'
			Description: 'The <b>Maximum</b> function returns maximum value of entries values: max(a,b)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE, READ_ONLY]
					Label: 'B'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Maximum'
					Description: 'The <b>Maximum</b> function returns maximum value of entries values: max(a,b)'
					Types:
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
				
		[79/82] 'sbs::function::rand'
			Label: 'Random'
			Description: 'The <b>Rand</b> function generates a floating random value between 0 and the entry value (a)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE, READ_ONLY]
					Label: 'A'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Random'
					Description: 'The <b>Rand</b> function generates a floating random value between 0 and the entry value (a)'
					Types:
						'float' (SDTypeFloat)
				
		[80/82] 'sbs::function::sequence'
			Label: 'Sequence'
			Description: 'Sequence'
			SDPropertyCategory = 'Input'
				'seqin' [CONNECTABLE, READ_ONLY, VARIADIC]
					Label: 'In'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'seqlast' [CONNECTABLE, READ_ONLY]
					Label: 'Last'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Sequence'
					Description: 'Sequence'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
		[81/82] 'sbs::function::ifelse'
			Label: 'If...Else'
			Description: 'The <b>If...Else</b> function returns the second value if the boolean entry is true else returns the third entry'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE, READ_ONLY]
					Label: 'Condition'
					Types:
						'bool' (SDTypeBool)
				'ifpath' [CONNECTABLE, READ_ONLY]
					Label: 'If'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				'elsepath' [CONNECTABLE, READ_ONLY]
					Label: 'Else'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'If...Else'
					Description: 'The <b>If...Else</b> function returns the second value if the boolean entry is true else returns the third entry'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
		[82/82] 'sbs::function::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> function is doing a passthrough (output=input)'
			SDPropertyCategory = 'Input'
				'input' [CONNECTABLE, READ_ONLY]
					Label: 'Input'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Dot'
					Description: 'The <b>Dot</b> function is doing a passthrough (output=input)'
					Types:
						'bool' (SDTypeBool)
						'int' (SDTypeInt)
						'int2' (SDTypeInt2)
						'int3' (SDTypeInt3)
						'int4' (SDTypeInt4)
						'float' (SDTypeFloat)
						'float2' (SDTypeFloat2)
						'float3' (SDTypeFloat3)
						'float4' (SDTypeFloat4)
						'string' (SDTypeString)
						'void' (SDTypeVoid)
				
[2/27] 'sbs::fxmap' (SDModule)
	Definitions:
		[1/4] 'sbs::fxmap::paramset'
			Label: 'Quadrant'
			Description: 'Takes input image(s), positions them, and, if defined, also renders the node's own pattern or image'
			SDPropertyCategory = 'Input'
				'opacity' = SDValueFloat4(float4(1,1,1,1)) 
					Label: 'Color / Luminosity'
					Description: 'Pattern <B>Color / Luminosity</B>multiplier'
					Types:
						'float4' (SDTypeFloat4)
				'branchoffset' = SDValueFloat2(float2(0,0)) 
					Label: 'Branch Offset'
					Description: '<b>Branch Offset</b>. This value will be applied to the entire branch, beginning with this Parameter Set'
					Types:
						'float2' (SDTypeFloat2)
				'patterntype' = SDValueEnum("sbs::fxmap::patterntype",0) 
					Label: 'Pattern'
					Description: 'Select pattern'
					Types:
						'sbs::fxmap::patterntype' (SDTypeEnum)
						'int' (SDTypeInt)
				'frameoffset' = SDValueFloat2(float2(0,0)) 
					Label: 'Pattern  Offset'
					Description: '<b>Pattern  Offset</b> in 2D space. This value will apply only to this Parameter Set'
					Types:
						'float2' (SDTypeFloat2)
				'patternsize' = SDValueFloat2(float2(1,1)) 
					Label: 'Pattern Size'
					Description: 'Morphlet pattern size'
					Types:
						'float2' (SDTypeFloat2)
				'patternrotation' = SDValueFloat(float(0)) 
					Label: 'Pattern Rotation'
					Description: 'Morphlet pattern rotation'
					Types:
						'float' (SDTypeFloat)
				'patternsuppl' = SDValueFloat(float(0)) 
					Label: 'Pattern Variation'
					Description: '<b>Pattern Variation</b> parameter. Applies to: Brick, Gradation, Waves, Half Bell, Crescent, Capsule, Gradation w. Offset'
					Types:
						'float' (SDTypeFloat)
				'blendingmode' = SDValueEnum("sbs::fxmap::blendingmode",0) 
					Label: 'Blending Mode'
					Description: 'Blending mode'
					Types:
						'sbs::fxmap::blendingmode' (SDTypeEnum)
						'int' (SDTypeInt)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'imageindex' = SDValueInt(int(0)) 
					Label: 'Input Image Index'
					Description: 'Input Image Pattern only: zero based index of the input plugged to FX-Map node.'
					Types:
						'int' (SDTypeInt)
				'imagepremul' = SDValueBool(bool(false)) 
					Label: 'Input Image Alpha'
					Description: 'Color Input Image Pattern only: alpha channel interpretation'
					Types:
						'bool' (SDTypeBool)
				'imagefiltering' = SDValueEnum("sbs::fxmap::imagefiltering",0) 
					Label: 'Input Image Filtering'
					Description: 'Input Image Pattern only: filtering mode'
					Types:
						'sbs::fxmap::imagefiltering' (SDTypeEnum)
						'int' (SDTypeInt)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				'output2' [CONNECTABLE, READ_ONLY]
					Label: 'Output 2'
					Description: 'Output 2'
					Types:
						'Undefined' (SDTypeCustom)
				'output3' [CONNECTABLE, READ_ONLY]
					Label: 'Output 3'
					Description: 'Output 3'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[2/4] 'sbs::fxmap::markov2'
			Label: 'Switch'
			Description: 'Switches between primary and secondary outputs'
			SDPropertyCategory = 'Input'
				'switch' = SDValueBool(bool(false)) 
					Label: 'Selector'
					Description: 'Selector'
					Types:
						'bool' (SDTypeBool)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[3/4] 'sbs::fxmap::addnode'
			Label: 'Iterate'
			Description: 'Takes the secondary (right) output and duplicates it over the optional background (left), as many times as specified'
			SDPropertyCategory = 'Input'
				'numberadded' = SDValueInt(int(1)) 
					Label: 'Iterations'
					Description: 'Number of times the input node is duplicated'
					Types:
						'int' (SDTypeInt)
				'randomseed' = SDValueInt(int(0)) 
					Label: 'Random Seed'
					Description: 'Random seed'
					Types:
						'int' (SDTypeInt)
				'randominherited' = SDValueBool(bool(true)) 
					Label: 'Inherit Random'
					Description: 'When set, the random seed value is relative to the parent graph's random seed'
					Types:
						'bool' (SDTypeBool)
				'output0' [CONNECTABLE, READ_ONLY]
					Label: 'Output 0'
					Description: 'Output 0'
					Types:
						'Undefined' (SDTypeCustom)
				'output1' [CONNECTABLE, READ_ONLY]
					Label: 'Output 1'
					Description: 'Output 1'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
		[4/4] 'sbs::fxmap::passthrough'
			Label: 'Dot'
			Description: 'The <b>Dot</b> node is not doing anything'
			SDPropertyCategory = 'Input'
				'output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output'
					Types:
						'Undefined' (SDTypeCustom)
				
			SDPropertyCategory = 'Output'
				'unique_filter_output' [CONNECTABLE, READ_ONLY]
					Label: 'Output'
					Description: 'Output Connector'
					Types:
						'Undefined' (SDTypeCustom)
				
	Types:
		[1/3] 'sbs::fxmap::imagefiltering'
			'sbs::fxmap::imagefiltering' (SDTypeEnum)
				int bilinearmipmaps = SDValueInt(int(0))
					Label: 'Bilinear + Mipmaps'
					Description: 'Bilinear + Mipmaps'
				int bilinear = SDValueInt(int(1))
					Label: 'Bilinear'
					Description: 'Bilinear'
				int nearest = SDValueInt(int(2))
					Label: 'Nearest'
					Description: 'Nearest'
		[2/3] 'sbs::fxmap::blendingmode'
			'sbs::fxmap::blendingmode' (SDTypeEnum)
				int addsub = SDValueInt(int(0))
					Label: 'Add Sub'
					Description: 'Add Sub'
				int max = SDValueInt(int(1))
					Label: 'Max'
					Description: 'Max'
				int alphablend = SDValueInt(int(2))
					Label: 'Alpha Blend'
					Description: 'Alpha Blend'
		[3/3] 'sbs::fxmap::patterntype'
			'sbs::fxmap::patterntype' (SDTypeEnum)
				int null = SDValueInt(int(0))
					Label: 'No Pattern'
					Description: 'No Pattern'
				int image_entry = SDValueInt(int(1))
					Label: 'Input Image'
					Description: 'Input Image'
				int square = SDValueInt(int(2))
					Label: 'Square'
					Description: 'Square'
				int disc = SDValueInt(int(3))
					Label: 'Disc'
					Description: 'Disc'
				int paraboloid = SDValueInt(int(4))
					Label: 'Paraboloid'
					Description: 'Paraboloid'
				int bell = SDValueInt(int(5))
					Label: 'Bell'
					Description: 'Bell'
				int gaussian = SDValueInt(int(6))
					Label: 'Gaussian'
					Description: 'Gaussian'
				int thorn = SDValueInt(int(7))
					Label: 'Thorn'
					Description: 'Thorn'
				int pyramid = SDValueInt(int(8))
					Label: 'Pyramid'
					Description: 'Pyramid'
				int brick = SDValueInt(int(9))
					Label: 'Brick'
					Description: 'Brick'
				int gradation = SDValueInt(int(10))
					Label: 'Gradation'
					Description: 'Gradation'
				int waves = SDValueInt(int(11))
					Label: 'Waves'
					Description: 'Waves'
				int halfbell = SDValueInt(int(12))
					Label: 'Half Bell'
					Description: 'Half Bell'
				int ridgebell = SDValueInt(int(13))
					Label: 'Ridged Bell'
					Description: 'Ridged Bell'
				int crescent = SDValueInt(int(14))
					Label: 'Crescent'
					Description: 'Crescent'
				int capsule = SDValueInt(int(15))
					Label: 'Capsule'
					Description: 'Capsule'
				int cone = SDValueInt(int(16))
					Label: 'Cone'
					Description: 'Cone'
				int gradoffset = SDValueInt(int(17))
					Label: 'Gradation w. Offset'
					Description: 'Gradation w. Offset'
[3/27] 'mdl::alg::materials::physically_specular_glossiness' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::physically_specular_glossiness::physically_specular_glossiness'
			Label: 'Physically Specular Glossiness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___142) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'specular' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Specular'
					Description: 'Specular channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'glossiness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Glossiness'
					Description: 'Glossiness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Refraction Color'
					Description: 'Refraction channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[4/27] 'mdl::nvidia::core_definitions' (SDMDLModule)
	Definitions:
		[1/51] 'mdl::nvidia::core_definitions::texture_return.tint(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[2/51] 'mdl::nvidia::core_definitions::texture_return.mono(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[3/51] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::material_type)'
			Description: 'used to annotate materials as hint for grouping in the ui'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[4/51] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::emission_type)'
			Description: 'Used in light sources to define the emission mode'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/51] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::cell_type)'
			Description: 'used to define the behavior of Worley noise'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/51] 'mdl::nvidia::core_definitions::int(::nvidia::core_definitions::cell_base)'
			Description: 'used to annotate materials as hint for grouping in the ui'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/51] 'mdl::nvidia::core_definitions::blend_colors(color,color,::base::color_layer_mode,float)'
			Label: 'Blend colors'
			Description: 'Allows combining textures in varied ways'
			SDPropertyCategory = 'Input'
				'color_1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::base::color_layer_mode",0) [CONNECTABLE]
					Label: 'Blend mode'
					Description: 'Describes how Color 1 and Color 2 are combined'
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Blend weight'
					Description: 'Defines strength of the effect. At weight of 0, only color 1 will be visible. At weight 1, the blend function will have full effect'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[8/51] 'mdl::nvidia::core_definitions::file_texture(texture_2d,::base::mono_mode,float,float,float2,float2,float,bool,int,bool)'
			Label: 'Bitmap texture'
			Description: 'Allows texturing using image files of various file formats'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Bitmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'mono_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Label: 'Scalar mode'
					Description: 'Defines how the texture applies to scalar parameters'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'brightness' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Brightness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'contrast' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Contrast'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture, color will be black and the scalar value will be 0'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'invert' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Invert image'
					Description: 'Invert image'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[9/51] 'mdl::nvidia::core_definitions::perlin_noise_texture(color,color,bool,int,bool,float,float,float3,float3,float3,int)'
			Label: 'Perlin noise texture'
			Description: 'Allow texturing with a random noise pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_levels' = SDValueInt(int(3)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[10/51] 'mdl::nvidia::core_definitions::perlin_noise_bump_texture(float,float3,int,bool,bool,float,float,float3,float3,int)'
			Label: 'Perlin noise texture'
			Description: 'Allows texturing a random noise pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[11/51] 'mdl::nvidia::core_definitions::worley_noise_texture(color,color,bool,int,::nvidia::core_definitions::cell_type,::nvidia::core_definitions::cell_base,float,float,float3,float3,float3)'
			Label: 'Cellular noise texture'
			Description: 'Allow texturing with a cell forming pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'mode' = SDValueEnum("mdl::nvidia::core_definitions::cell_type",0) [CONNECTABLE]
					Label: 'Cell type'
					Description: 'Cell pattern type'
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum) [Uniform]
				'metric' = SDValueEnum("mdl::nvidia::core_definitions::cell_base",0) [CONNECTABLE]
					Label: 'Cell shape'
					Description: 'The shape of the cell form'
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[12/51] 'mdl::nvidia::core_definitions::worley_noise_bump_texture(float,::nvidia::core_definitions::cell_base,bool,int,float,float,float3,float3,float3)'
			Label: 'Cellular noise texture'
			Description: 'Allow texturing with a cell forming pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'metric' = SDValueEnum("mdl::nvidia::core_definitions::cell_base",0) [CONNECTABLE]
					Label: 'Cell shape'
					Description: 'The shape of the cell form'
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum) [Uniform]
				'object_space' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Upper threshold'
					Description: 'Lowering this value will create bigger areas uniformly colored with Color 1'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Lower threshold'
					Description: 'Increasing this value will create bigger areas uniformly colored with Color 2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[13/51] 'mdl::nvidia::core_definitions::flow_noise_texture(color,color,bool,int,int,bool,float,float,float,float,float,float3,float3,float3)'
			Label: 'Flow noise texture'
			Description: 'Allow texturing with a 2D noise pattern suitable for waves'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'noise_levels' = SDValueInt(int(3)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Phase offset'
					Description: 'Controls the 3rd dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Level intensity gain'
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Label: 'Level scaling'
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Progressive u scale'
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Progressive v offset'
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[14/51] 'mdl::nvidia::core_definitions::flow_noise_bump_texture(float,float3,int,bool,int,bool,float,float,float,float,float,float3,float3)'
			Label: 'Flow noise texture'
			Description: 'Allow texturing with a 2D noise pattern suitable for waves'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Label: 'Levels'
					Description: 'Higher amounts will add detail to the noise'
					Types:
						'int' (SDTypeInt) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Billowing appearance'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Phase offset'
					Description: 'Controls the 3rd dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Level intensity gain'
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Label: 'Level scaling'
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Progressive u scale'
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Progressive v offset'
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[15/51] 'mdl::nvidia::core_definitions::checker_texture(color,color,float3,float3,bool,float,float3,int)'
			Label: '3d checker texture'
			Description: 'Allows texturing a checkerboard pattern'
			SDPropertyCategory = 'Input'
				'color1' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color 1'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blur'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[16/51] 'mdl::nvidia::core_definitions::checker_bump_texture(float,float,bool,float3,float3,float3,int)'
			Label: '3d checker texture'
			Description: 'Allows texturing a checkerboard pattern'
			SDPropertyCategory = 'Input'
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blur'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'object_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Use object space'
					Description: 'If off, UV space will be used. If on, 3d texturing in object space will apply. For applications that do not support object space, world space will be used'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scaling' = SDValueFloat3(float3(10,10,10)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Only applies if "Use object space" is off. Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/51] 'mdl::nvidia::core_definitions::file_bump_texture(texture_2d,::base::mono_mode,float2,float2,float,bool,float,int)'
			Label: 'Bitmap texture'
			Description: 'Allows texturing using image files of various file formats'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Bitmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'bump_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Label: 'Bump mode'
					Description: 'Defines how the texture is evaluated to create the bumps'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture the surface will be flat'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Bump strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/51] 'mdl::nvidia::core_definitions::normalmap_texture(texture_2d,float2,float2,float,bool,float,int)'
			Label: 'Normalmap texture'
			Description: 'Allows the use of tangent space normal maps'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Label: 'Normalmap file'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'scaling' = SDValueFloat2(float2(1,1)) [CONNECTABLE]
					Label: 'Tiling'
					Description: 'Controls the scale of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'translation' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Label: 'Offset'
					Description: 'Controls position of the texture on the object'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation'
					Description: 'Rotation angle of the texture in degrees'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Clip'
					Description: 'If set to true, texture will not repeat. Outside of the texture the surface will be flat'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Strength'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Label: 'UV space index'
					Description: 'Selects a specific UV space'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[19/51] 'mdl::nvidia::core_definitions::operator?(bool,::nvidia::core_definitions::material_type,::nvidia::core_definitions::material_type)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				
		[20/51] 'mdl::nvidia::core_definitions::operator?(bool,::nvidia::core_definitions::emission_type,::nvidia::core_definitions::emission_type)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				
		[21/51] 'mdl::nvidia::core_definitions::operator?(bool,::nvidia::core_definitions::cell_type,::nvidia::core_definitions::cell_type)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				
		[22/51] 'mdl::nvidia::core_definitions::operator?(bool,::nvidia::core_definitions::cell_base,::nvidia::core_definitions::cell_base)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				
		[23/51] 'mdl::nvidia::core_definitions::diffuse'
			Label: 'Simple diffuse'
			Description: 'A basic diffuse material'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.800000012,0.800000012,0.800000012)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Diffuse roughness'
					Description: 'Higher roughness values lead a powdery appearance'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___154) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[24/51] 'mdl::nvidia::core_definitions::scratched_metal'
			Label: 'Metal'
			Description: 'A metallic material with stretched reflections'
			SDPropertyCategory = 'Input'
				'metal_color' = SDValueColorRGB(ColorRGB(0.899999976,0.899999976,0.899999976)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'glossy_weight' = SDValueFloat(float(0.899999976)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Intensity of highlights and glossy reflections and highlights'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___155) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[25/51] 'mdl::nvidia::core_definitions::metal'
			Label: 'Simple metal, deprecated'
			Description: 'A basic metallic material'
			SDPropertyCategory = 'Input'
				'metal_color' = SDValueColorRGB(ColorRGB(0.899999976,0.899999976,0.899999976)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'glossy_weight' = SDValueFloat(float(0.899999976)) [CONNECTABLE]
					Label: 'Reflectivity'
					Description: 'Intensity of highlights and glossy reflections and highlights'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___156) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[26/51] 'mdl::nvidia::core_definitions::plastic'
			Label: 'Simple plastic, deprecated'
			Description: 'A basic dielectric, works for everything opaque that is not metallic'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.25)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___157) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[27/51] 'mdl::nvidia::core_definitions::scratched_plastic'
			Label: 'Plastic'
			Description: 'A basic dielectric, works for everything opaque that is not metallic. Supports stretched highlights'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Additional Reflectivity control'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___158) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[28/51] 'mdl::nvidia::core_definitions::retroreflective'
			Label: 'Retroreflective'
			Description: 'A material with a retroreflective component, works well for road signs and retroreflective stickers'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.200000003,0.0299999993,0.0299999993)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'reflection_color' = SDValueColorRGB(ColorRGB(0.800000012,0.800000012,0.0299999993)) [CONNECTABLE]
					Label: 'Reflection color'
					Description: 'The color of the retroreflection'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.150000006)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'normal_reflectivity' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Reflection weight facing'
					Description: 'Reflectivity control for geometry facing the viewer'
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight edge'
					Description: 'Reflectivity control for the reflectivity at geometry edges'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___159) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[29/51] 'mdl::nvidia::core_definitions::flex_material'
			Label: 'Flexible material model'
			Description: 'A complex material that can be configured to a wide variety of looks'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'diffuse_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Diffuse roughness'
					Description: 'Higher roughness values lead to a more "powdery" look'
					Types:
						'float' (SDTypeFloat)
				'is_metal' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Metallic material'
					Description: 'If true, reflection will be colored and independent of view direction. If false, reflection will be white and direction dependent. Directional dependence is in this case based on the IOR (Fresnell effect)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Controls the amount of reflection'
					Types:
						'float' (SDTypeFloat)
				'reflection_roughness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to more blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection anisotropy'
					Description: 'Higher values will stretch the highlight'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy rotation'
					Description: 'Changes the orientation of the anisotropy. A value of 1 will rotate the orientation 360 degrees'
					Types:
						'float' (SDTypeFloat)
				'transparency' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission weight'
					Description: 'Weights how much light passes through the object vs. its diffuse reflectivity'
					Types:
						'float' (SDTypeFloat)
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Color effect for transmission independent of thickness of the object. Think stained glass'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at "Volume reference distance"(m)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'transmission_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Transmission roughness'
					Description: 'higher values lead to objects seen through the material to appear blurry'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: 'If the material is not "Thin walled", "Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines refraction in the volume. It also influences the reflectivity for materials that are not metallic'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Thin walled'
					Description: 'Thin walled materials do not refract and do not have volume effects. Good for soap bubbles or window glass'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___160) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. 0 switches dispersion off, dispersive materials have abbe numbers between 25 and 85'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[30/51] 'mdl::nvidia::core_definitions::thin_glass'
			Label: 'Thin glass'
			Description: 'A basic transmissive dielectric without refraction or volume'
			SDPropertyCategory = 'Input'
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___161) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[31/51] 'mdl::nvidia::core_definitions::thin_translucent'
			Label: 'Thin translucent'
			Description: 'A diffuse transmissive dielectric material'
			SDPropertyCategory = 'Input'
				'surface_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Diffuse color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucent_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Translucence color'
					Description: 'The color of the volume of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'translucency' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Translucence weight'
					Description: 'Fraction of the incoming light that should be visible on the backside'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___162) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[32/51] 'mdl::nvidia::core_definitions::thick_glass'
			Label: 'Thick glass'
			Description: 'A basic transmissive dielectric with refraction and coloring in the volume'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'Colors the light entering the volume. Think stained glass'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'glass_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the glass body'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" will be reached at this distance (m). Enter a typical thickness of objects made of this material here'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___163) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. 0.0 switches dispersion off, dispersive materials have abbe numbers between 25.0 and 85.0'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[33/51] 'mdl::nvidia::core_definitions::thick_translucent'
			Label: 'Thick translucent'
			Description: 'A subsurface scattering material'
			SDPropertyCategory = 'Input'
				'transmission_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Transmission color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'volume_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Volume color'
					Description: 'The color of the volume at "Volume reference distance"'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume_scattering' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Volume scattering'
					Description: 'Amount of scattering for objects at "Volume reference distance"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'Overall reflectivity of the material'
					Types:
						'float' (SDTypeFloat)
				'base_thickness' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Volume reference distance'
					Description: '"Volume color" and "Volume scattering" will be reached at this distance (m). Enter a typical thickness of objects made of this material here'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___164) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity as well as amount of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Abbe number'
					Description: 'Controls dispersion. 0 switches dispersion off, dispersive materials have abbe numbers between 25 and 85'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[34/51] 'mdl::nvidia::core_definitions::blend'
			Label: 'Surface blender'
			Description: 'Blend surface characteristics of 2 materials or mask them using a texture'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic__default_call___166) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material the blend is based on'
					Types:
						'mdl::material' (SDTypeStruct)
				'blend' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal__default_call___168) [CONNECTABLE]
					Label: 'Blend Material'
					Description: 'Surface properties to use for the blend'
					Types:
						'mdl::material' (SDTypeStruct)
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Blend weight'
					Description: 'Blend weight or mask texture'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[35/51] 'mdl::nvidia::core_definitions::apply_clearcoat'
			Label: 'Apply clear coating'
			Description: 'Apply clear coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___170) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity of the clear coat'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'visibility' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Coat visibility'
					Description: 'Determines visibility of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___171) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'coat_filter_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Coat filter color'
					Description: 'For simulating coatings with colored resins that modulate the color of underlying layers'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[36/51] 'mdl::nvidia::core_definitions::apply_thinfilm'
			Label: 'Apply thin film'
			Description: 'Apply thin film to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal__default_call___173) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get shows a thin film effect'
					Types:
						'mdl::material' (SDTypeStruct)
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'The IOR of the thin film interface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'thickness' = SDValueFloat(float(400)) [CONNECTABLE]
					Label: 'Thickness'
					Description: 'Thickness of the thin film in nm'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[37/51] 'mdl::nvidia::core_definitions::apply_metalcoat'
			Label: 'Apply thin metal coating'
			Description: 'Apply metal coat to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___175) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a metallic coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'metal_color' = SDValueColorRGB(ColorRGB(0.949999988,0.949999988,0.949999988)) [CONNECTABLE]
					Label: 'Reflection color'
					Description: 'the color of the metal'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'visibility' = SDValueFloat(float(0.300000012)) [CONNECTABLE]
					Label: 'Reflection weight'
					Description: 'the opacity of the coat'
					Types:
						'float' (SDTypeFloat)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Reflection roughness'
					Description: 'Determines roughness of the metal coat'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___176) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[38/51] 'mdl::nvidia::core_definitions::apply_dustcover'
			Label: 'Apply a cover of dust'
			Description: 'Apply a diffuse cover of dust or dirt'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___178) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'dust_color' = SDValueColorRGB(ColorRGB(0.699999988,0.699999988,0.699999988)) [CONNECTABLE]
					Label: 'Dust color'
					Description: 'The color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'visibility' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Dust density'
					Description: 'The opacity of the cover'
					Types:
						'float' (SDTypeFloat)
				'dust_density' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Dust amount'
					Description: 'How dusty the material is'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___179) [CONNECTABLE]
					Label: 'Bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[39/51] 'mdl::nvidia::core_definitions::apply_colorfalloff_v2'
			Label: 'Apply a color falloff'
			Description: 'Makes the color view dependent'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal__default_call___181) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'color_0' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Description: 'Color 1 (facing direction)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_1' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 2'
					Description: 'Color 2'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_2' = SDValueColorRGB(ColorRGB(0,0,1)) [CONNECTABLE]
					Label: 'Color 3'
					Description: 'Color 3'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_3' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 4'
					Description: 'Color 4'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'color_4' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 5'
					Description: 'Color 5 (object edges)'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[40/51] 'mdl::nvidia::core_definitions::apply_colorfalloff'
			Label: 'Apply a color falloff, deprecated'
			Description: 'Makes the color view dependent'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_metal__default_call___183) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a clear coating applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'color_0' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 1'
					Description: 'the color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_1' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 2'
					Description: 'the color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_2' = SDValueColorRGB(ColorRGB(0,0,1)) [CONNECTABLE]
					Label: 'Color 3'
					Description: 'the color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_3' = SDValueColorRGB(ColorRGB(1,0,0)) [CONNECTABLE]
					Label: 'Color 4'
					Description: 'the color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_4' = SDValueColorRGB(ColorRGB(0,1,0)) [CONNECTABLE]
					Label: 'Color 5'
					Description: 'the color of the dust'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[41/51] 'mdl::nvidia::core_definitions::apply_metallicflakes'
			Label: 'Apply flake coating'
			Description: 'Apply layer of metallic flakes to an existing material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___185) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a flake layer applied'
					Types:
						'mdl::material' (SDTypeStruct)
				'flake_color' = SDValueColorRGB(ColorRGB(0.899999976,0.699999988,0.5)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the Flakes'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Determines roughness of the metallic flakes'
					Types:
						'float' (SDTypeFloat)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Determines size of the metallic flakes, in mm'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'amount' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Flake amount'
					Description: 'Determines amount of visible metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Flake opacity'
					Description: 'Determines visibility of the metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake orientation randomness'
					Description: 'Larger numbers will increase the sparkle radius around highlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[42/51] 'mdl::nvidia::core_definitions::flake_paint'
			Label: 'Flaky paint'
			Description: 'A multi layer paint material containing flakes'
			SDPropertyCategory = 'Input'
				'base_color' = SDValueColorRGB(ColorRGB(0.300000012,0.00999999978,0.00999999978)) [CONNECTABLE]
					Label: 'Base color'
					Description: 'The color of the base paint'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'flake_color' = SDValueColorRGB(ColorRGB(0.600000024,1,0.100000001)) [CONNECTABLE]
					Label: 'Flake color'
					Description: 'The color of the Flakes'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.150000006)) [CONNECTABLE]
					Label: 'Flake roughness'
					Description: 'Determines roughness of the metallic flakes'
					Types:
						'float' (SDTypeFloat)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Determines size of the metallic flakes, in mm'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'amount' = SDValueFloat(float(0.400000006)) [CONNECTABLE]
					Label: 'Flake amount'
					Description: 'Determines amount of visible metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'opacity' = SDValueFloat(float(0.800000012)) [CONNECTABLE]
					Label: 'Flake weight'
					Description: 'Determines visibility of the metallic flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake orientation randomness'
					Description: 'Larger numbers will increase the sparkle radius around highlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.60000002)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Determines reflectivity of the clear coat'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'coat_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Coat roughness'
					Description: 'Determines roughness of the clear coat'
					Types:
						'float' (SDTypeFloat)
				'coat_bump' = SDMDLValueCall(mdl::state::normal()__default_call___186) [CONNECTABLE]
					Label: 'Coat bump'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[43/51] 'mdl::nvidia::core_definitions::add_cutout'
			Label: 'Add cut-outs'
			Description: 'Adds cut-outs to existing materials. Also forces material to be thin-walled. Good for modeling leaves, grass or fences'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic__default_call___188) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a cut-out'
					Types:
						'mdl::material' (SDTypeStruct)
				'cutout' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Cutout'
					Description: 'Determines where the object is visible'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[44/51] 'mdl::nvidia::core_definitions::add_simple_sticker'
			Label: 'Add simple sticker'
			Description: 'A quick way for adding simple stickers to a material. The sticker is a simple dielectric and needs a mask to define its extent'
			SDPropertyCategory = 'Input'
				'diffuse_color' = SDValueColorRGB(ColorRGB(0.5,0.5,0.5)) [CONNECTABLE]
					Label: 'Sticker color'
					Description: 'The color of the material'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0.0500000007)) [CONNECTABLE]
					Label: 'Sticker roughness'
					Description: 'Higher roughness values lead to bigger highlights and blurry reflections'
					Types:
						'float' (SDTypeFloat)
				'ior' = SDValueFloat(float(1.39999998)) [CONNECTABLE]
					Label: 'Sticker IOR'
					Description: 'Determines reflectivity'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Sticker reflectivity'
					Description: 'Additional Reflectivity control'
					Types:
						'float' (SDTypeFloat)
				'sticker_normal' = SDMDLValueCall(mdl::state::normal()__default_call___189) [CONNECTABLE]
					Label: 'Sticker bumps'
					Description: 'Attach bump or normal maps here'
					Types:
						'float3' (SDTypeFloat3)
				'sticker_mask' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Sticker mask'
					Description: 'Determines extent of the sticker'
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic__default_call___191) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a sticker added'
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[45/51] 'mdl::nvidia::core_definitions::add_globalbump'
			Label: 'Add global bumpmap'
			Description: 'Adds global bumpmap to existing materials. Local bump map of the base material is preserved'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic__default_call___193) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a bump map'
					Types:
						'mdl::material' (SDTypeStruct)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___194) [CONNECTABLE]
					Label: 'Bump'
					Description: 'An additional global bump map for the material. Local bump map of the base material is preserved'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[46/51] 'mdl::nvidia::core_definitions::add_displacement'
			Label: 'Add displacement'
			Description: 'Adds displacement to existing materials'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::scratched_plastic__default_call___196) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get a bump map'
					Types:
						'mdl::material' (SDTypeStruct)
				'displacement' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Displacement amount'
					Description: 'Attach displacement texture here. Note that the object needs to be set up correctly to have good displacement results'
					Types:
						'float' (SDTypeFloat)
				'displacement_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Displacement scale'
					Description: 'A global scale factor for the displacement amount'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[47/51] 'mdl::nvidia::core_definitions::add_emission'
			Label: 'Add emission'
			Description: 'Adds emission to a material'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___198) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get emission added'
					Types:
						'mdl::material' (SDTypeStruct)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the Light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of Intensity'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[48/51] 'mdl::nvidia::core_definitions::add_thermal_emission'
			Label: 'Add thermal emission'
			Description: 'Adds emission to a material, color is based on a "color temperature"'
			SDPropertyCategory = 'Input'
				'base' = SDMDLValueCall(mdl::nvidia::core_definitions::diffuse__default_call___200) [CONNECTABLE]
					Label: 'Base material'
					Description: 'The material that will get emission added'
					Types:
						'mdl::material' (SDTypeStruct)
				'temperature' = SDValueFloat(float(6500)) [CONNECTABLE]
					Label: 'Temperature'
					Description: 'The color temperature of the Light in Kelvin'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of Intensity'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[49/51] 'mdl::nvidia::core_definitions::light_omni'
			Label: 'Diffuse emission'
			Description: 'Emissive material emitting in all directions'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the Light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of Intensity'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[50/51] 'mdl::nvidia::core_definitions::light_spot'
			Label: 'Spotlight emission'
			Description: 'Emissive material emitting focused in one direction'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the Light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1000)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spot_exponent' = SDValueFloat(float(30)) [CONNECTABLE]
					Label: 'Spot focus'
					Description: 'larger values lead to more focused spotlights'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit' = SDValueEnum("mdl::nvidia::core_definitions::emission_type",0) [CONNECTABLE]
					Label: 'Unit for emission'
					Description: 'The physical unit of Intensity'
					Types:
						'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[51/51] 'mdl::nvidia::core_definitions::light_ies'
			Label: 'IES file based emission'
			Description: 'Emissive material emitting as described in an IES file'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Label: 'IES light profile data'
					Description: 'data to describe the distribution of the light'
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'The color of the Light'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Intensity'
					Description: 'The brightness of the light source'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'unit_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Unit scale'
					Description: 'Modeling unit to meter conversion factor'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/4] 'mdl::nvidia::core_definitions::emission_type'
			'mdl::nvidia::core_definitions::emission_type' (SDTypeEnum)
				int lumen_m2 = SDValueInt(int(0))
				int lumen = SDValueInt(int(1))
				int candela = SDValueInt(int(2))
				int nit = SDValueInt(int(3))
		[2/4] 'mdl::nvidia::core_definitions::material_type'
			'mdl::nvidia::core_definitions::material_type' (SDTypeEnum)
				int simple_material = SDValueInt(int(0))
				int complex_material = SDValueInt(int(1))
				int combiner_material = SDValueInt(int(2))
				int modifier_material = SDValueInt(int(3))
		[3/4] 'mdl::nvidia::core_definitions::cell_type'
			'mdl::nvidia::core_definitions::cell_type' (SDTypeEnum)
				int simple_cells = SDValueInt(int(0))
				int crystal_cells = SDValueInt(int(1))
				int bordered_cells = SDValueInt(int(2))
		[4/4] 'mdl::nvidia::core_definitions::cell_base'
			'mdl::nvidia::core_definitions::cell_base' (SDTypeEnum)
				int circular_cells = SDValueInt(int(0))
				int diamond_cells = SDValueInt(int(1))
[5/27] 'mdl::alg::materials::physically_metallic_roughness_coated' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::physically_metallic_roughness_coated::physically_metallic_roughness_coated'
			Label: 'Physically Metallic Roughness - Coating'
			Description: 'The usual PBR shader, with a coated layer color'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___138) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'coatWeight' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Weight'
					Description: 'How much of the coating is present'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatSpecularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular control for F0 : 0 -> 0%, 1 -> 8%'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Tint color'
					Description: 'Coating color which affects transmitted light going to below layers'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'coatRoughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'How irregular are surface micro detail : 0 -> regular (i.e. polished), 1 -> irregular (i.e. rough)'
					Types:
						'float' (SDTypeFloat) [Varying]
				'coatNormal' = SDMDLValueCall(mdl::state::normal()__default_call___139) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Desribes surface relief details'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'coatInheritNormal' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Inherit normal'
					Description: 'Whether the coat surface inherit the same relief as below layer or if it has its own'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[6/27] 'mdl::alg::base::annotations' (SDMDLModule)
[7/27] 'mdl::alg::materials::physically_metallic_roughness' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::physically_metallic_roughness::physically_metallic_roughness'
			Label: 'Physically Metallic Roughness'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___137) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refraction' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Refraction'
					Description: 'Refraction channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'refractionIOR' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Index of Refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Absorption'
					Description: 'controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[8/27] 'mdl::alg::materials::lights' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::lights::diffuse_light'
			Label: 'Diffuse Light'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[9/27] 'mdl::alg::materials::lambert' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::lambert::lambert'
			Label: 'Lambert'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[10/27] 'mdl::alg::materials::physically_metallic_roughness_sss' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::physically_metallic_roughness_sss::physically_metallic_roughness_sss'
			Label: 'Physically Metallic Roughness - SSS'
			Description: 'Mixture of the usual PBR shader with a Subsurface scattering one'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Base Color/Diffuse'
					Description: 'Base Color channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___141) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Roughness'
					Description: 'Roughness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'metallic' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Metallic'
					Description: 'Metallic channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Label: 'IOR'
					Description: 'Desrcibes the index of refraction of the material medium'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scattering'
					Description: 'How much to blend the SSS material to take into account vs. the usual PBR shader'
					Types:
						'float' (SDTypeFloat) [Varying]
				'scatteringScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'Artistict control to tweak the subsurface scattering effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scatteringColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Color'
					Description: 'Describes at which probability each wavelength scatters within the volume'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'ambientOcclusion' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Ambient Occlusion'
					Description: 'Ambient Occlusion channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyLevel' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Level'
					Description: 'Anisotropy Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'anisotropyAngle' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Anisotropy Angle'
					Description: 'Anisotropy Angle channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specularLevel' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Specular Level'
					Description: 'Specular Level channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[11/27] 'mdl::debug' (SDMDLModule)
	Definitions:
		[1/20] 'mdl::debug::breakpoint()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[2/20] 'mdl::debug::assert(bool,string,string,string,int)'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'reason' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'funcname' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'filename' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'line' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[3/20] 'mdl::debug::print(bool)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[4/20] 'mdl::debug::print(bool2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[5/20] 'mdl::debug::print(bool3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[6/20] 'mdl::debug::print(bool4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[7/20] 'mdl::debug::print(int)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[8/20] 'mdl::debug::print(int2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[9/20] 'mdl::debug::print(int3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[10/20] 'mdl::debug::print(int4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[11/20] 'mdl::debug::print(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[12/20] 'mdl::debug::print(float2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[13/20] 'mdl::debug::print(float3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[14/20] 'mdl::debug::print(float4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[15/20] 'mdl::debug::print(double)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[16/20] 'mdl::debug::print(double2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[17/20] 'mdl::debug::print(double3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[18/20] 'mdl::debug::print(double4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[19/20] 'mdl::debug::print(color)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[20/20] 'mdl::debug::print(string)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
[12/27] 'mdl::custom_graph::shared' (SDMDLModule)
	Definitions:
		[1/13] 'mdl::custom_graph::shared::color2()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
		[2/13] 'mdl::custom_graph::shared::color2(float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
		[3/13] 'mdl::custom_graph::shared::color2.r(::custom_graph::shared::color2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[4/13] 'mdl::custom_graph::shared::color2.g(::custom_graph::shared::color2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[5/13] 'mdl::custom_graph::shared::color4()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
		[6/13] 'mdl::custom_graph::shared::color4(float,float,float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
		[7/13] 'mdl::custom_graph::shared::color4.r(::custom_graph::shared::color4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[8/13] 'mdl::custom_graph::shared::color4.g(::custom_graph::shared::color4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[9/13] 'mdl::custom_graph::shared::color4.b(::custom_graph::shared::color4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[10/13] 'mdl::custom_graph::shared::color4.a(::custom_graph::shared::color4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[11/13] 'mdl::custom_graph::shared::operator?(bool,::custom_graph::shared::color2,::custom_graph::shared::color2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color2' (SDTypeStruct)
				
		[12/13] 'mdl::custom_graph::shared::operator?(bool,::custom_graph::shared::color3,::custom_graph::shared::color3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'false_exp' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[13/13] 'mdl::custom_graph::shared::operator?(bool,::custom_graph::shared::color4,::custom_graph::shared::color4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::custom_graph::shared::color4' (SDTypeStruct)
				
	Types:
		[1/2] 'mdl::custom_graph::shared::color2'
			'mdl::custom_graph::shared::color2' (SDTypeStruct)
				float r
				float g
		[2/2] 'mdl::custom_graph::shared::color4'
			'mdl::custom_graph::shared::color4' (SDTypeStruct)
				float r
				float g
				float b
				float a
[13/27] 'mdl::tex' (SDMDLModule)
	Definitions:
		[1/52] 'mdl::tex::int(::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/52] 'mdl::tex::int(::tex::wrap_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/52] 'mdl::tex::width$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[4/52] 'mdl::tex::width(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/52] 'mdl::tex::height$1.3(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/52] 'mdl::tex::height(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/52] 'mdl::tex::width(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[8/52] 'mdl::tex::height(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[9/52] 'mdl::tex::depth(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[10/52] 'mdl::tex::width(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[11/52] 'mdl::tex::height(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[12/52] 'mdl::tex::lookup_float(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[13/52] 'mdl::tex::lookup_float(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[14/52] 'mdl::tex::lookup_float(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[15/52] 'mdl::tex::lookup_float(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[16/52] 'mdl::tex::lookup_float2(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[17/52] 'mdl::tex::lookup_float2(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[18/52] 'mdl::tex::lookup_float2(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[19/52] 'mdl::tex::lookup_float2(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[20/52] 'mdl::tex::lookup_float3(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[21/52] 'mdl::tex::lookup_float3(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[22/52] 'mdl::tex::lookup_float3(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[23/52] 'mdl::tex::lookup_float3(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[24/52] 'mdl::tex::lookup_float4(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[25/52] 'mdl::tex::lookup_float4(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[26/52] 'mdl::tex::lookup_float4(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[27/52] 'mdl::tex::lookup_float4(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[28/52] 'mdl::tex::lookup_color(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[29/52] 'mdl::tex::lookup_color(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[30/52] 'mdl::tex::lookup_color(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[31/52] 'mdl::tex::lookup_color(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[32/52] 'mdl::tex::texel_float$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[33/52] 'mdl::tex::texel_float(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[34/52] 'mdl::tex::texel_float2$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[35/52] 'mdl::tex::texel_float2(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[36/52] 'mdl::tex::texel_float3$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[37/52] 'mdl::tex::texel_float3(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[38/52] 'mdl::tex::texel_float4$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[39/52] 'mdl::tex::texel_float4(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[40/52] 'mdl::tex::texel_color$1.3(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[41/52] 'mdl::tex::texel_color(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[42/52] 'mdl::tex::texel_float(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[43/52] 'mdl::tex::texel_float2(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[44/52] 'mdl::tex::texel_float3(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[45/52] 'mdl::tex::texel_float4(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[46/52] 'mdl::tex::texel_color(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[47/52] 'mdl::tex::texture_isvalid(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[48/52] 'mdl::tex::texture_isvalid(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[49/52] 'mdl::tex::texture_isvalid(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[50/52] 'mdl::tex::texture_isvalid(texture_ptex)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[51/52] 'mdl::tex::operator?(bool,::tex::gamma_mode,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum)
				
		[52/52] 'mdl::tex::operator?(bool,::tex::wrap_mode,::tex::wrap_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum)
				
	Types:
		[1/2] 'mdl::tex::gamma_mode'
			'mdl::tex::gamma_mode' (SDTypeEnum)
				int gamma_default = SDValueInt(int(0))
				int gamma_linear = SDValueInt(int(1))
				int gamma_srgb = SDValueInt(int(2))
		[2/2] 'mdl::tex::wrap_mode'
			'mdl::tex::wrap_mode' (SDTypeEnum)
				int wrap_clamp = SDValueInt(int(0))
				int wrap_repeat = SDValueInt(int(1))
				int wrap_mirrored_repeat = SDValueInt(int(2))
				int wrap_clip = SDValueInt(int(3))
[14/27] 'mdl::nvidia::axf_importer::axf_importer' (SDMDLModule)
	Definitions:
		[1/12] 'mdl::nvidia::axf_importer::axf_importer::int(::nvidia::axf_importer::axf_importer::brdf_type)'
			Description: 'BRDF types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/12] 'mdl::nvidia::axf_importer::axf_importer::int(::nvidia::axf_importer::axf_importer::fresnel_type)'
			Description: 'Fresnel types supported for AxF SVBRDFs'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/12] 'mdl::nvidia::axf_importer::axf_importer::int[].len(int[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<int>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[4/12] 'mdl::nvidia::axf_importer::axf_importer::int[]@(int[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<int>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/12] 'mdl::nvidia::axf_importer::axf_importer::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/12] 'mdl::nvidia::axf_importer::axf_importer::float[]@(float[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[7/12] 'mdl::nvidia::axf_importer::axf_importer::color[]@(color[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[8/12] 'mdl::nvidia::axf_importer::axf_importer::color[].len(color[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[9/12] 'mdl::nvidia::axf_importer::axf_importer::operator?(bool,::nvidia::axf_importer::axf_importer::brdf_type,::nvidia::axf_importer::axf_importer::brdf_type)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				
		[10/12] 'mdl::nvidia::axf_importer::axf_importer::operator?(bool,::nvidia::axf_importer::axf_importer::fresnel_type,::nvidia::axf_importer::axf_importer::fresnel_type)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				
		[11/12] 'mdl::nvidia::axf_importer::axf_importer::svbrdf'
			Label: 'AxF SVBRDF material'
			Description: 'MDL implementation of the SVBRDF model used in AxF files'
			SDPropertyCategory = 'Input'
				'diffuse_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_u' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_v' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_rotation' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'specular_brdf_texture_f0' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'brdf_type' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::brdf_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum) [Uniform]
				'isotropic' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'fresnel_type' = SDValueEnum("mdl::nvidia::axf_importer::axf_importer::fresnel_type",0) [CONNECTABLE]
					Types:
						'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum) [Uniform]
				'specular_brdf_texture_fresnel' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'has_clearcoat' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'clearcoat_normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'clearcoat_ior_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'clearcoat_color_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coordinate_override' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___204) [CONNECTABLE]
					Description: 'By default, texturing is using object uv coordinates. Procedural coordinate generators like base::coordinate_projection can be attached here to override the default behavior'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'use_sample_size' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use sample size'
					Description: 'Set to true if the real world measurements of the measured sample are known'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sample_size_u' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size U'
					Description: 'The size of the measured sample in m, measured in the U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sample_size_v' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size V'
					Description: 'The size of the measured sample in m, measured in the V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scene_to_meter' = SDMDLValueCall(mdl::state::meters_per_scene_unit()__default_call___205) [CONNECTABLE]
					Label: 'Scene to m conversion factor'
					Description: 'Conversion factor from modeling scale used in the scene and m. Only used if "Use real world size" is true and for displacement'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_u' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale V'
					Description: 'Scale factor in V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_v' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale U'
					Description: 'Scale factor in U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotate_uv' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation angle'
					Description: 'Changes the orientation of the textures on the object'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Label: 'Texture wrapping behavior'
					Description: 'Controls the wrapping behavior of the texture if it fits multiple times on an object'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'normal_texture_strength' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Normal texture strength'
					Description: 'Can be used to tweak the bumpiness of the material. At 1.0 it will match the measured bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'geometry_normal' = SDMDLValueCall(mdl::state::normal()__default_call___206) [CONNECTABLE]
					Label: 'Geometry normal'
					Description: 'Allows the use of an additional bump mapping effect'
					Types:
						'float3' (SDTypeFloat3)
				'scale_height' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale height texture'
					Description: 'Scale factor for the displacement mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'height_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'alpha_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[12/12] 'mdl::nvidia::axf_importer::axf_importer::carpaint'
			Label: 'AxF carpaint material'
			Description: 'MDL approximation of the AxF carpaint material'
			SDPropertyCategory = 'Input'
				'brdf_colors' = SDValueArray(SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'clearcoat_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'brdf_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ior' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ct_diffuse' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'ct_coeffs' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ct_f0s' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ct_spreads' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'clearcoat_normal_texture' = SDMDLValueTextureReference() [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coordinate_override' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___210) [CONNECTABLE]
					Description: 'By default, texturing is using object uv coordinates. Procedural coordinate generators like base::coordinate_projection can be attached here to override the default behavior'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'use_sample_size' = SDValueBool(bool(true)) [CONNECTABLE]
					Label: 'Use sample size'
					Description: 'Set to true if the real world measurements of the measured sample are known'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sample_size_u' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size U'
					Description: 'The size of the measured sample in m, measured in the U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sample_size_v' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Label: 'Sample size V'
					Description: 'The size of the measured sample in m, measured in the V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scene_to_meter' = SDMDLValueCall(mdl::state::meters_per_scene_unit()__default_call___211) [CONNECTABLE]
					Label: 'Scene to m conversion factor'
					Description: 'Conversion factor from modeling scale used in the scene and m. Only used if "Use real world size" is true'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_u' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale V'
					Description: 'Scale factor in V direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale_v' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale U'
					Description: 'Scale factor in U direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'rotate_uv' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Rotation angle'
					Description: 'Changes the orientation of the textures on the object'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'wrap' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Label: 'Texture wrapping behavior'
					Description: 'Controls the wrapping behavior of the texture if it fits multiple times on an object'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'geometry_normal' = SDMDLValueCall(mdl::state::normal()__default_call___212) [CONNECTABLE]
					Label: 'Geometry normal'
					Description: 'Allows the use of an additional bump mapping effect'
					Types:
						'float3' (SDTypeFloat3)
				'enable_flakes' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Enable flakes'
					Description: 'Enables the additional flake component'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flake_uvw_scale' = SDValueFloat3(float3(1,1,1)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'flake_importance_data' = SDValueArray() [CONNECTABLE]
					Types:
						'SDTypeArray<int>' (SDTypeArray)
				'flake_peak_intensity_scale' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake size'
					Description: 'Artistic control to modifiy flake size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_bsdf_roughness' = SDValueFloat(float(0.00999999978)) [CONNECTABLE]
					Label: 'Flake roughness'
					Description: 'Artistic flake reflection roughness control'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flake_intensity_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Flake brightness'
					Description: 'Artistic flake brightness control'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'precise_sub_clearcoat_component' = SDValueBool(bool(false)) [CONNECTABLE]
					Label: 'Measured sub-clearcoat BRDF'
					Description: 'Use a measured BRDF for sub-clearcoat layer. Enables correct rendering for refracting clearcoats and color shifting paints.'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'sub_clearcoat_measurement' = SDMDLValueBSDFMeasurementReference() [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'flake_orientation_falloff' = SDValueArray() [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/4] 'mdl::nvidia::axf_importer::axf_importer::brdf_type'
			'mdl::nvidia::axf_importer::axf_importer::brdf_type' (SDTypeEnum)
				int brdf_ward_geislermoroder = SDValueInt(int(0))
				int brdf_cooktorrance = SDValueInt(int(1))
				int brdf_ggx = SDValueInt(int(2))
				int brdf_count = SDValueInt(int(3))
		[2/4] 'mdl::nvidia::axf_importer::axf_importer::fresnel_type'
			'mdl::nvidia::axf_importer::axf_importer::fresnel_type' (SDTypeEnum)
				int fresnel_none = SDValueInt(int(0))
				int fresnel_schlick = SDValueInt(int(1))
				int fresnel_fresnel = SDValueInt(int(2))
				int fresnel_count = SDValueInt(int(3))
		[3/4] 'mdl::nvidia::axf_importer::axf_importer::flake_value'
			'mdl::nvidia::axf_importer::axf_importer::flake_value' (SDTypeStruct)
				float weight
				float3 col
				float3 normal
				float f0
		[4/4] 'mdl::nvidia::axf_importer::axf_importer::flake_noise_value'
			'mdl::nvidia::axf_importer::axf_importer::flake_noise_value' (SDTypeStruct)
				float priority
				int rnd_seed
[15/27] 'mdl::df' (SDMDLModule)
	Definitions:
		[1/83] 'mdl::df::int(::df::scatter_mode)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/83] 'mdl::df::diffuse_reflection_bsdf(color,float,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[3/83] 'mdl::df::diffuse_transmission_bsdf(color,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[4/83] 'mdl::df::specular_bsdf(color,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[5/83] 'mdl::df::simple_glossy_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___90) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[6/83] 'mdl::df::backscattering_glossy_reflection_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___91) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[7/83] 'mdl::df::measured_bsdf(bsdf_measurement,float,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[8/83] 'mdl::df::microfacet_beckmann_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___92) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[9/83] 'mdl::df::microfacet_ggx_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___93) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[10/83] 'mdl::df::microfacet_beckmann_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___94) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[11/83] 'mdl::df::microfacet_ggx_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___95) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[12/83] 'mdl::df::ward_geisler_moroder_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___96) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[13/83] 'mdl::df::diffuse_edf(string)'
			SDPropertyCategory = 'Input'
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[14/83] 'mdl::df::spot_edf$1.0(float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[15/83] 'mdl::df::spot_edf(float,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spread' = SDValueFloat(float(3.14159274)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[16/83] 'mdl::df::measured_edf$1.0(light_profile,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[17/83] 'mdl::df::measured_edf$1.1(light_profile,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[18/83] 'mdl::df::measured_edf(light_profile,float,bool,float3x3,float3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___97) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[19/83] 'mdl::df::anisotropic_vdf(float,string)'
			SDPropertyCategory = 'Input'
				'directional_bias' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[20/83] 'mdl::df::tint(color,bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[21/83] 'mdl::df::tint(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[22/83] 'mdl::df::thin_film(float,color,bsdf)'
			SDPropertyCategory = 'Input'
				'thickness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[23/83] 'mdl::df::directional_factor(color,color,float,bsdf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[24/83] 'mdl::df::bsdf_component(float,bsdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'component' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[25/83] 'mdl::df::bsdf_component.weight(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[26/83] 'mdl::df::bsdf_component.component(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[27/83] 'mdl::df::edf_component(float,edf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'component' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[28/83] 'mdl::df::edf_component.weight(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
		[29/83] 'mdl::df::edf_component.component(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[30/83] 'mdl::df::vdf_component(float,vdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'component' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[31/83] 'mdl::df::vdf_component.weight(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[32/83] 'mdl::df::vdf_component.component(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[33/83] 'mdl::df::normalized_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[34/83] 'mdl::df::normalized_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[35/83] 'mdl::df::normalized_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[36/83] 'mdl::df::clamped_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[37/83] 'mdl::df::clamped_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[38/83] 'mdl::df::clamped_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[39/83] 'mdl::df::weighted_layer(float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___98) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[40/83] 'mdl::df::fresnel_layer$1.3(color,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___99) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[41/83] 'mdl::df::custom_curve_layer(float,float,float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___100) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[42/83] 'mdl::df::measured_curve_layer(color[N],float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___101) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[43/83] 'mdl::df::measured_curve_factor(color[N],bsdf)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[44/83] 'mdl::df::light_profile_power(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[45/83] 'mdl::df::light_profile_maximum(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[46/83] 'mdl::df::light_profile_isvalid(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[47/83] 'mdl::df::bsdf_measurement_isvalid(bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[48/83] 'mdl::df::color_bsdf_component(color,bsdf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'component' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[49/83] 'mdl::df::color_bsdf_component.weight(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[50/83] 'mdl::df::color_bsdf_component.component(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[51/83] 'mdl::df::color_edf_component(color,edf)'
			SDPropertyCategory = 'Input'
				'weight' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'component' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
		[52/83] 'mdl::df::color_edf_component.weight(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[53/83] 'mdl::df::color_edf_component.component(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[54/83] 'mdl::df::color_normalized_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[55/83] 'mdl::df::color_normalized_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[56/83] 'mdl::df::color_clamped_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[57/83] 'mdl::df::color_clamped_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[58/83] 'mdl::df::color_weighted_layer(color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___102) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[59/83] 'mdl::df::fresnel_layer(float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___103) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[60/83] 'mdl::df::color_fresnel_layer(color,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___104) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[61/83] 'mdl::df::color_custom_curve_layer(color,color,float,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_reflectivity' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___105) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[62/83] 'mdl::df::color_measured_curve_layer(color[N],color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___106) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[63/83] 'mdl::df::fresnel_factor(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'extinction_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[64/83] 'mdl::df::measured_factor(texture_2d,bsdf)'
			SDPropertyCategory = 'Input'
				'values' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[65/83] 'mdl::df::chiang_hair_bsdf(float,color,float2,float2,float2,float,color,float,string)'
			SDPropertyCategory = 'Input'
				'diffuse_reflection_weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'diffuse_reflection_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness_R' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TT' = SDMDLValueParameterReference(2) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TRT' = SDMDLValueParameterReference(3) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'cuticle_angle' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'ior' = SDValueFloat(float(1.54999995)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[66/83] 'mdl::df::bsdf_component[]@(::df::bsdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[67/83] 'mdl::df::vdf_component[]@(::df::vdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[68/83] 'mdl::df::edf_component[]@(::df::edf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[69/83] 'mdl::df::color[]@(color[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[70/83] 'mdl::df::color_bsdf_component[]@(::df::color_bsdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[71/83] 'mdl::df::color_edf_component[]@(::df::color_edf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
		[72/83] 'mdl::df::bsdf_component[].len(::df::bsdf_component[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[73/83] 'mdl::df::vdf_component[].len(::df::vdf_component[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[74/83] 'mdl::df::edf_component[].len(::df::edf_component[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[75/83] 'mdl::df::color[].len(color[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[76/83] 'mdl::df::color_bsdf_component[].len(::df::color_bsdf_component[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[77/83] 'mdl::df::color_edf_component[].len(::df::color_edf_component[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[78/83] 'mdl::df::operator?(bool,::df::scatter_mode,::df::scatter_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum)
				
		[79/83] 'mdl::df::operator?(bool,::df::bsdf_component,::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[80/83] 'mdl::df::operator?(bool,::df::edf_component,::df::edf_component)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[81/83] 'mdl::df::operator?(bool,::df::vdf_component,::df::vdf_component)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[82/83] 'mdl::df::operator?(bool,::df::color_bsdf_component,::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[83/83] 'mdl::df::operator?(bool,::df::color_edf_component,::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
	Types:
		[1/21] 'mdl::df::scatter_mode'
			'mdl::df::scatter_mode' (SDTypeEnum)
				int scatter_reflect = SDValueInt(int(0))
				int scatter_transmit = SDValueInt(int(1))
				int scatter_reflect_transmit = SDValueInt(int(2))
		[2/21] 'mdl::df::bsdf_component'
			'mdl::df::bsdf_component' (SDTypeStruct)
				float weight
				mdl::bsdf component
		[3/21] 'mdl::df::edf_component'
			'mdl::df::edf_component' (SDTypeStruct)
				float weight
				mdl::edf component
		[4/21] 'mdl::df::vdf_component'
			'mdl::df::vdf_component' (SDTypeStruct)
				float weight
				mdl::vdf component
		[5/21] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[6/21] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[7/21] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[8/21] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[9/21] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[10/21] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[11/21] 'mdl::df::color_bsdf_component'
			'mdl::df::color_bsdf_component' (SDTypeStruct)
				ColorRGB weight
				mdl::bsdf component
		[12/21] 'mdl::df::color_edf_component'
			'mdl::df::color_edf_component' (SDTypeStruct)
				ColorRGB weight
				mdl::edf component
		[13/21] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[14/21] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
		[15/21] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[16/21] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
		[17/21] 'SDTypeArray<mdl::df::bsdf_component>'
			'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::bsdf_component' (SDTypeStruct)
						float weight
						mdl::bsdf component
		[18/21] 'SDTypeArray<mdl::df::vdf_component>'
			'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::vdf_component' (SDTypeStruct)
						float weight
						mdl::vdf component
		[19/21] 'SDTypeArray<mdl::df::edf_component>'
			'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::edf_component' (SDTypeStruct)
						float weight
						mdl::edf component
		[20/21] 'SDTypeArray<mdl::df::color_bsdf_component>'
			'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_bsdf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::bsdf component
		[21/21] 'SDTypeArray<mdl::df::color_edf_component>'
			'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				Item Type:
					'mdl::df::color_edf_component' (SDTypeStruct)
						ColorRGB weight
						mdl::edf component
[16/27] 'mdl::alg::base::core' (SDMDLModule)
	Definitions:
		[1/7] 'mdl::alg::base::core::volume_absorption(float,color)'
			Label: 'Absorption'
			Description: 'Provides an absorption coefficient for the volume'
			SDPropertyCategory = 'Input'
				'absorption' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Volume Absorption'
					Description: 'Controls how much light is absorbed through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'absorptionColor' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Label: 'Absorption Color'
					Description: 'Simulates shifts in color when light passes through the surface'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[2/7] 'mdl::alg::base::core::volume_scattering(float)'
			Label: 'Scattering'
			Description: 'Provides a scattering coefficient for the volume'
			SDPropertyCategory = 'Input'
				'scattering' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Volume Scattering'
					Description: 'Controls how much light is scattered through the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[3/7] 'mdl::alg::base::core::displacement(float,float)'
			Label: 'Displacement'
			Description: 'Provides significant physical detail to the surface by manipulating the vertices of the mesh'
			SDPropertyCategory = 'Input'
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'scales the range of displacement'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[4/7] 'mdl::alg::base::core::int(::alg::base::core::tangent_space_plugin_mode)'
			Label: 'Tangent Space Plugin Mode'
			Description: 'Describes Tangent Space Plugin behavior to adopt when computing'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/7] 'mdl::alg::base::core::tangent_space_plugin_normal_texture(texture_2d,float,bool,bool,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,float,float,::alg::base::core::tangent_space_plugin_mode,bool)'
			Label: 'Tangent Space Plugin Normal Texture'
			Description: 'Reinterpretation of tangent_space_normal_texture to interpret correctly tangent/bitangent computed by popular tangent space computation plugin'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flip_tangent_u' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flip_tangent_v' = SDValueBool(bool(true)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___128) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct) [Varying]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scales the value red from the texture file. can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Offset applied to the value red from the texture file. can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::alg::base::core::tangent_space_plugin_mode",0) [CONNECTABLE]
					Description: 'Tangent Space computation behavior'
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum) [Uniform]
				'force_compute_tangent_space' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Force re-computation of tangent space based on normal & tangent'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[6/7] 'mdl::alg::base::core::operator?(bool,::alg::base::core::tangent_space_plugin_mode,::alg::base::core::tangent_space_plugin_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				
		[7/7] 'mdl::alg::base::core::material_root'
			Label: 'Material'
			SDPropertyCategory = 'Input'
				'materialRoot' = SDMDLValueCall(mdl::material(bool,material_surface,material_surface,color,material_volume,material_geometry,hair_bsdf)__default_call___135) [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
	Types:
		[1/1] 'mdl::alg::base::core::tangent_space_plugin_mode'
			'mdl::alg::base::core::tangent_space_plugin_mode' (SDTypeEnum)
				int None = SDValueInt(int(0))
				int Mikk = SDValueInt(int(1))
				int Unreal = SDValueInt(int(2))
				int Unity = SDValueInt(int(3))
[17/27] 'mdl::anno' (SDMDLModule)
	Definitions:
		[1/2] 'mdl::anno::string[]@(string[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<string>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'string' (SDTypeString)
				
		[2/2] 'mdl::anno::string[].len(string[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<string>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
[18/27] 'mdl::math' (SDMDLModule)
	Definitions:
		[1/545] 'mdl::math::abs(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/545] 'mdl::math::abs(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[3/545] 'mdl::math::abs(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[4/545] 'mdl::math::abs(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[5/545] 'mdl::math::abs(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[6/545] 'mdl::math::abs(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[7/545] 'mdl::math::abs(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[8/545] 'mdl::math::abs(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[9/545] 'mdl::math::abs(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[10/545] 'mdl::math::abs(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[11/545] 'mdl::math::abs(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[12/545] 'mdl::math::abs(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[13/545] 'mdl::math::abs(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[14/545] 'mdl::math::acos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[15/545] 'mdl::math::acos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[16/545] 'mdl::math::acos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/545] 'mdl::math::acos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[18/545] 'mdl::math::acos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[19/545] 'mdl::math::acos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[20/545] 'mdl::math::acos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[21/545] 'mdl::math::acos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[22/545] 'mdl::math::all(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[23/545] 'mdl::math::all(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[24/545] 'mdl::math::all(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[25/545] 'mdl::math::all(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[26/545] 'mdl::math::any(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[27/545] 'mdl::math::any(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[28/545] 'mdl::math::any(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[29/545] 'mdl::math::any(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[30/545] 'mdl::math::asin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[31/545] 'mdl::math::asin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[32/545] 'mdl::math::asin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[33/545] 'mdl::math::asin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[34/545] 'mdl::math::asin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[35/545] 'mdl::math::asin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[36/545] 'mdl::math::asin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[37/545] 'mdl::math::asin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[38/545] 'mdl::math::atan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[39/545] 'mdl::math::atan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[40/545] 'mdl::math::atan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[41/545] 'mdl::math::atan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[42/545] 'mdl::math::atan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[43/545] 'mdl::math::atan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[44/545] 'mdl::math::atan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[45/545] 'mdl::math::atan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[46/545] 'mdl::math::atan2(float,float)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[47/545] 'mdl::math::atan2(float2,float2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[48/545] 'mdl::math::atan2(float3,float3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[49/545] 'mdl::math::atan2(float4,float4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[50/545] 'mdl::math::atan2(double,double)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[51/545] 'mdl::math::atan2(double2,double2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[52/545] 'mdl::math::atan2(double3,double3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[53/545] 'mdl::math::atan2(double4,double4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[54/545] 'mdl::math::average(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[55/545] 'mdl::math::average(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[56/545] 'mdl::math::average(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[57/545] 'mdl::math::average(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[58/545] 'mdl::math::average(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[59/545] 'mdl::math::average(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[60/545] 'mdl::math::average(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[61/545] 'mdl::math::average(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[62/545] 'mdl::math::average(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[63/545] 'mdl::math::ceil(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[64/545] 'mdl::math::ceil(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[65/545] 'mdl::math::ceil(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[66/545] 'mdl::math::ceil(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[67/545] 'mdl::math::ceil(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[68/545] 'mdl::math::ceil(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[69/545] 'mdl::math::ceil(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[70/545] 'mdl::math::ceil(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[71/545] 'mdl::math::clamp(int,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[72/545] 'mdl::math::clamp(int2,int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[73/545] 'mdl::math::clamp(int3,int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[74/545] 'mdl::math::clamp(int4,int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[75/545] 'mdl::math::clamp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[76/545] 'mdl::math::clamp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[77/545] 'mdl::math::clamp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[78/545] 'mdl::math::clamp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[79/545] 'mdl::math::clamp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[80/545] 'mdl::math::clamp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[81/545] 'mdl::math::clamp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[82/545] 'mdl::math::clamp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[83/545] 'mdl::math::clamp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[84/545] 'mdl::math::clamp(int2,int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[85/545] 'mdl::math::clamp(int2,int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[86/545] 'mdl::math::clamp(int2,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[87/545] 'mdl::math::clamp(int3,int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[88/545] 'mdl::math::clamp(int3,int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[89/545] 'mdl::math::clamp(int3,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[90/545] 'mdl::math::clamp(int4,int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[91/545] 'mdl::math::clamp(int4,int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[92/545] 'mdl::math::clamp(int4,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[93/545] 'mdl::math::clamp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[94/545] 'mdl::math::clamp(float2,float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[95/545] 'mdl::math::clamp(float2,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[96/545] 'mdl::math::clamp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[97/545] 'mdl::math::clamp(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[98/545] 'mdl::math::clamp(float3,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[99/545] 'mdl::math::clamp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[100/545] 'mdl::math::clamp(float4,float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[101/545] 'mdl::math::clamp(float4,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[102/545] 'mdl::math::clamp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[103/545] 'mdl::math::clamp(color,float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[104/545] 'mdl::math::clamp(color,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[105/545] 'mdl::math::clamp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[106/545] 'mdl::math::clamp(double2,double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[107/545] 'mdl::math::clamp(double2,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[108/545] 'mdl::math::clamp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[109/545] 'mdl::math::clamp(double3,double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[110/545] 'mdl::math::clamp(double3,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[111/545] 'mdl::math::clamp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[112/545] 'mdl::math::clamp(double4,double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[113/545] 'mdl::math::clamp(double4,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[114/545] 'mdl::math::cos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[115/545] 'mdl::math::cos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[116/545] 'mdl::math::cos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[117/545] 'mdl::math::cos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[118/545] 'mdl::math::cos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[119/545] 'mdl::math::cos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[120/545] 'mdl::math::cos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[121/545] 'mdl::math::cos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[122/545] 'mdl::math::cross(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[123/545] 'mdl::math::cross(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[124/545] 'mdl::math::degrees(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[125/545] 'mdl::math::degrees(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[126/545] 'mdl::math::degrees(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[127/545] 'mdl::math::degrees(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[128/545] 'mdl::math::degrees(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[129/545] 'mdl::math::degrees(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[130/545] 'mdl::math::degrees(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[131/545] 'mdl::math::degrees(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[132/545] 'mdl::math::distance(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[133/545] 'mdl::math::distance(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[134/545] 'mdl::math::distance(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[135/545] 'mdl::math::distance(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[136/545] 'mdl::math::distance(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[137/545] 'mdl::math::distance(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[138/545] 'mdl::math::distance(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[139/545] 'mdl::math::distance(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[140/545] 'mdl::math::dot(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[141/545] 'mdl::math::dot(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[142/545] 'mdl::math::dot(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[143/545] 'mdl::math::dot(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[144/545] 'mdl::math::dot(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[145/545] 'mdl::math::dot(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[146/545] 'mdl::math::dot(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[147/545] 'mdl::math::dot(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[148/545] 'mdl::math::eval_at_wavelength(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'wavelength' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[149/545] 'mdl::math::exp(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[150/545] 'mdl::math::exp(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[151/545] 'mdl::math::exp(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[152/545] 'mdl::math::exp(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[153/545] 'mdl::math::exp(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[154/545] 'mdl::math::exp(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[155/545] 'mdl::math::exp(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[156/545] 'mdl::math::exp(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[157/545] 'mdl::math::exp(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[158/545] 'mdl::math::exp2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[159/545] 'mdl::math::exp2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[160/545] 'mdl::math::exp2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[161/545] 'mdl::math::exp2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[162/545] 'mdl::math::exp2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[163/545] 'mdl::math::exp2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[164/545] 'mdl::math::exp2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[165/545] 'mdl::math::exp2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[166/545] 'mdl::math::exp2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[167/545] 'mdl::math::floor(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[168/545] 'mdl::math::floor(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[169/545] 'mdl::math::floor(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[170/545] 'mdl::math::floor(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[171/545] 'mdl::math::floor(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[172/545] 'mdl::math::floor(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[173/545] 'mdl::math::floor(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[174/545] 'mdl::math::floor(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[175/545] 'mdl::math::fmod(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[176/545] 'mdl::math::fmod(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[177/545] 'mdl::math::fmod(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[178/545] 'mdl::math::fmod(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[179/545] 'mdl::math::fmod(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[180/545] 'mdl::math::fmod(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[181/545] 'mdl::math::fmod(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[182/545] 'mdl::math::fmod(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[183/545] 'mdl::math::fmod(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[184/545] 'mdl::math::fmod(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[185/545] 'mdl::math::fmod(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[186/545] 'mdl::math::fmod(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[187/545] 'mdl::math::fmod(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[188/545] 'mdl::math::fmod(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[189/545] 'mdl::math::frac(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[190/545] 'mdl::math::frac(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[191/545] 'mdl::math::frac(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[192/545] 'mdl::math::frac(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[193/545] 'mdl::math::frac(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[194/545] 'mdl::math::frac(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[195/545] 'mdl::math::frac(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[196/545] 'mdl::math::frac(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[197/545] 'mdl::math::isnan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[198/545] 'mdl::math::isnan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[199/545] 'mdl::math::isnan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[200/545] 'mdl::math::isnan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[201/545] 'mdl::math::isnan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[202/545] 'mdl::math::isnan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[203/545] 'mdl::math::isnan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[204/545] 'mdl::math::isnan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[205/545] 'mdl::math::isfinite(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[206/545] 'mdl::math::isfinite(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[207/545] 'mdl::math::isfinite(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[208/545] 'mdl::math::isfinite(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[209/545] 'mdl::math::isfinite(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[210/545] 'mdl::math::isfinite(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[211/545] 'mdl::math::isfinite(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[212/545] 'mdl::math::isfinite(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[213/545] 'mdl::math::length(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[214/545] 'mdl::math::length(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[215/545] 'mdl::math::length(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[216/545] 'mdl::math::length(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[217/545] 'mdl::math::length(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[218/545] 'mdl::math::length(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[219/545] 'mdl::math::length(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[220/545] 'mdl::math::length(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[221/545] 'mdl::math::lerp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[222/545] 'mdl::math::lerp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[223/545] 'mdl::math::lerp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[224/545] 'mdl::math::lerp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[225/545] 'mdl::math::lerp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[226/545] 'mdl::math::lerp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[227/545] 'mdl::math::lerp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[228/545] 'mdl::math::lerp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[229/545] 'mdl::math::lerp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[230/545] 'mdl::math::lerp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[231/545] 'mdl::math::lerp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[232/545] 'mdl::math::lerp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[233/545] 'mdl::math::lerp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[234/545] 'mdl::math::lerp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[235/545] 'mdl::math::lerp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[236/545] 'mdl::math::lerp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[237/545] 'mdl::math::log(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[238/545] 'mdl::math::log(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[239/545] 'mdl::math::log(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[240/545] 'mdl::math::log(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[241/545] 'mdl::math::log(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[242/545] 'mdl::math::log(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[243/545] 'mdl::math::log(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[244/545] 'mdl::math::log(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[245/545] 'mdl::math::log(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[246/545] 'mdl::math::log2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[247/545] 'mdl::math::log2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[248/545] 'mdl::math::log2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[249/545] 'mdl::math::log2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[250/545] 'mdl::math::log2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[251/545] 'mdl::math::log2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[252/545] 'mdl::math::log2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[253/545] 'mdl::math::log2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[254/545] 'mdl::math::log2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[255/545] 'mdl::math::log10(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[256/545] 'mdl::math::log10(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[257/545] 'mdl::math::log10(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[258/545] 'mdl::math::log10(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[259/545] 'mdl::math::log10(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[260/545] 'mdl::math::log10(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[261/545] 'mdl::math::log10(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[262/545] 'mdl::math::log10(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[263/545] 'mdl::math::log10(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[264/545] 'mdl::math::luminance(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[265/545] 'mdl::math::luminance(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[266/545] 'mdl::math::max(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[267/545] 'mdl::math::max(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[268/545] 'mdl::math::max(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[269/545] 'mdl::math::max(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[270/545] 'mdl::math::max(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[271/545] 'mdl::math::max(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[272/545] 'mdl::math::max(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[273/545] 'mdl::math::max(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[274/545] 'mdl::math::max(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[275/545] 'mdl::math::max(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[276/545] 'mdl::math::max(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[277/545] 'mdl::math::max(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[278/545] 'mdl::math::max(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[279/545] 'mdl::math::max(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[280/545] 'mdl::math::max(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[281/545] 'mdl::math::max(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[282/545] 'mdl::math::max(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[283/545] 'mdl::math::max(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[284/545] 'mdl::math::max(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[285/545] 'mdl::math::max(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[286/545] 'mdl::math::max(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[287/545] 'mdl::math::max(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[288/545] 'mdl::math::max(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[289/545] 'mdl::math::max(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[290/545] 'mdl::math::max(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[291/545] 'mdl::math::max(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[292/545] 'mdl::math::max(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[293/545] 'mdl::math::max(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[294/545] 'mdl::math::max(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[295/545] 'mdl::math::max(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[296/545] 'mdl::math::max(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[297/545] 'mdl::math::max(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[298/545] 'mdl::math::max(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[299/545] 'mdl::math::max_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[300/545] 'mdl::math::max_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[301/545] 'mdl::math::max_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[302/545] 'mdl::math::max_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[303/545] 'mdl::math::max_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[304/545] 'mdl::math::max_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[305/545] 'mdl::math::max_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[306/545] 'mdl::math::max_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[307/545] 'mdl::math::max_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[308/545] 'mdl::math::max_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[309/545] 'mdl::math::min(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[310/545] 'mdl::math::min(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[311/545] 'mdl::math::min(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[312/545] 'mdl::math::min(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[313/545] 'mdl::math::min(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[314/545] 'mdl::math::min(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[315/545] 'mdl::math::min(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[316/545] 'mdl::math::min(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[317/545] 'mdl::math::min(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[318/545] 'mdl::math::min(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[319/545] 'mdl::math::min(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[320/545] 'mdl::math::min(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[321/545] 'mdl::math::min(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[322/545] 'mdl::math::min(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[323/545] 'mdl::math::min(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[324/545] 'mdl::math::min(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[325/545] 'mdl::math::min(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[326/545] 'mdl::math::min(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[327/545] 'mdl::math::min(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[328/545] 'mdl::math::min(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[329/545] 'mdl::math::min(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[330/545] 'mdl::math::min(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[331/545] 'mdl::math::min(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[332/545] 'mdl::math::min(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[333/545] 'mdl::math::min(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[334/545] 'mdl::math::min(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[335/545] 'mdl::math::min(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[336/545] 'mdl::math::min(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[337/545] 'mdl::math::min(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[338/545] 'mdl::math::min(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[339/545] 'mdl::math::min(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[340/545] 'mdl::math::min(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[341/545] 'mdl::math::min(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[342/545] 'mdl::math::min_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[343/545] 'mdl::math::min_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[344/545] 'mdl::math::min_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[345/545] 'mdl::math::min_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[346/545] 'mdl::math::min_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[347/545] 'mdl::math::min_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[348/545] 'mdl::math::min_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[349/545] 'mdl::math::min_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[350/545] 'mdl::math::min_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[351/545] 'mdl::math::min_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[352/545] 'mdl::math::modf(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[353/545] 'mdl::math::modf(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[354/545] 'mdl::math::modf(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[355/545] 'mdl::math::modf(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[356/545] 'mdl::math::modf(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[357/545] 'mdl::math::modf(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[358/545] 'mdl::math::modf(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[359/545] 'mdl::math::modf(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[360/545] 'mdl::math::normalize(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[361/545] 'mdl::math::normalize(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[362/545] 'mdl::math::normalize(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[363/545] 'mdl::math::normalize(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[364/545] 'mdl::math::normalize(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[365/545] 'mdl::math::normalize(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[366/545] 'mdl::math::normalize(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[367/545] 'mdl::math::normalize(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[368/545] 'mdl::math::pow(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[369/545] 'mdl::math::pow(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[370/545] 'mdl::math::pow(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[371/545] 'mdl::math::pow(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[372/545] 'mdl::math::pow(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[373/545] 'mdl::math::pow(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[374/545] 'mdl::math::pow(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[375/545] 'mdl::math::pow(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[376/545] 'mdl::math::pow(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[377/545] 'mdl::math::pow(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[378/545] 'mdl::math::pow(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[379/545] 'mdl::math::pow(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[380/545] 'mdl::math::pow(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[381/545] 'mdl::math::pow(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[382/545] 'mdl::math::pow(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[383/545] 'mdl::math::pow(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[384/545] 'mdl::math::pow(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[385/545] 'mdl::math::pow(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[386/545] 'mdl::math::pow(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[387/545] 'mdl::math::pow(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[388/545] 'mdl::math::pow(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[389/545] 'mdl::math::pow(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[390/545] 'mdl::math::pow(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[391/545] 'mdl::math::radians(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[392/545] 'mdl::math::radians(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[393/545] 'mdl::math::radians(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[394/545] 'mdl::math::radians(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[395/545] 'mdl::math::radians(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[396/545] 'mdl::math::radians(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[397/545] 'mdl::math::radians(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[398/545] 'mdl::math::radians(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[399/545] 'mdl::math::round(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[400/545] 'mdl::math::round(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[401/545] 'mdl::math::round(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[402/545] 'mdl::math::round(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[403/545] 'mdl::math::round(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[404/545] 'mdl::math::round(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[405/545] 'mdl::math::round(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[406/545] 'mdl::math::round(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[407/545] 'mdl::math::rsqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[408/545] 'mdl::math::rsqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[409/545] 'mdl::math::rsqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[410/545] 'mdl::math::rsqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[411/545] 'mdl::math::rsqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[412/545] 'mdl::math::rsqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[413/545] 'mdl::math::rsqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[414/545] 'mdl::math::rsqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[415/545] 'mdl::math::rsqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[416/545] 'mdl::math::saturate(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[417/545] 'mdl::math::saturate(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[418/545] 'mdl::math::saturate(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[419/545] 'mdl::math::saturate(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[420/545] 'mdl::math::saturate(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[421/545] 'mdl::math::saturate(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[422/545] 'mdl::math::saturate(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[423/545] 'mdl::math::saturate(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[424/545] 'mdl::math::saturate(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[425/545] 'mdl::math::sign(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[426/545] 'mdl::math::sign(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[427/545] 'mdl::math::sign(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[428/545] 'mdl::math::sign(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[429/545] 'mdl::math::sign(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[430/545] 'mdl::math::sign(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[431/545] 'mdl::math::sign(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[432/545] 'mdl::math::sign(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[433/545] 'mdl::math::sign(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[434/545] 'mdl::math::sign(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[435/545] 'mdl::math::sign(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[436/545] 'mdl::math::sign(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[437/545] 'mdl::math::sin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[438/545] 'mdl::math::sin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[439/545] 'mdl::math::sin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[440/545] 'mdl::math::sin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[441/545] 'mdl::math::sin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[442/545] 'mdl::math::sin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[443/545] 'mdl::math::sin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[444/545] 'mdl::math::sin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[445/545] 'mdl::math::sincos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[446/545] 'mdl::math::sincos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[447/545] 'mdl::math::sincos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[448/545] 'mdl::math::sincos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[449/545] 'mdl::math::sincos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[450/545] 'mdl::math::sincos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[451/545] 'mdl::math::sincos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[452/545] 'mdl::math::sincos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[453/545] 'mdl::math::smoothstep(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[454/545] 'mdl::math::smoothstep(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[455/545] 'mdl::math::smoothstep(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[456/545] 'mdl::math::smoothstep(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[457/545] 'mdl::math::smoothstep(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[458/545] 'mdl::math::smoothstep(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[459/545] 'mdl::math::smoothstep(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[460/545] 'mdl::math::smoothstep(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[461/545] 'mdl::math::smoothstep(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[462/545] 'mdl::math::smoothstep(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[463/545] 'mdl::math::smoothstep(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[464/545] 'mdl::math::smoothstep(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[465/545] 'mdl::math::smoothstep(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[466/545] 'mdl::math::smoothstep(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[467/545] 'mdl::math::sqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[468/545] 'mdl::math::sqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[469/545] 'mdl::math::sqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[470/545] 'mdl::math::sqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[471/545] 'mdl::math::sqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[472/545] 'mdl::math::sqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[473/545] 'mdl::math::sqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[474/545] 'mdl::math::sqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[475/545] 'mdl::math::sqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[476/545] 'mdl::math::step(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[477/545] 'mdl::math::step(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[478/545] 'mdl::math::step(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[479/545] 'mdl::math::step(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[480/545] 'mdl::math::step(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[481/545] 'mdl::math::step(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[482/545] 'mdl::math::step(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[483/545] 'mdl::math::step(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[484/545] 'mdl::math::tan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[485/545] 'mdl::math::tan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[486/545] 'mdl::math::tan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[487/545] 'mdl::math::tan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[488/545] 'mdl::math::tan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[489/545] 'mdl::math::tan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[490/545] 'mdl::math::tan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[491/545] 'mdl::math::tan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[492/545] 'mdl::math::transpose(float2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[493/545] 'mdl::math::transpose(float3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[494/545] 'mdl::math::transpose(float2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[495/545] 'mdl::math::transpose(float3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[496/545] 'mdl::math::transpose(float2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[497/545] 'mdl::math::transpose(float4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[498/545] 'mdl::math::transpose(float4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[499/545] 'mdl::math::transpose(float3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[500/545] 'mdl::math::transpose(float4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[501/545] 'mdl::math::transpose(double2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[502/545] 'mdl::math::transpose(double3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[503/545] 'mdl::math::transpose(double2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[504/545] 'mdl::math::transpose(double3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[505/545] 'mdl::math::transpose(double2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[506/545] 'mdl::math::transpose(double4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[507/545] 'mdl::math::transpose(double4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[508/545] 'mdl::math::transpose(double3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[509/545] 'mdl::math::transpose(double4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[510/545] 'mdl::math::blackbody(float)'
			SDPropertyCategory = 'Input'
				'temperature' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[511/545] 'mdl::math::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[512/545] 'mdl::math::emission_color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[513/545] 'mdl::math::emission_color(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[514/545] 'mdl::math::DX(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[515/545] 'mdl::math::DX(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[516/545] 'mdl::math::DX(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[517/545] 'mdl::math::DX(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[518/545] 'mdl::math::DY(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[519/545] 'mdl::math::DY(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[520/545] 'mdl::math::DY(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[521/545] 'mdl::math::DY(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[522/545] 'mdl::math::DX(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[523/545] 'mdl::math::DX(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[524/545] 'mdl::math::DX(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[525/545] 'mdl::math::DX(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[526/545] 'mdl::math::DY(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[527/545] 'mdl::math::DY(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[528/545] 'mdl::math::DY(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[529/545] 'mdl::math::DY(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[530/545] 'mdl::math::float[2]@(float[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[531/545] 'mdl::math::float2[2]@(float2[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[532/545] 'mdl::math::float3[2]@(float3[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[533/545] 'mdl::math::float4[2]@(float4[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[534/545] 'mdl::math::double[2]@(double[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[535/545] 'mdl::math::double2[2]@(double2[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[536/545] 'mdl::math::double3[2]@(double3[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[537/545] 'mdl::math::double4[2]@(double4[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[538/545] 'mdl::math::float[]@(float[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[539/545] 'mdl::math::float2[].len(float2[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[540/545] 'mdl::math::float3[].len(float3[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[541/545] 'mdl::math::float4[].len(float4[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[542/545] 'mdl::math::double[].len(double[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[543/545] 'mdl::math::double2[].len(double2[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[544/545] 'mdl::math::double3[].len(double3[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[545/545] 'mdl::math::double4[].len(double4[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
[19/27] 'mdl::limits' (SDMDLModule)
[20/27] 'mdl::alg::materials::blinn' (SDMDLModule)
	Definitions:
		[1/1] 'mdl::alg::materials::blinn::blinn'
			Label: 'Blinn'
			Description: 'A material with a blinn shading'
			SDPropertyCategory = 'Input'
				'baseColor' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Diffuse'
					Description: 'Diffuse channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___136) [CONNECTABLE]
					Label: 'Normal'
					Description: 'Normal channel'
					Types:
						'float3' (SDTypeFloat3) [Varying]
				'height' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Height'
					Description: 'Height channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'heightScale' = SDValueFloat(float(0)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'provides significant physical detail to the surface by manipulating the vertices of the mesh'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'emissiveColor' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Label: 'Emissive'
					Description: 'Emissive channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'emissiveIntensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Emissive Intensity'
					Description: 'Controls how much light is emitted from the surface'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'specular' = SDValueColorRGB(ColorRGB(0.214040995,0.214040995,0.214040995)) [CONNECTABLE]
					Label: 'Specular'
					Description: 'Specular channel'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Varying]
				'opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Opacity'
					Description: 'Opacity channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'glossiness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Label: 'Glossiness'
					Description: 'Glossiness channel'
					Types:
						'float' (SDTypeFloat) [Varying]
				'glossiness_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Label: 'Scale'
					Description: 'Glossiness adjustments'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
[21/27] 'mdl::noise' (SDMDLModule)
[22/27] 'mdl::std' (SDMDLModule)
	Definitions:
		[1/696] 'mdl::std::position()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[2/696] 'mdl::std::normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[3/696] 'mdl::std::geometry_normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[4/696] 'mdl::std::motion()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[5/696] 'mdl::std::texture_space_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/696] 'mdl::std::texture_coordinate(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[7/696] 'mdl::std::texture_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[8/696] 'mdl::std::texture_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[9/696] 'mdl::std::tangent_space(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[10/696] 'mdl::std::geometry_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[11/696] 'mdl::std::geometry_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[12/696] 'mdl::std::direction()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[13/696] 'mdl::std::animation_time()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[14/696] 'mdl::std::wavelength_base()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[15/696] 'mdl::std::transform(::state::coordinate_space,::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[16/696] 'mdl::std::transform_point(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'point' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/696] 'mdl::std::transform_vector(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'vector' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/696] 'mdl::std::transform_normal(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'normal' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[19/696] 'mdl::std::transform_scale(::state::coordinate_space,::state::coordinate_space,float)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'scale' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[20/696] 'mdl::std::rounded_corner_normal(float,bool,float)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'roundness' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[21/696] 'mdl::std::meters_per_scene_unit()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[22/696] 'mdl::std::scene_units_per_meter()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[23/696] 'mdl::std::object_id()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[24/696] 'mdl::std::wavelength_min()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[25/696] 'mdl::std::wavelength_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[26/696] 'mdl::std::abs(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[27/696] 'mdl::std::abs(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[28/696] 'mdl::std::abs(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[29/696] 'mdl::std::abs(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[30/696] 'mdl::std::abs(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[31/696] 'mdl::std::abs(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[32/696] 'mdl::std::abs(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[33/696] 'mdl::std::abs(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[34/696] 'mdl::std::abs(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[35/696] 'mdl::std::abs(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[36/696] 'mdl::std::abs(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[37/696] 'mdl::std::abs(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[38/696] 'mdl::std::abs(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[39/696] 'mdl::std::acos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[40/696] 'mdl::std::acos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[41/696] 'mdl::std::acos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[42/696] 'mdl::std::acos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[43/696] 'mdl::std::acos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[44/696] 'mdl::std::acos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[45/696] 'mdl::std::acos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[46/696] 'mdl::std::acos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[47/696] 'mdl::std::all(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[48/696] 'mdl::std::all(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[49/696] 'mdl::std::all(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[50/696] 'mdl::std::all(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[51/696] 'mdl::std::any(bool)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[52/696] 'mdl::std::any(bool2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[53/696] 'mdl::std::any(bool3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[54/696] 'mdl::std::any(bool4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[55/696] 'mdl::std::asin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[56/696] 'mdl::std::asin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[57/696] 'mdl::std::asin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[58/696] 'mdl::std::asin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[59/696] 'mdl::std::asin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[60/696] 'mdl::std::asin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[61/696] 'mdl::std::asin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[62/696] 'mdl::std::asin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[63/696] 'mdl::std::atan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[64/696] 'mdl::std::atan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[65/696] 'mdl::std::atan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[66/696] 'mdl::std::atan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[67/696] 'mdl::std::atan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[68/696] 'mdl::std::atan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[69/696] 'mdl::std::atan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[70/696] 'mdl::std::atan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[71/696] 'mdl::std::atan2(float,float)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[72/696] 'mdl::std::atan2(float2,float2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[73/696] 'mdl::std::atan2(float3,float3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[74/696] 'mdl::std::atan2(float4,float4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[75/696] 'mdl::std::atan2(double,double)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[76/696] 'mdl::std::atan2(double2,double2)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[77/696] 'mdl::std::atan2(double3,double3)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[78/696] 'mdl::std::atan2(double4,double4)'
			SDPropertyCategory = 'Input'
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[79/696] 'mdl::std::average(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[80/696] 'mdl::std::average(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[81/696] 'mdl::std::average(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[82/696] 'mdl::std::average(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[83/696] 'mdl::std::average(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[84/696] 'mdl::std::average(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[85/696] 'mdl::std::average(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[86/696] 'mdl::std::average(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[87/696] 'mdl::std::average(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[88/696] 'mdl::std::ceil(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[89/696] 'mdl::std::ceil(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[90/696] 'mdl::std::ceil(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[91/696] 'mdl::std::ceil(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[92/696] 'mdl::std::ceil(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[93/696] 'mdl::std::ceil(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[94/696] 'mdl::std::ceil(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[95/696] 'mdl::std::ceil(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[96/696] 'mdl::std::clamp(int,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[97/696] 'mdl::std::clamp(int2,int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[98/696] 'mdl::std::clamp(int3,int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[99/696] 'mdl::std::clamp(int4,int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[100/696] 'mdl::std::clamp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[101/696] 'mdl::std::clamp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[102/696] 'mdl::std::clamp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[103/696] 'mdl::std::clamp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[104/696] 'mdl::std::clamp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[105/696] 'mdl::std::clamp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[106/696] 'mdl::std::clamp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[107/696] 'mdl::std::clamp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[108/696] 'mdl::std::clamp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[109/696] 'mdl::std::clamp(int2,int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[110/696] 'mdl::std::clamp(int2,int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[111/696] 'mdl::std::clamp(int2,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[112/696] 'mdl::std::clamp(int3,int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[113/696] 'mdl::std::clamp(int3,int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[114/696] 'mdl::std::clamp(int3,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[115/696] 'mdl::std::clamp(int4,int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[116/696] 'mdl::std::clamp(int4,int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[117/696] 'mdl::std::clamp(int4,int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'min' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'max' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[118/696] 'mdl::std::clamp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[119/696] 'mdl::std::clamp(float2,float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[120/696] 'mdl::std::clamp(float2,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[121/696] 'mdl::std::clamp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[122/696] 'mdl::std::clamp(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[123/696] 'mdl::std::clamp(float3,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[124/696] 'mdl::std::clamp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[125/696] 'mdl::std::clamp(float4,float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[126/696] 'mdl::std::clamp(float4,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[127/696] 'mdl::std::clamp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[128/696] 'mdl::std::clamp(color,float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[129/696] 'mdl::std::clamp(color,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'min' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'max' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[130/696] 'mdl::std::clamp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[131/696] 'mdl::std::clamp(double2,double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[132/696] 'mdl::std::clamp(double2,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[133/696] 'mdl::std::clamp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[134/696] 'mdl::std::clamp(double3,double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[135/696] 'mdl::std::clamp(double3,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[136/696] 'mdl::std::clamp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[137/696] 'mdl::std::clamp(double4,double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[138/696] 'mdl::std::clamp(double4,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'min' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'max' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[139/696] 'mdl::std::cos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[140/696] 'mdl::std::cos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[141/696] 'mdl::std::cos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[142/696] 'mdl::std::cos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[143/696] 'mdl::std::cos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[144/696] 'mdl::std::cos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[145/696] 'mdl::std::cos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[146/696] 'mdl::std::cos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[147/696] 'mdl::std::cross(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[148/696] 'mdl::std::cross(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[149/696] 'mdl::std::degrees(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[150/696] 'mdl::std::degrees(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[151/696] 'mdl::std::degrees(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[152/696] 'mdl::std::degrees(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[153/696] 'mdl::std::degrees(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[154/696] 'mdl::std::degrees(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[155/696] 'mdl::std::degrees(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[156/696] 'mdl::std::degrees(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[157/696] 'mdl::std::distance(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[158/696] 'mdl::std::distance(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[159/696] 'mdl::std::distance(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[160/696] 'mdl::std::distance(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[161/696] 'mdl::std::distance(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[162/696] 'mdl::std::distance(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[163/696] 'mdl::std::distance(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[164/696] 'mdl::std::distance(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[165/696] 'mdl::std::dot(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[166/696] 'mdl::std::dot(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[167/696] 'mdl::std::dot(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[168/696] 'mdl::std::dot(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[169/696] 'mdl::std::dot(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[170/696] 'mdl::std::dot(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[171/696] 'mdl::std::dot(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[172/696] 'mdl::std::dot(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[173/696] 'mdl::std::eval_at_wavelength(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'wavelength' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[174/696] 'mdl::std::exp(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[175/696] 'mdl::std::exp(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[176/696] 'mdl::std::exp(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[177/696] 'mdl::std::exp(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[178/696] 'mdl::std::exp(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[179/696] 'mdl::std::exp(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[180/696] 'mdl::std::exp(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[181/696] 'mdl::std::exp(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[182/696] 'mdl::std::exp(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[183/696] 'mdl::std::exp2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[184/696] 'mdl::std::exp2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[185/696] 'mdl::std::exp2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[186/696] 'mdl::std::exp2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[187/696] 'mdl::std::exp2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[188/696] 'mdl::std::exp2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[189/696] 'mdl::std::exp2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[190/696] 'mdl::std::exp2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[191/696] 'mdl::std::exp2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[192/696] 'mdl::std::floor(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[193/696] 'mdl::std::floor(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[194/696] 'mdl::std::floor(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[195/696] 'mdl::std::floor(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[196/696] 'mdl::std::floor(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[197/696] 'mdl::std::floor(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[198/696] 'mdl::std::floor(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[199/696] 'mdl::std::floor(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[200/696] 'mdl::std::fmod(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[201/696] 'mdl::std::fmod(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[202/696] 'mdl::std::fmod(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[203/696] 'mdl::std::fmod(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[204/696] 'mdl::std::fmod(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[205/696] 'mdl::std::fmod(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[206/696] 'mdl::std::fmod(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[207/696] 'mdl::std::fmod(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[208/696] 'mdl::std::fmod(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[209/696] 'mdl::std::fmod(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[210/696] 'mdl::std::fmod(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[211/696] 'mdl::std::fmod(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[212/696] 'mdl::std::fmod(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[213/696] 'mdl::std::fmod(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[214/696] 'mdl::std::frac(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[215/696] 'mdl::std::frac(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[216/696] 'mdl::std::frac(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[217/696] 'mdl::std::frac(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[218/696] 'mdl::std::frac(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[219/696] 'mdl::std::frac(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[220/696] 'mdl::std::frac(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[221/696] 'mdl::std::frac(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[222/696] 'mdl::std::isnan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[223/696] 'mdl::std::isnan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[224/696] 'mdl::std::isnan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[225/696] 'mdl::std::isnan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[226/696] 'mdl::std::isnan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[227/696] 'mdl::std::isnan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[228/696] 'mdl::std::isnan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[229/696] 'mdl::std::isnan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[230/696] 'mdl::std::isfinite(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[231/696] 'mdl::std::isfinite(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[232/696] 'mdl::std::isfinite(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[233/696] 'mdl::std::isfinite(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[234/696] 'mdl::std::isfinite(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[235/696] 'mdl::std::isfinite(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[236/696] 'mdl::std::isfinite(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[237/696] 'mdl::std::isfinite(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[238/696] 'mdl::std::length(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[239/696] 'mdl::std::length(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[240/696] 'mdl::std::length(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[241/696] 'mdl::std::length(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[242/696] 'mdl::std::length(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[243/696] 'mdl::std::length(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[244/696] 'mdl::std::length(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[245/696] 'mdl::std::length(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[246/696] 'mdl::std::lerp(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[247/696] 'mdl::std::lerp(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[248/696] 'mdl::std::lerp(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[249/696] 'mdl::std::lerp(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[250/696] 'mdl::std::lerp(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[251/696] 'mdl::std::lerp(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[252/696] 'mdl::std::lerp(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[253/696] 'mdl::std::lerp(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[254/696] 'mdl::std::lerp(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[255/696] 'mdl::std::lerp(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[256/696] 'mdl::std::lerp(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[257/696] 'mdl::std::lerp(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[258/696] 'mdl::std::lerp(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[259/696] 'mdl::std::lerp(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[260/696] 'mdl::std::lerp(color,color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[261/696] 'mdl::std::lerp(color,color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[262/696] 'mdl::std::log(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[263/696] 'mdl::std::log(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[264/696] 'mdl::std::log(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[265/696] 'mdl::std::log(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[266/696] 'mdl::std::log(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[267/696] 'mdl::std::log(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[268/696] 'mdl::std::log(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[269/696] 'mdl::std::log(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[270/696] 'mdl::std::log(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[271/696] 'mdl::std::log2(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[272/696] 'mdl::std::log2(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[273/696] 'mdl::std::log2(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[274/696] 'mdl::std::log2(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[275/696] 'mdl::std::log2(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[276/696] 'mdl::std::log2(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[277/696] 'mdl::std::log2(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[278/696] 'mdl::std::log2(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[279/696] 'mdl::std::log2(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[280/696] 'mdl::std::log10(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[281/696] 'mdl::std::log10(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[282/696] 'mdl::std::log10(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[283/696] 'mdl::std::log10(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[284/696] 'mdl::std::log10(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[285/696] 'mdl::std::log10(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[286/696] 'mdl::std::log10(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[287/696] 'mdl::std::log10(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[288/696] 'mdl::std::log10(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[289/696] 'mdl::std::luminance(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[290/696] 'mdl::std::luminance(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[291/696] 'mdl::std::max(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[292/696] 'mdl::std::max(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[293/696] 'mdl::std::max(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[294/696] 'mdl::std::max(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[295/696] 'mdl::std::max(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[296/696] 'mdl::std::max(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[297/696] 'mdl::std::max(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[298/696] 'mdl::std::max(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[299/696] 'mdl::std::max(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[300/696] 'mdl::std::max(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[301/696] 'mdl::std::max(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[302/696] 'mdl::std::max(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[303/696] 'mdl::std::max(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[304/696] 'mdl::std::max(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[305/696] 'mdl::std::max(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[306/696] 'mdl::std::max(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[307/696] 'mdl::std::max(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[308/696] 'mdl::std::max(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[309/696] 'mdl::std::max(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[310/696] 'mdl::std::max(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[311/696] 'mdl::std::max(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[312/696] 'mdl::std::max(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[313/696] 'mdl::std::max(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[314/696] 'mdl::std::max(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[315/696] 'mdl::std::max(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[316/696] 'mdl::std::max(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[317/696] 'mdl::std::max(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[318/696] 'mdl::std::max(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[319/696] 'mdl::std::max(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[320/696] 'mdl::std::max(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[321/696] 'mdl::std::max(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[322/696] 'mdl::std::max(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[323/696] 'mdl::std::max(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[324/696] 'mdl::std::max_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[325/696] 'mdl::std::max_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[326/696] 'mdl::std::max_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[327/696] 'mdl::std::max_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[328/696] 'mdl::std::max_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[329/696] 'mdl::std::max_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[330/696] 'mdl::std::max_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[331/696] 'mdl::std::max_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[332/696] 'mdl::std::max_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[333/696] 'mdl::std::max_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[334/696] 'mdl::std::min(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[335/696] 'mdl::std::min(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[336/696] 'mdl::std::min(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[337/696] 'mdl::std::min(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[338/696] 'mdl::std::min(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[339/696] 'mdl::std::min(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[340/696] 'mdl::std::min(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[341/696] 'mdl::std::min(int,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[342/696] 'mdl::std::min(int,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[343/696] 'mdl::std::min(int,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[344/696] 'mdl::std::min(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[345/696] 'mdl::std::min(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[346/696] 'mdl::std::min(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[347/696] 'mdl::std::min(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[348/696] 'mdl::std::min(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[349/696] 'mdl::std::min(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[350/696] 'mdl::std::min(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[351/696] 'mdl::std::min(float,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[352/696] 'mdl::std::min(float,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[353/696] 'mdl::std::min(float,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[354/696] 'mdl::std::min(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[355/696] 'mdl::std::min(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[356/696] 'mdl::std::min(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[357/696] 'mdl::std::min(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[358/696] 'mdl::std::min(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[359/696] 'mdl::std::min(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[360/696] 'mdl::std::min(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[361/696] 'mdl::std::min(double,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[362/696] 'mdl::std::min(double,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[363/696] 'mdl::std::min(double,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[364/696] 'mdl::std::min(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[365/696] 'mdl::std::min(float,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[366/696] 'mdl::std::min(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[367/696] 'mdl::std::min_value(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[368/696] 'mdl::std::min_value(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[369/696] 'mdl::std::min_value(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[370/696] 'mdl::std::min_value(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[371/696] 'mdl::std::min_value(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[372/696] 'mdl::std::min_value(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[373/696] 'mdl::std::min_value(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[374/696] 'mdl::std::min_value(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[375/696] 'mdl::std::min_value(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[376/696] 'mdl::std::min_value_wavelength(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[377/696] 'mdl::std::modf(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[378/696] 'mdl::std::modf(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[379/696] 'mdl::std::modf(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[380/696] 'mdl::std::modf(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[381/696] 'mdl::std::modf(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[382/696] 'mdl::std::modf(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[383/696] 'mdl::std::modf(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[384/696] 'mdl::std::modf(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[385/696] 'mdl::std::normalize(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[386/696] 'mdl::std::normalize(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[387/696] 'mdl::std::normalize(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[388/696] 'mdl::std::normalize(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[389/696] 'mdl::std::normalize(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[390/696] 'mdl::std::normalize(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[391/696] 'mdl::std::normalize(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[392/696] 'mdl::std::normalize(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[393/696] 'mdl::std::pow(int,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[394/696] 'mdl::std::pow(int2,int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[395/696] 'mdl::std::pow(int3,int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[396/696] 'mdl::std::pow(int4,int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[397/696] 'mdl::std::pow(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[398/696] 'mdl::std::pow(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[399/696] 'mdl::std::pow(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[400/696] 'mdl::std::pow(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[401/696] 'mdl::std::pow(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[402/696] 'mdl::std::pow(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[403/696] 'mdl::std::pow(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[404/696] 'mdl::std::pow(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[405/696] 'mdl::std::pow(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[406/696] 'mdl::std::pow(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[407/696] 'mdl::std::pow(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'b' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[408/696] 'mdl::std::pow(float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[409/696] 'mdl::std::pow(float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[410/696] 'mdl::std::pow(float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[411/696] 'mdl::std::pow(double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[412/696] 'mdl::std::pow(double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[413/696] 'mdl::std::pow(double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[414/696] 'mdl::std::pow(color,color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[415/696] 'mdl::std::pow(color,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[416/696] 'mdl::std::radians(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[417/696] 'mdl::std::radians(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[418/696] 'mdl::std::radians(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[419/696] 'mdl::std::radians(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[420/696] 'mdl::std::radians(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[421/696] 'mdl::std::radians(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[422/696] 'mdl::std::radians(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[423/696] 'mdl::std::radians(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[424/696] 'mdl::std::round(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[425/696] 'mdl::std::round(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[426/696] 'mdl::std::round(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[427/696] 'mdl::std::round(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[428/696] 'mdl::std::round(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[429/696] 'mdl::std::round(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[430/696] 'mdl::std::round(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[431/696] 'mdl::std::round(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[432/696] 'mdl::std::rsqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[433/696] 'mdl::std::rsqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[434/696] 'mdl::std::rsqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[435/696] 'mdl::std::rsqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[436/696] 'mdl::std::rsqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[437/696] 'mdl::std::rsqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[438/696] 'mdl::std::rsqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[439/696] 'mdl::std::rsqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[440/696] 'mdl::std::rsqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[441/696] 'mdl::std::saturate(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[442/696] 'mdl::std::saturate(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[443/696] 'mdl::std::saturate(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[444/696] 'mdl::std::saturate(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[445/696] 'mdl::std::saturate(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[446/696] 'mdl::std::saturate(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[447/696] 'mdl::std::saturate(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[448/696] 'mdl::std::saturate(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[449/696] 'mdl::std::saturate(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[450/696] 'mdl::std::sign(int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[451/696] 'mdl::std::sign(int2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[452/696] 'mdl::std::sign(int3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[453/696] 'mdl::std::sign(int4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[454/696] 'mdl::std::sign(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[455/696] 'mdl::std::sign(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[456/696] 'mdl::std::sign(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[457/696] 'mdl::std::sign(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[458/696] 'mdl::std::sign(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[459/696] 'mdl::std::sign(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[460/696] 'mdl::std::sign(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[461/696] 'mdl::std::sign(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[462/696] 'mdl::std::sin(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[463/696] 'mdl::std::sin(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[464/696] 'mdl::std::sin(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[465/696] 'mdl::std::sin(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[466/696] 'mdl::std::sin(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[467/696] 'mdl::std::sin(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[468/696] 'mdl::std::sin(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[469/696] 'mdl::std::sin(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[470/696] 'mdl::std::sincos(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[471/696] 'mdl::std::sincos(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
		[472/696] 'mdl::std::sincos(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
		[473/696] 'mdl::std::sincos(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
		[474/696] 'mdl::std::sincos(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
		[475/696] 'mdl::std::sincos(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
		[476/696] 'mdl::std::sincos(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
		[477/696] 'mdl::std::sincos(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
		[478/696] 'mdl::std::smoothstep(float,float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[479/696] 'mdl::std::smoothstep(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[480/696] 'mdl::std::smoothstep(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[481/696] 'mdl::std::smoothstep(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[482/696] 'mdl::std::smoothstep(double,double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[483/696] 'mdl::std::smoothstep(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[484/696] 'mdl::std::smoothstep(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[485/696] 'mdl::std::smoothstep(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[486/696] 'mdl::std::smoothstep(float2,float2,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[487/696] 'mdl::std::smoothstep(float3,float3,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[488/696] 'mdl::std::smoothstep(float4,float4,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'l' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[489/696] 'mdl::std::smoothstep(double2,double2,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[490/696] 'mdl::std::smoothstep(double3,double3,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[491/696] 'mdl::std::smoothstep(double4,double4,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'l' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[492/696] 'mdl::std::sqrt(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[493/696] 'mdl::std::sqrt(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[494/696] 'mdl::std::sqrt(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[495/696] 'mdl::std::sqrt(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[496/696] 'mdl::std::sqrt(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[497/696] 'mdl::std::sqrt(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[498/696] 'mdl::std::sqrt(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[499/696] 'mdl::std::sqrt(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[500/696] 'mdl::std::sqrt(color)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[501/696] 'mdl::std::step(float,float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[502/696] 'mdl::std::step(float2,float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'b' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[503/696] 'mdl::std::step(float3,float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'b' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[504/696] 'mdl::std::step(float4,float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'b' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[505/696] 'mdl::std::step(double,double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'b' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[506/696] 'mdl::std::step(double2,double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'b' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[507/696] 'mdl::std::step(double3,double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'b' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[508/696] 'mdl::std::step(double4,double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'b' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[509/696] 'mdl::std::tan(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[510/696] 'mdl::std::tan(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[511/696] 'mdl::std::tan(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[512/696] 'mdl::std::tan(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[513/696] 'mdl::std::tan(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[514/696] 'mdl::std::tan(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[515/696] 'mdl::std::tan(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[516/696] 'mdl::std::tan(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[517/696] 'mdl::std::transpose(float2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[518/696] 'mdl::std::transpose(float3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[519/696] 'mdl::std::transpose(float2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[520/696] 'mdl::std::transpose(float3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[521/696] 'mdl::std::transpose(float2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[522/696] 'mdl::std::transpose(float4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[523/696] 'mdl::std::transpose(float4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[524/696] 'mdl::std::transpose(float3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[525/696] 'mdl::std::transpose(float4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[526/696] 'mdl::std::transpose(double2x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[527/696] 'mdl::std::transpose(double3x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[528/696] 'mdl::std::transpose(double2x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[529/696] 'mdl::std::transpose(double3x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[530/696] 'mdl::std::transpose(double2x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[531/696] 'mdl::std::transpose(double4x2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[532/696] 'mdl::std::transpose(double4x3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[533/696] 'mdl::std::transpose(double3x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[534/696] 'mdl::std::transpose(double4x4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[535/696] 'mdl::std::blackbody(float)'
			SDPropertyCategory = 'Input'
				'temperature' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[536/696] 'mdl::std::emission_color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[537/696] 'mdl::std::emission_color(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[538/696] 'mdl::std::DX(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[539/696] 'mdl::std::DX(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[540/696] 'mdl::std::DX(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[541/696] 'mdl::std::DX(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[542/696] 'mdl::std::DX(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[543/696] 'mdl::std::DX(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[544/696] 'mdl::std::DX(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[545/696] 'mdl::std::DX(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[546/696] 'mdl::std::DY(float)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[547/696] 'mdl::std::DY(float2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[548/696] 'mdl::std::DY(float3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[549/696] 'mdl::std::DY(float4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[550/696] 'mdl::std::DY(double)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[551/696] 'mdl::std::DY(double2)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[552/696] 'mdl::std::DY(double3)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[553/696] 'mdl::std::DY(double4)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[554/696] 'mdl::std::width(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[555/696] 'mdl::std::width(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[556/696] 'mdl::std::width(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[557/696] 'mdl::std::height(texture_2d,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[558/696] 'mdl::std::height(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[559/696] 'mdl::std::height(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[560/696] 'mdl::std::depth(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[561/696] 'mdl::std::lookup_float(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[562/696] 'mdl::std::lookup_float(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[563/696] 'mdl::std::lookup_float(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[564/696] 'mdl::std::lookup_float(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[565/696] 'mdl::std::lookup_float2(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[566/696] 'mdl::std::lookup_float2(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[567/696] 'mdl::std::lookup_float2(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[568/696] 'mdl::std::lookup_float2(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[569/696] 'mdl::std::lookup_float3(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[570/696] 'mdl::std::lookup_float3(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[571/696] 'mdl::std::lookup_float3(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[572/696] 'mdl::std::lookup_float3(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[573/696] 'mdl::std::lookup_float4(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[574/696] 'mdl::std::lookup_float4(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[575/696] 'mdl::std::lookup_float4(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[576/696] 'mdl::std::lookup_float4(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[577/696] 'mdl::std::lookup_color(texture_2d,float2,::tex::wrap_mode,::tex::wrap_mode,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[578/696] 'mdl::std::lookup_color(texture_3d,float3,::tex::wrap_mode,::tex::wrap_mode,::tex::wrap_mode,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_w' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_w' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[579/696] 'mdl::std::lookup_color(texture_cube,float3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[580/696] 'mdl::std::lookup_color(texture_ptex,int)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				'channel' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[581/696] 'mdl::std::texel_float(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[582/696] 'mdl::std::texel_float(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[583/696] 'mdl::std::texel_float2(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[584/696] 'mdl::std::texel_float2(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[585/696] 'mdl::std::texel_float3(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[586/696] 'mdl::std::texel_float3(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[587/696] 'mdl::std::texel_float4(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[588/696] 'mdl::std::texel_float4(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[589/696] 'mdl::std::texel_color(texture_2d,int2,int2)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'uv_tile' = SDValueInt2(int2(0,0)) [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[590/696] 'mdl::std::texel_color(texture_3d,int3)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				'coord' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[591/696] 'mdl::std::texture_isvalid(texture_2d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[592/696] 'mdl::std::texture_isvalid(texture_3d)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[593/696] 'mdl::std::texture_isvalid(texture_cube)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[594/696] 'mdl::std::texture_isvalid(texture_ptex)'
			SDPropertyCategory = 'Input'
				'tex' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[595/696] 'mdl::std::diffuse_reflection_bsdf(color,float,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[596/696] 'mdl::std::diffuse_transmission_bsdf(color,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[597/696] 'mdl::std::specular_bsdf(color,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[598/696] 'mdl::std::simple_glossy_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___107) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[599/696] 'mdl::std::backscattering_glossy_reflection_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___108) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[600/696] 'mdl::std::measured_bsdf(bsdf_measurement,float,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[601/696] 'mdl::std::microfacet_beckmann_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___109) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[602/696] 'mdl::std::microfacet_ggx_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___110) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[603/696] 'mdl::std::microfacet_beckmann_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___111) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[604/696] 'mdl::std::microfacet_ggx_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___112) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[605/696] 'mdl::std::ward_geisler_moroder_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___113) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[606/696] 'mdl::std::diffuse_edf(string)'
			SDPropertyCategory = 'Input'
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[607/696] 'mdl::std::spot_edf(float,float,bool,float3x3,string)'
			SDPropertyCategory = 'Input'
				'exponent' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'spread' = SDValueFloat(float(3.14159274)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[608/696] 'mdl::std::measured_edf(light_profile,float,bool,float3x3,float3,string)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				'multiplier' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'global_distribution' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'global_frame' = SDValueMatrix(matrix<float>[3][3](float(1),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix) [Uniform]
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___114) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[609/696] 'mdl::std::anisotropic_vdf(float,string)'
			SDPropertyCategory = 'Input'
				'directional_bias' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[610/696] 'mdl::std::tint(color,bsdf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[611/696] 'mdl::std::tint(color,edf)'
			SDPropertyCategory = 'Input'
				'tint' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'base' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[612/696] 'mdl::std::thin_film(float,color,bsdf)'
			SDPropertyCategory = 'Input'
				'thickness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[613/696] 'mdl::std::directional_factor(color,color,float,bsdf)'
			SDPropertyCategory = 'Input'
				'normal_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[614/696] 'mdl::std::bsdf_component.weight(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[615/696] 'mdl::std::bsdf_component.component(::df::bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[616/696] 'mdl::std::edf_component.weight(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
		[617/696] 'mdl::std::edf_component.component(::df::edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[618/696] 'mdl::std::vdf_component.weight(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[619/696] 'mdl::std::vdf_component.component(::df::vdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[620/696] 'mdl::std::normalized_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[621/696] 'mdl::std::normalized_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[622/696] 'mdl::std::normalized_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[623/696] 'mdl::std::clamped_mix(::df::bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[624/696] 'mdl::std::clamped_mix(::df::vdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[625/696] 'mdl::std::clamped_mix(::df::edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[626/696] 'mdl::std::weighted_layer(float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___115) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[627/696] 'mdl::std::fresnel_layer(float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___116) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[628/696] 'mdl::std::custom_curve_layer(float,float,float,float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'grazing_reflectivity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___117) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[629/696] 'mdl::std::measured_curve_layer(color[N],float,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___118) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[630/696] 'mdl::std::measured_curve_factor(color[N],bsdf)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[631/696] 'mdl::std::light_profile_power(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[632/696] 'mdl::std::light_profile_maximum(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[633/696] 'mdl::std::light_profile_isvalid(light_profile)'
			SDPropertyCategory = 'Input'
				'profile' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[634/696] 'mdl::std::bsdf_measurement_isvalid(bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'measurement' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[635/696] 'mdl::std::color_bsdf_component.weight(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[636/696] 'mdl::std::color_bsdf_component.component(::df::color_bsdf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[637/696] 'mdl::std::color_edf_component.weight(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[638/696] 'mdl::std::color_edf_component.component(::df::color_edf_component)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[639/696] 'mdl::std::color_normalized_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[640/696] 'mdl::std::color_normalized_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[641/696] 'mdl::std::color_clamped_mix(::df::color_bsdf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[642/696] 'mdl::std::color_clamped_mix(::df::color_edf_component[N])'
			SDPropertyCategory = 'Input'
				'components' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[643/696] 'mdl::std::color_weighted_layer(color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'weight' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___119) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[644/696] 'mdl::std::color_fresnel_layer(color,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___120) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[645/696] 'mdl::std::color_custom_curve_layer(color,color,float,color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'normal_reflectivity' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grazing_reflectivity' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'exponent' = SDValueFloat(float(5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___121) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[646/696] 'mdl::std::color_measured_curve_layer(color[N],color,bsdf,bsdf,float3)'
			SDPropertyCategory = 'Input'
				'curve_values' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'weight' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'layer' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___122) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[647/696] 'mdl::std::fresnel_factor(color,color,bsdf)'
			SDPropertyCategory = 'Input'
				'ior' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'extinction_coefficient' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[648/696] 'mdl::std::measured_factor(texture_2d,bsdf)'
			SDPropertyCategory = 'Input'
				'values' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'base' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[649/696] 'mdl::std::chiang_hair_bsdf(float,color,float2,float2,float2,float,color,float,string)'
			SDPropertyCategory = 'Input'
				'diffuse_reflection_weight' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'diffuse_reflection_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'roughness_R' = SDValueFloat2(float2(0,0)) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TT' = SDMDLValueParameterReference(2) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'roughness_TRT' = SDMDLValueParameterReference(3) [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'cuticle_angle' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'ior' = SDValueFloat(float(1.54999995)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[650/696] 'mdl::std::breakpoint()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[651/696] 'mdl::std::assert(bool,string,string,string,int)'
			SDPropertyCategory = 'Input'
				'condition' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'reason' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'funcname' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'filename' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'line' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[652/696] 'mdl::std::print(bool)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[653/696] 'mdl::std::print(bool2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[654/696] 'mdl::std::print(bool3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[655/696] 'mdl::std::print(bool4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[656/696] 'mdl::std::print(int)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[657/696] 'mdl::std::print(int2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[658/696] 'mdl::std::print(int3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[659/696] 'mdl::std::print(int4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[660/696] 'mdl::std::print(float)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[661/696] 'mdl::std::print(float2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[662/696] 'mdl::std::print(float3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[663/696] 'mdl::std::print(float4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[664/696] 'mdl::std::print(double)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[665/696] 'mdl::std::print(double2)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[666/696] 'mdl::std::print(double3)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[667/696] 'mdl::std::print(double4)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[668/696] 'mdl::std::print(color)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[669/696] 'mdl::std::print(string)'
			SDPropertyCategory = 'Input'
				'v' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[670/696] 'mdl::std::string[]@(string[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<string>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'string' (SDTypeString)
				
		[671/696] 'mdl::std::float[1]@(float[1],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[672/696] 'mdl::std::float[2]@(float[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[673/696] 'mdl::std::float2[2]@(float2[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[674/696] 'mdl::std::float3[2]@(float3[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[675/696] 'mdl::std::float4[2]@(float4[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[676/696] 'mdl::std::double[2]@(double[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[677/696] 'mdl::std::double2[2]@(double2[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[678/696] 'mdl::std::double3[2]@(double3[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[679/696] 'mdl::std::double4[2]@(double4[2],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[680/696] 'mdl::std::float[]@(float[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[681/696] 'mdl::std::bsdf_component[]@(::df::bsdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::bsdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::bsdf_component' (SDTypeStruct)
				
		[682/696] 'mdl::std::vdf_component[]@(::df::vdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::vdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::vdf_component' (SDTypeStruct)
				
		[683/696] 'mdl::std::edf_component[]@(::df::edf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::edf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::edf_component' (SDTypeStruct)
				
		[684/696] 'mdl::std::color[]@(color[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[685/696] 'mdl::std::color_bsdf_component[]@(::df::color_bsdf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_bsdf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_bsdf_component' (SDTypeStruct)
				
		[686/696] 'mdl::std::color_edf_component[]@(::df::color_edf_component[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::df::color_edf_component>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::df::color_edf_component' (SDTypeStruct)
				
		[687/696] 'mdl::std::string[].len(string[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<string>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[688/696] 'mdl::std::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[689/696] 'mdl::std::float2[].len(float2[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float2>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[690/696] 'mdl::std::float3[].len(float3[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float3>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[691/696] 'mdl::std::float4[].len(float4[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float4>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[692/696] 'mdl::std::double[].len(double[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[693/696] 'mdl::std::double2[].len(double2[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double2>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[694/696] 'mdl::std::double3[].len(double3[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double3>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[695/696] 'mdl::std::double4[].len(double4[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<double4>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[696/696] 'mdl::std::color[].len(color[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
[23/27] 'mdl::base' (SDMDLModule)
	Definitions:
		[1/71] 'mdl::base::int(::base::projection_mode)'
			Description: 'Methods for texture projection'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/71] 'mdl::base::int(::base::color_layer_mode)'
			Description: 'Texture combination modes between two layers. The two layers are modified in the manner described by the modes, and the result is blended with the bottom layer based on a weighting factor.'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[3/71] 'mdl::base::int(::base::texture_coordinate_system)'
			Description: 'Coordinate system selection for textures'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[4/71] 'mdl::base::int(::base::mono_mode)'
			Description: 'Modes for the creation of a gray-scale value from a color'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[5/71] 'mdl::base::int(::base::gradient_interpolation_mode)'
			Description: 'Modes for interpolating between the different colors in a gradient texture'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/71] 'mdl::base::int(::base::gradient_mode)'
			Description: 'Modes for generating the gradient position based on input uv coordinates'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[7/71] 'mdl::base::texture_coordinate_info(float3,float3,float3)'
			Description: 'The texture coordinate, tangent_u and tangent_v needed by bump mapping and anisotropy'
			SDPropertyCategory = 'Input'
				'position' = SDMDLValueCall(mdl::state::texture_coordinate(int)__default_call___5) [CONNECTABLE]
					Description: 'Texture coordinate'
					Types:
						'float3' (SDTypeFloat3)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___6) [CONNECTABLE]
					Description: 'Tangent in u direction'
					Types:
						'float3' (SDTypeFloat3)
				'tangent_v' = SDMDLValueCall(mdl::state::texture_tangent_v(int)__default_call___7) [CONNECTABLE]
					Description: 'Tangent in v direction'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[8/71] 'mdl::base::texture_coordinate_info.position(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[9/71] 'mdl::base::texture_coordinate_info.tangent_u(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[10/71] 'mdl::base::texture_coordinate_info.tangent_v(::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[11/71] 'mdl::base::color_layer(color,float,::base::color_layer_mode)'
			Description: 'Single texture layer for use in blending'
			SDPropertyCategory = 'Input'
				'layer_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The color to be combined with a layer "below" this layer'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'weight' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scale factor for blending this color with the color produced by the mode value (the "lower layer")'
					Types:
						'float' (SDTypeFloat)
				'mode' = SDValueEnum("mdl::base::color_layer_mode",0) [CONNECTABLE]
					Description: 'Method for combining this layer and the lower layer'
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
		[12/71] 'mdl::base::color_layer.layer_color(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[13/71] 'mdl::base::color_layer.weight(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[14/71] 'mdl::base::color_layer.mode(::base::color_layer)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum) [Uniform]
				
		[15/71] 'mdl::base::texture_return(color,float)'
			Description: 'Type of the return value from texturing functions'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Return value suitable to for driving input parameters of type color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Gray-scale return value suitable for driving input parameters of type float'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[16/71] 'mdl::base::texture_return.tint(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[17/71] 'mdl::base::texture_return.mono(::base::texture_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[18/71] 'mdl::base::anisotropy_return(float,float,float3)'
			Description: 'Type of the return value from functions driving roughness and anisotropy parameters of glossy BSDF'
			SDPropertyCategory = 'Input'
				'roughness_u' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Roughness in u direction'
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Roughness in v direction'
					Types:
						'float' (SDTypeFloat)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___8) [CONNECTABLE]
					Description: 'Tangent in u direction'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
		[19/71] 'mdl::base::anisotropy_return.roughness_u(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[20/71] 'mdl::base::anisotropy_return.roughness_v(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[21/71] 'mdl::base::anisotropy_return.tangent_u(::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[22/71] 'mdl::base::coordinate_projection(::base::texture_coordinate_system,int,::base::projection_mode,float4x4)'
			Description: 'Constructs a texturing coordinate system based on a variety of projection functions.'
			SDPropertyCategory = 'Input'
				'coordinate_system' = SDValueEnum("mdl::base::texture_coordinate_system",2) [CONNECTABLE]
					Description: 'The projection can be done based on world, object or any uvw space.'
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'if texture_coordinate_uvw, index into the appropriate one'
					Types:
						'int' (SDTypeInt) [Uniform]
				'projection_type' = SDValueEnum("mdl::base::projection_mode",5) [CONNECTABLE]
					Description: 'Projection method to be used to generate the coordinates'
					Types:
						'mdl::base::projection_mode' (SDTypeEnum) [Uniform]
				'projection_transform' = SDValueMatrix(matrix<float>[4][4](float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1),float(0),float(0),float(0),float(0),float(1))) [CONNECTABLE]
					Description: 'Transformation of the projector in world space'
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[23/71] 'mdl::base::coordinate_source(::base::texture_coordinate_system,int)'
			Description: 'Access to world coordinates, object coordinates or specifically defined texture spaces'
			SDPropertyCategory = 'Input'
				'coordinate_system' = SDValueEnum("mdl::base::texture_coordinate_system",0) [CONNECTABLE]
					Description: 'The function can source coordinates in uvw, world or object space'
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum) [Uniform]
				'texture_space' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'if texture_coordinate_uvw, index into the appropriate one'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[24/71] 'mdl::base::transform_coordinate(float4x4,::base::texture_coordinate_info)'
			Description: 'Transform a texture coordinate by a matrix'
			SDPropertyCategory = 'Input'
				'transform' [CONNECTABLE]
					Description: 'A transformation to be applied to the source coordinates. rotation_translation_scale() is a suggested means to compute the transformation matrix'
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				'coordinate' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___12) [CONNECTABLE]
					Description: 'Coordinate, typically sourced from coordinate_source or coordinate_projection'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[25/71] 'mdl::base::rotation_translation_scale(float3,float3,float3)'
			Description: 'Construct transformation matrix from Euler rotation, translation and scale'
			SDPropertyCategory = 'Input'
				'rotation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Rotation applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'translation' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Offset applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'scaling' = SDValueFloat3(float3(1,1,1)) [CONNECTABLE]
					Description: 'Scale applied to every UVW coordinate'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix) [Uniform]
				
		[26/71] 'mdl::base::file_texture(texture_2d,color,color,::base::mono_mode,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,bool)'
			Description: 'General texturing function for 2D bitmap texture stored in a file'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'color_offset' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Fixed offset value added to all texture values'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color_scale' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Fixed scaling factor applied to all texture values'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",0) [CONNECTABLE]
					Description: 'Defines how mono_result is computed'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___16) [CONNECTABLE]
					Description: 'Custom value for texture coordinate'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Deprecated, use wrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, a lookup outside [0,1] results in black/transparent'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[27/71] 'mdl::base::architectural_gloss_to_rough(float)'
			Description: 'Convert glossiness parameter to roughness parameter, semantics according to the Iray v2 Arch+Design implementation'
			SDPropertyCategory = 'Input'
				'glossiness' [CONNECTABLE]
					Description: 'Glossiness according to mia material semantic'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[28/71] 'mdl::base::gloss_to_rough(float)'
			Description: 'Convert glossiness parameter to roughness parameter through simple inversion'
			SDPropertyCategory = 'Input'
				'glossiness' [CONNECTABLE]
					Description: 'Inverse of roughness'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[29/71] 'mdl::base::abbe_number_ior(float,float)'
			Description: 'Calculate spectral index of refraction'
			SDPropertyCategory = 'Input'
				'ior' = SDValueFloat(float(1.5)) [CONNECTABLE]
					Description: 'Index of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'abbe_number' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Dispersion in relation to index of refraction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[30/71] 'mdl::base::sellmeier_coefficients_ior(float3,float3)'
			Description: 'Calculate spectral index of refraction using Sellmeier coefficients'
			SDPropertyCategory = 'Input'
				'sellmeier_B' = SDValueFloat3(float3(1.03999996,0.230000004,1.00999999)) [CONNECTABLE]
					Description: 'Sellmeier coefficient B'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'sellmeier_C' = SDValueFloat3(float3(0.00600000005,0.200000003,103.559998)) [CONNECTABLE]
					Description: 'Sellmeier coefficient C (in um^2)'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[31/71] 'mdl::base::environment_spherical(texture_2d)'
			Description: 'Environment function implementing a spherical environment'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'Spherical environment'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[32/71] 'mdl::base::sun_and_sky(bool,float,color,float,float,float,float,float,color,color,float3,float,float,float,bool,int,bool)'
			Description: 'Sun and sky model environment. (For documentation of the parameters, please see the official documentation of the matching mental ray shader.)'
			SDPropertyCategory = 'Input'
				'on' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'multiplier' = SDValueFloat(float(0.0250000004)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'rgb_unit_conversion' = SDValueColorRGB(ColorRGB(0.000666667009,0.000666667009,0.000666667009)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'haze' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'redblueshift' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'saturation' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'horizon_height' = SDValueFloat(float(0.00100000005)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'horizon_blur' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'ground_color' = SDValueColorRGB(ColorRGB(0.400000006,0.400000006,0.400000006)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'night_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'sun_direction' = SDValueFloat3(float3(0,0.229270995,0.418882012)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'sun_disk_intensity' = SDValueFloat(float(0.00999999978)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_disk_scale' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_glow_intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'y_is_up' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flags' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt) [Uniform]
				'physically_scaled_sun' = SDValueBool(bool(true)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[33/71] 'mdl::base::perez_sun_and_sky(float,float,float3,color,float,bool,float,float,float)'
			Description: 'Perez all weather sun and sky model.'
			SDPropertyCategory = 'Input'
				'direct_normal_irradiance' = SDValueFloat(float(500)) [CONNECTABLE]
					Description: 'Direct sun irradiance in W / m^2'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'diffuse_horizontal_irradiance' = SDValueFloat(float(50)) [CONNECTABLE]
					Description: 'Diffuse horizontal sky irradiance in W / m^2 (excluding sun)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'sun_direction' = SDValueFloat3(float3(0,0.229270995,0.418882012)) [CONNECTABLE]
					Description: 'Sun direction'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'ground_color' = SDValueColorRGB(ColorRGB(0.200000003,0.200000003,0.200000003)) [CONNECTABLE]
					Description: 'Ground reflectivity'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'horizon_blur' = SDValueFloat(float(0.100000001)) [CONNECTABLE]
					Description: 'Blur between ground and sky at the horizon'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'y_is_up' = SDValueBool(bool(true)) [CONNECTABLE]
					Description: 'Sun direction is y-up coordinates'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'julian_date' = SDValueFloat(float(180)) [CONNECTABLE]
					Description: 'Day in year'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'dew_point' = SDValueFloat(float(11)) [CONNECTABLE]
					Description: 'Dew point in degree Celsius'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'haze' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Haze value to compute chromaticity of the sky (in analogy to base::sun_and_sky)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[34/71] 'mdl::base::file_bump_texture(texture_2d,float,::base::mono_mode,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,float3,bool)'
			Description: 'Computes a normal based on a heightfield-style bump texture'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'bump_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Description: 'Defines what value to use for computing the slope of the bump'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___20) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___21) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'deprecated, usewrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, lookup outside [0,1] results in no bump'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[35/71] 'mdl::base::tangent_space_normal_texture(texture_2d,float,bool,bool,::base::texture_coordinate_info,float2,float2,::tex::wrap_mode,::tex::wrap_mode,bool,float,float)'
			Description: 'Interprets the color values of a bitmap as a vector in tangent space'
			SDPropertyCategory = 'Input'
				'texture' [CONNECTABLE]
					Description: 'The input texture'
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference) [Uniform]
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Determines the degree of bumpiness'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'flip_tangent_u' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'flip_tangent_v' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Can be used to fix mismatches between the object's tangent space and the normal map's tangent space'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___25) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'crop_u' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the u direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'crop_v' = SDValueFloat2(float2(0,1)) [CONNECTABLE]
					Description: 'Restricts the texture access to sub-domain of the texture in the v direction'
					Types:
						'float2' (SDTypeFloat2) [Uniform]
				'wrap_u' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the u direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'wrap_v' = SDValueEnum("mdl::tex::wrap_mode",1) [CONNECTABLE]
					Description: 'Wrapping mode in the v direction'
					Types:
						'mdl::tex::wrap_mode' (SDTypeEnum) [Uniform]
				'clip' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'deprecated, usewrap_mode=tex::wrap_clip. Defines wrap_clamp behavior. If true, lookup outside [0,1] results in no bump'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Scales the value red from the texture file. Can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Offset applied to the value red from the texture file. Can be used to adapt to different normal map formats'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[36/71] 'mdl::base::color_layer[].len(::base::color_layer[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[37/71] 'mdl::base::color_layer[]@(::base::color_layer[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
		[38/71] 'mdl::base::blend_color_layers(::base::color_layer[P],color,::base::mono_mode)'
			Description: 'Texture layering functionality similar to the functionality known from painting programs '
			SDPropertyCategory = 'Input'
				'layers' [CONNECTABLE]
					Description: 'Array of structs describing the layers to blend'
					Types:
						'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				'base' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of initial layer'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",1) [CONNECTABLE]
					Description: 'Defines how mono_result is computed'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[39/71] 'mdl::base::float[3]@(float[3],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[40/71] 'mdl::base::color[3]@(color[3],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[41/71] 'mdl::base::gradient_interpolation_mode[3]@(::base::gradient_interpolation_mode[3],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
		[42/71] 'mdl::base::gradient3_texture(::base::gradient_mode,float[3],color[3],::base::gradient_interpolation_mode[3],::base::texture_coordinate_info,float)'
			Description: 'Gradient calculated from three colors at three positions'
			SDPropertyCategory = 'Input'
				'mode' = SDValueEnum("mdl::base::gradient_mode",0) [CONNECTABLE]
					Description: 'Mode of gradient calculation, describes shape of the gradient'
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum) [Uniform]
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Interpolation mode between gradient colors'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___29) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[43/71] 'mdl::base::gradient3_bump_texture(::base::gradient_mode,float[3],color[3],::base::gradient_interpolation_mode[3],::base::texture_coordinate_info,float,float,float3)'
			Description: 'Gradient for bump mapping calculated from three colors at three positions'
			SDPropertyCategory = 'Input'
				'mode' = SDValueEnum("mdl::base::gradient_mode",0) [CONNECTABLE]
					Description: 'Mode of gradient calculation, describes shape of the gradient'
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum) [Uniform]
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Interpolation mode between gradient colors'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___33) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___34) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[44/71] 'mdl::base::gradient3_recolor(float[3],color[3],::base::gradient_interpolation_mode[3],::base::mono_mode,float,float)'
			Description: 'Function mapping an arbitrary float value into a gradient. Can be used to re-color textures'
			SDPropertyCategory = 'Input'
				'gradient_positions' = SDValueArray(SDValueFloat(float(0)),SDValueFloat(float(0.5)),SDValueFloat(float(1))) [CONNECTABLE]
					Description: 'Position of the gradient colors'
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'gradient_colors' = SDValueArray(SDValueColorRGB(ColorRGB(0,0,0)),SDValueColorRGB(ColorRGB(0.5,0.5,0.5)),SDValueColorRGB(ColorRGB(1,1,1))) [CONNECTABLE]
					Description: 'Colors at the positions'
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				'interpolation_modes' = SDValueArray(SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0),SDValueEnum("mdl::base::gradient_interpolation_mode",0)) [CONNECTABLE]
					Description: 'Mode of gradient calculations'
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				'mono_source' = SDValueEnum("mdl::base::mono_mode",0) [CONNECTABLE]
					Description: 'deprecated, has no effect in gradient3 recolor'
					Types:
						'mdl::base::mono_mode' (SDTypeEnum) [Uniform]
				'distortion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Distortion value to be added to the position inside the gradient'
					Types:
						'float' (SDTypeFloat)
				'position' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Value driving the gradient calculation'
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[45/71] 'mdl::base::checker_texture(::base::texture_coordinate_info,color,color,float,float)'
			Description: '3D color checker pattern'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___38) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of the even tiles of the checker function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Color of the odd tiles of the checker function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Softens the border between tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'checker_position' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Ratio of division. Values other than .5 produce non square tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[46/71] 'mdl::base::checker_bump_texture(::base::texture_coordinate_info,float,float,float,float3)'
			Description: '3D bump mapping checker pattern'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___42) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'blur' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Softens the border between tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'checker_position' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Ratio of division. Values other than .5 produce non square tiles'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___43) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[47/71] 'mdl::base::perlin_noise_texture(::base::texture_coordinate_info,color,color,float,bool,bool,float,int,bool,bool,float3,float,float,float)'
			Description: 'Color Perlin noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___47) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Perlin noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Perlin noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function (can be time in animations)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'ridged_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "electrical"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to "color1"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to "color2"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[48/71] 'mdl::base::perlin_noise_bump_texture(::base::texture_coordinate_info,float,float,bool,bool,float,int,bool,bool,float3,float,float,float,float3)'
			Description: 'Bump-mapping Perlin noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___51) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'ridged_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "electrical"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to the maximum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to the minimum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___52) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[49/71] 'mdl::base::worley_noise_texture(::base::texture_coordinate_info,color,color,float,int,int,bool,bool,float3,float,float,float,float,float)'
			Description: 'Color Worley noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___56) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Worley noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Worley noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Output function used to modify the noise result (0..11)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the noise function (0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to "color1"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to "color2"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'step_threshold' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Description: 'Used only in mode 3'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'edge' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Smoothness of noise'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[50/71] 'mdl::base::worley_noise_bump_texture(::base::texture_coordinate_info,float,float,int,int,bool,bool,float3,float,float,float,float,float,float3)'
			Description: 'Bump-mapping Worley noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___60) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'mode' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Output function used to modify the noise result (0..11)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the noise function (0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'apply_marble' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Triggers a modification to make the pattern have a marble like appearance (cosine)'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'apply_dent' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'Raises the output of the function to the power of 3'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'noise_distortion' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Description: 'Weight of additional noise turbulence'
					Types:
						'float3' (SDTypeFloat3) [Uniform]
				'noise_threshold_high' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_high" are mapped to the maximum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_threshold_low' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Noise values greater then "noise_threshold_low" are mapped to the minimum bump height'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_bands' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Creates a "tree ring" like banding effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'step_threshold' = SDValueFloat(float(0.200000003)) [CONNECTABLE]
					Description: 'Used only in mode 3'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'edge' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Smoothness of noise'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___61) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[51/71] 'mdl::base::flow_noise_texture(::base::texture_coordinate_info,color,color,float,float,int,bool,float,float,float,float)'
			Description: 'Color Perlin flow noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___65) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'color1' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The Flow noise function will blend between this color and "color2"'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'color2' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'The Flow noise function will blend between "color1" and this color'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 3rd dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Flow noise to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[52/71] 'mdl::base::flow_noise_bump_texture(::base::texture_coordinate_info,float,float,float,int,bool,float,float,float,float,float3)'
			Description: 'Bump-mapping flow noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___69) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the biggest feature of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'phase' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Controls the 4th dimension of the function'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'levels' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Number of octaves to of Perlin to sum up'
					Types:
						'int' (SDTypeInt) [Uniform]
				'absolute_noise' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'If set to true, the appearance of the pattern will be more "billowing" and "turbulent"'
					Types:
						'bool' (SDTypeBool) [Uniform]
				'level_gain' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_gain" specifies a weighting factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_scale' = SDValueFloat(float(2)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_scale" specifies a global scaling factor for subsequent levels'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_u_scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_u_scale" specifies an additional scaling factor in the "u" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'level_progressive_v_motion' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'If multiple levels are used, "level_progressive_v_motion" specifies an offset for subsequent levels in the "v" direction'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___70) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[53/71] 'mdl::base::flake_noise_texture(::base::texture_coordinate_info,float,float,float,int,float,int)'
			Description: 'Flake noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___74) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'intensity' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Specifies the maximum reflectivity of any flake'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the features of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'density' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the amount of flakes in the substrate. The higher the number, the bigger is the space between flakes'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_type' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Selects the noise type (0: Classic, 1: Worley)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'maximum_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the shape of flakes in the secondary noise mode (Worley)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the secondary noise mode (Worley: 0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[54/71] 'mdl::base::flake_noise_bump_texture(::base::texture_coordinate_info,float,float,int,float,int,float3)'
			Description: 'Bump-mapping flake noise'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___78) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'scale' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Size of the features of the pattern'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'strength' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the randomness of the flake orientation'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'noise_type' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Selects the noise type (0: Classic, 1: Worley)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'maximum_size' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Controls the shape of flakes in the secondary noise mode (Worley)'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'metric' = SDValueInt(int(0)) [CONNECTABLE]
					Description: 'Metric used in the secondary noise mode (Worley: 0: Euclidean, 1: Manhattan, 2: Chebyshev)'
					Types:
						'int' (SDTypeInt) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___79) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[55/71] 'mdl::base::tile_texture(::base::texture_coordinate_info,color,color,float,float,float,float,float,float,float,float,int,float,int,float,float,float)'
			Description: 'Color tiling generator'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___83) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'tile_color' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'Color of "bricks" in the function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'grout_color' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Description: 'Color of "grout" between the "bricks" in the function'
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'number_of_rows' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile rows in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_columns' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile columns in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_width' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute width of vertical grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_height' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute height of horizontal grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Amount of noise added to grout size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'missing_tile_amount' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Number of tiles that will end up as grout, rather than as a tile ("holes"). Values are [0,1].'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tile_brightness_variation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor to the brightness of the tile color'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'seed' = SDValueFloat(float(2.28399992)) [CONNECTABLE]
					Description: 'Seeding number for random number generator controlling tile randomization effects'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_row_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth row, width of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_row_width_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of width for tiles identified through "special_row_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_column_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth column, height of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_column_height_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of height for tiles identified through "special_column_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'odd_row_offset' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Controls bonding pattern. 0 will result in a "stack bond", .5 a "running bond"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'random_row_offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor for "odd_row_offset"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[56/71] 'mdl::base::tile_bump_texture(::base::texture_coordinate_info,float,float,float,float,float,float,float,float,float,int,float,int,float,float,float,float3)'
			Description: 'Bump-mapping tiling generator'
			SDPropertyCategory = 'Input'
				'uvw' = SDMDLValueCall(mdl::base::texture_coordinate_info(float3,float3,float3)__default_call___87) [CONNECTABLE]
					Description: 'Parameterization to be used for texture mapping. Defaults to texture channel 0.'
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Strength of the bump mapping effect'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_rows' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile rows in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'number_of_columns' = SDValueFloat(float(4)) [CONNECTABLE]
					Description: 'Number of tile columns in the 0-1 texturing domain'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_width' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute width of vertical grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_height' = SDValueFloat(float(0.0199999996)) [CONNECTABLE]
					Description: 'Absolute height of horizontal grout lines'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'grout_roughness' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Amount of noise added to grout size'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'missing_tile_amount' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Number of tiles that will end up as grout, rather than as a tile ("holes"). Values are [0,1].'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'tile_brightness_variation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor to the brightness of the tile color, will affect the bumpiness for that tile'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'seed' = SDValueFloat(float(2.28399992)) [CONNECTABLE]
					Description: 'Seeding number for random number generator controlling tile randomization effects'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_row_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth row, width of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_row_width_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of width for tiles identified through "special_row_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'special_column_index' = SDValueInt(int(1)) [CONNECTABLE]
					Description: 'Every nth column, height of tiles is modified. Set nth all to 1 to disable. Never set the nth row or column to 0.'
					Types:
						'int' (SDTypeInt) [Uniform]
				'special_column_height_factor' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'Change of height for tiles identified through "special_column_index"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'odd_row_offset' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'Controls bonding pattern. 0 will result in a "stack bond", .5 a "running bond"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'random_row_offset' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Randomization factor for "odd_row_offset"'
					Types:
						'float' (SDTypeFloat) [Uniform]
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___88) [CONNECTABLE]
					Description: 'Base normal for the bump mapping. Note, apart from the default, only state::rounded_corners is supported here and only in the material.geometry.normal slot.'
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[57/71] 'mdl::base::anisotropy_conversion(float,float,float,float3,bool)'
			Description: 'Convert old anisotropy controls into new ones'
			SDPropertyCategory = 'Input'
				'roughness' = SDValueFloat(float(0.5)) [CONNECTABLE]
					Description: 'The base roughness value'
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'The anisotropy of the roughness'
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Description: 'Rotation of direction of anisotropy, where 1 equals 360 degrees'
					Types:
						'float' (SDTypeFloat)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___89) [CONNECTABLE]
					Description: 'Tangent to align the anisotropy with. "coordinate_source" or "coordinate_projection" are possible sources'
					Types:
						'float3' (SDTypeFloat3)
				'mia_anisotropy_semantic' = SDValueBool(bool(false)) [CONNECTABLE]
					Description: 'allows backwards compatibility with mia material'
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
		[58/71] 'mdl::base::volume_coefficient(color,float)'
			Description: 'Compute a volume coefficient based on distance and value'
			SDPropertyCategory = 'Input'
				'tint' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Description: 'The basic color of the absorption'
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'distance' = SDValueFloat(float(1)) [CONNECTABLE]
					Description: 'The thickness of the material at which all but "tint" is absorbed'
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[59/71] 'mdl::base::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[60/71] 'mdl::base::color[].len(color[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<ColorRGB>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[61/71] 'mdl::base::gradient_interpolation_mode[].len(::base::gradient_interpolation_mode[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[62/71] 'mdl::base::operator?(bool,::base::projection_mode,::base::projection_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::projection_mode' (SDTypeEnum)
				
		[63/71] 'mdl::base::operator?(bool,::base::color_layer_mode,::base::color_layer_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer_mode' (SDTypeEnum)
				
		[64/71] 'mdl::base::operator?(bool,::base::texture_coordinate_system,::base::texture_coordinate_system)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_system' (SDTypeEnum)
				
		[65/71] 'mdl::base::operator?(bool,::base::mono_mode,::base::mono_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::mono_mode' (SDTypeEnum)
				
		[66/71] 'mdl::base::operator?(bool,::base::gradient_interpolation_mode,::base::gradient_interpolation_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				
		[67/71] 'mdl::base::operator?(bool,::base::gradient_mode,::base::gradient_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::gradient_mode' (SDTypeEnum)
				
		[68/71] 'mdl::base::operator?(bool,::base::texture_coordinate_info,::base::texture_coordinate_info)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_coordinate_info' (SDTypeStruct)
				
		[69/71] 'mdl::base::operator?(bool,::base::color_layer,::base::color_layer)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::color_layer' (SDTypeStruct)
				
		[70/71] 'mdl::base::operator?(bool,::base::texture_return,::base::texture_return)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::texture_return' (SDTypeStruct)
				
		[71/71] 'mdl::base::operator?(bool,::base::anisotropy_return,::base::anisotropy_return)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::base::anisotropy_return' (SDTypeStruct)
				
	Types:
		[1/21] 'mdl::base::projection_mode'
			'mdl::base::projection_mode' (SDTypeEnum)
				int projection_cubic = SDValueInt(int(1))
				int projection_spherical = SDValueInt(int(2))
				int projection_cylindrical = SDValueInt(int(3))
				int projection_infinite_cylindrical = SDValueInt(int(4))
				int projection_planar = SDValueInt(int(5))
				int projection_spherical_normalized = SDValueInt(int(6))
				int projection_cylindrical_normalized = SDValueInt(int(7))
				int projection_infinite_cylindrical_normalized = SDValueInt(int(8))
				int projection_tri_planar = SDValueInt(int(9))
		[2/21] 'mdl::base::color_layer_mode'
			'mdl::base::color_layer_mode' (SDTypeEnum)
				int color_layer_blend = SDValueInt(int(0))
				int color_layer_add = SDValueInt(int(1))
				int color_layer_multiply = SDValueInt(int(2))
				int color_layer_screen = SDValueInt(int(3))
				int color_layer_overlay = SDValueInt(int(4))
				int color_layer_brightness = SDValueInt(int(5))
				int color_layer_color = SDValueInt(int(6))
				int color_layer_exclusion = SDValueInt(int(7))
				int color_layer_average = SDValueInt(int(8))
				int color_layer_lighten = SDValueInt(int(9))
				int color_layer_darken = SDValueInt(int(10))
				int color_layer_sub = SDValueInt(int(11))
				int color_layer_negation = SDValueInt(int(12))
				int color_layer_difference = SDValueInt(int(13))
				int color_layer_softlight = SDValueInt(int(14))
				int color_layer_colordodge = SDValueInt(int(15))
				int color_layer_reflect = SDValueInt(int(16))
				int color_layer_colorburn = SDValueInt(int(17))
				int color_layer_phoenix = SDValueInt(int(18))
				int color_layer_hardlight = SDValueInt(int(19))
				int color_layer_pinlight = SDValueInt(int(20))
				int color_layer_hardmix = SDValueInt(int(21))
				int color_layer_lineardodge = SDValueInt(int(22))
				int color_layer_linearburn = SDValueInt(int(23))
				int color_layer_spotlight = SDValueInt(int(24))
				int color_layer_spotlightblend = SDValueInt(int(25))
				int color_layer_hue = SDValueInt(int(26))
				int color_layer_saturation = SDValueInt(int(27))
		[3/21] 'mdl::base::texture_coordinate_system'
			'mdl::base::texture_coordinate_system' (SDTypeEnum)
				int texture_coordinate_uvw = SDValueInt(int(0))
				int texture_coordinate_world = SDValueInt(int(1))
				int texture_coordinate_object = SDValueInt(int(2))
		[4/21] 'mdl::base::mono_mode'
			'mdl::base::mono_mode' (SDTypeEnum)
				int mono_alpha = SDValueInt(int(0))
				int mono_average = SDValueInt(int(1))
				int mono_luminance = SDValueInt(int(2))
				int mono_maximum = SDValueInt(int(3))
		[5/21] 'mdl::base::gradient_interpolation_mode'
			'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
				int gradient_interpolation_linear = SDValueInt(int(0))
				int gradient_interpolation_off = SDValueInt(int(1))
				int gradient_interpolation_ease_in = SDValueInt(int(2))
				int gradient_interpolation_ease_out = SDValueInt(int(3))
				int gradient_interpolation_ease_in_out = SDValueInt(int(4))
		[6/21] 'mdl::base::gradient_mode'
			'mdl::base::gradient_mode' (SDTypeEnum)
				int gradient_linear = SDValueInt(int(0))
				int gradient_squared = SDValueInt(int(1))
				int gradient_box = SDValueInt(int(2))
				int gradient_diagonal = SDValueInt(int(3))
				int gradient_90_degree = SDValueInt(int(4))
				int gradient_symmetric_90_degree = SDValueInt(int(5))
				int gradient_radial = SDValueInt(int(6))
				int gradient_360_degree = SDValueInt(int(7))
		[7/21] 'mdl::base::texture_coordinate_info'
			'mdl::base::texture_coordinate_info' (SDTypeStruct)
				float3 position
				float3 tangent_u
				float3 tangent_v
		[8/21] 'mdl::base::color_layer'
			'mdl::base::color_layer' (SDTypeStruct)
				ColorRGB layer_color
				float weight
				mdl::base::color_layer_mode mode
		[9/21] 'mdl::base::texture_return'
			'mdl::base::texture_return' (SDTypeStruct)
				ColorRGB tint
				float mono
		[10/21] 'mdl::base::anisotropy_return'
			'mdl::base::anisotropy_return' (SDTypeStruct)
				float roughness_u
				float roughness_v
				float3 tangent_u
		[11/21] 'mdl::base::perez_coefficients'
			'mdl::base::perez_coefficients' (SDTypeStruct)
				SDTypeArray<float> c
		[12/21] 'mdl::base::perez_data'
			'mdl::base::perez_data' (SDTypeStruct)
				mdl::base::perez_coefficients abcde
				float perez_lum_scale
				float sun_illuminance
				float3 sky_illuminance_rgb
		[13/21] 'mdl::base::perez_data_preetham'
			'mdl::base::perez_data_preetham' (SDTypeStruct)
				SDTypeArray<float> x
				SDTypeArray<float> y
				float perez_x_scale
				float perez_y_scale
		[14/21] 'mdl::base::perez_sun_and_sky_data'
			'mdl::base::perez_sun_and_sky_data' (SDTypeStruct)
				float3 clamped_sun_dir
				float turbidity
				mdl::base::perez_data perez_data_lum
				mdl::base::perez_data_preetham perez_data_xy
				float3 sun_color
				float sun_disk_intensity_scale
				float3 ground_luminance
				float factor
		[15/21] 'SDTypeArray<mdl::base::color_layer>'
			'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				Item Type:
					'mdl::base::color_layer' (SDTypeStruct)
						ColorRGB layer_color
						float weight
						mdl::base::color_layer_mode mode
		[16/21] 'SDTypeArray<mdl::base::color_layer>'
			'SDTypeArray<mdl::base::color_layer>' (SDTypeArray)
				Item Type:
					'mdl::base::color_layer' (SDTypeStruct)
						ColorRGB layer_color
						float weight
						mdl::base::color_layer_mode mode
		[17/21] 'SDTypeArray<mdl::base::gradient_interpolation_mode>'
			'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				Item Type:
					'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
						int gradient_interpolation_linear = SDValueInt(int(0))
						int gradient_interpolation_off = SDValueInt(int(1))
						int gradient_interpolation_ease_in = SDValueInt(int(2))
						int gradient_interpolation_ease_out = SDValueInt(int(3))
						int gradient_interpolation_ease_in_out = SDValueInt(int(4))
		[18/21] 'mdl::base::worley_return'
			'mdl::base::worley_return' (SDTypeStruct)
				float3 nearest_pos_0
				float3 nearest_pos_1
				float2 val
		[19/21] 'mdl::base::noise_return'
			'mdl::base::noise_return' (SDTypeStruct)
				float3 grad
				float val
		[20/21] 'mdl::base::Tiledata'
			'mdl::base::Tiledata' (SDTypeStruct)
				bool is_in_tile
				ColorRGB color_result
		[21/21] 'SDTypeArray<mdl::base::gradient_interpolation_mode>'
			'SDTypeArray<mdl::base::gradient_interpolation_mode>' (SDTypeArray)
				Item Type:
					'mdl::base::gradient_interpolation_mode' (SDTypeEnum)
						int gradient_interpolation_linear = SDValueInt(int(0))
						int gradient_interpolation_off = SDValueInt(int(1))
						int gradient_interpolation_ease_in = SDValueInt(int(2))
						int gradient_interpolation_ease_out = SDValueInt(int(3))
						int gradient_interpolation_ease_in_out = SDValueInt(int(4))
[24/27] 'mdl::nvidia::df' (SDMDLModule)
	Definitions:
		[1/12] 'mdl::nvidia::df::ashikhmin_shirley_glossy_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'n_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'n_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___143) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[2/12] 'mdl::nvidia::df::ward_geisler_moroder_glossy_bsdf(float,float,color,float3,string)'
			SDPropertyCategory = 'Input'
				'alpha_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'alpha_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___144) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[3/12] 'mdl::nvidia::df::microfacet_beckmann_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'alpha_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'alpha_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___145) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[4/12] 'mdl::nvidia::df::microfacet_ggx_smith_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'alpha_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'alpha_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___146) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[5/12] 'mdl::nvidia::df::microfacet_beckmann_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'alpha_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'alpha_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___147) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[6/12] 'mdl::nvidia::df::microfacet_ggx_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'alpha_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'alpha_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___148) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[7/12] 'mdl::nvidia::df::microfacet_phong_vcavities_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'n_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'n_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___149) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[8/12] 'mdl::nvidia::df::simple_glossy_bsdf(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___150) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[9/12] 'mdl::nvidia::df::simple_glossy_bsdf_legacy(float,float,color,float3,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___151) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[10/12] 'mdl::nvidia::df::legacy_mcp_glossy_bsdf(float,float,float,::df::scatter_mode,string)'
			SDPropertyCategory = 'Input'
				'roughness' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'anisotropy' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'anisotropy_rotation' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'mode' = SDValueEnum("mdl::df::scatter_mode",0) [CONNECTABLE]
					Types:
						'mdl::df::scatter_mode' (SDTypeEnum) [Uniform]
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[11/12] 'mdl::nvidia::df::microfacet_sin_k_smith_bsdf(float,float,color,float3,color,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___152) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[12/12] 'mdl::nvidia::df::microfacet_sin_k_vcavities_bsdf(float,float,color,float3,color,string)'
			SDPropertyCategory = 'Input'
				'roughness_u' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'roughness_v' = SDMDLValueParameterReference(0) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'tangent_u' = SDMDLValueCall(mdl::state::texture_tangent_u(int)__default_call___153) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'multiscatter_tint' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'handle' = SDValueString(string()) [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
[25/27] 'mdl::state' (SDMDLModule)
	Definitions:
		[1/30] 'mdl::state::position()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[2/30] 'mdl::state::normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[3/30] 'mdl::state::geometry_normal()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[4/30] 'mdl::state::motion()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[5/30] 'mdl::state::texture_space_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[6/30] 'mdl::state::texture_coordinate(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[7/30] 'mdl::state::texture_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[8/30] 'mdl::state::texture_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[9/30] 'mdl::state::tangent_space(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[10/30] 'mdl::state::geometry_tangent_u(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[11/30] 'mdl::state::geometry_tangent_v(int)'
			SDPropertyCategory = 'Input'
				'index' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[12/30] 'mdl::state::direction()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[13/30] 'mdl::state::animation_time()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[14/30] 'mdl::state::wavelength_base()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
		[15/30] 'mdl::state::int(::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[16/30] 'mdl::state::transform(::state::coordinate_space,::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[17/30] 'mdl::state::transform_point(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'point' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/30] 'mdl::state::transform_vector(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'vector' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[19/30] 'mdl::state::transform_normal(::state::coordinate_space,::state::coordinate_space,float3)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'normal' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[20/30] 'mdl::state::transform_scale(::state::coordinate_space,::state::coordinate_space,float)'
			SDPropertyCategory = 'Input'
				'from' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'to' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'scale' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[21/30] 'mdl::state::rounded_corner_normal$1.2(float,bool)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[22/30] 'mdl::state::rounded_corner_normal(float,bool,float)'
			SDPropertyCategory = 'Input'
				'radius' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				'across_materials' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'roundness' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[23/30] 'mdl::state::meters_per_scene_unit()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[24/30] 'mdl::state::scene_units_per_meter()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[25/30] 'mdl::state::object_id()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[26/30] 'mdl::state::wavelength_min()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[27/30] 'mdl::state::wavelength_max()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[28/30] 'mdl::state::float[1]@(float[1],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[29/30] 'mdl::state::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[30/30] 'mdl::state::operator?(bool,::state::coordinate_space,::state::coordinate_space)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::state::coordinate_space' (SDTypeEnum)
				
	Types:
		[1/1] 'mdl::state::coordinate_space'
			'mdl::state::coordinate_space' (SDTypeEnum)
				int coordinate_internal = SDValueInt(int(0))
				int coordinate_object = SDValueInt(int(1))
				int coordinate_world = SDValueInt(int(2))
[26/27] 'mdl::<builtins>' (SDMDLModule)
	Definitions:
		[1/916] 'mdl::operator/(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[2/916] 'mdl::operator/(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[3/916] 'mdl::operator/(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[4/916] 'mdl::operator/(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[5/916] 'mdl::operator/(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[6/916] 'mdl::operator/(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[7/916] 'mdl::operator/(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[8/916] 'mdl::operator/(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[9/916] 'mdl::operator/(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[10/916] 'mdl::operator/(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[11/916] 'mdl::operator/(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[12/916] 'mdl::operator/(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[13/916] 'mdl::operator/(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[14/916] 'mdl::operator/(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[15/916] 'mdl::operator/(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[16/916] 'mdl::operator/(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[17/916] 'mdl::operator/(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[18/916] 'mdl::operator/(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[19/916] 'mdl::operator/(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[20/916] 'mdl::operator/(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[21/916] 'mdl::operator/(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[22/916] 'mdl::operator/(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[23/916] 'mdl::operator/(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[24/916] 'mdl::operator/(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[25/916] 'mdl::operator/(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[26/916] 'mdl::operator/(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[27/916] 'mdl::operator/(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[28/916] 'mdl::operator/(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[29/916] 'mdl::operator/(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[30/916] 'mdl::operator/(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[31/916] 'mdl::operator/(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[32/916] 'mdl::operator/(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[33/916] 'mdl::operator/(float2x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[34/916] 'mdl::operator/(float2x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[35/916] 'mdl::operator/(float2x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[36/916] 'mdl::operator/(float3x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[37/916] 'mdl::operator/(float3x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[38/916] 'mdl::operator/(float3x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[39/916] 'mdl::operator/(float4x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[40/916] 'mdl::operator/(float4x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[41/916] 'mdl::operator/(float4x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[42/916] 'mdl::operator/(double2x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[43/916] 'mdl::operator/(double2x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[44/916] 'mdl::operator/(double2x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[45/916] 'mdl::operator/(double3x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[46/916] 'mdl::operator/(double3x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[47/916] 'mdl::operator/(double3x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[48/916] 'mdl::operator/(double4x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[49/916] 'mdl::operator/(double4x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[50/916] 'mdl::operator/(double4x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[51/916] 'mdl::operator-(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[52/916] 'mdl::operator-(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[53/916] 'mdl::operator-(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[54/916] 'mdl::operator-(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[55/916] 'mdl::operator-(float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[56/916] 'mdl::operator-(float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[57/916] 'mdl::operator-(float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[58/916] 'mdl::operator-(float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[59/916] 'mdl::operator-(double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[60/916] 'mdl::operator-(double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[61/916] 'mdl::operator-(double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[62/916] 'mdl::operator-(double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[63/916] 'mdl::operator-(color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[64/916] 'mdl::operator-(float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[65/916] 'mdl::operator-(float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[66/916] 'mdl::operator-(float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[67/916] 'mdl::operator-(float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[68/916] 'mdl::operator-(float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[69/916] 'mdl::operator-(float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[70/916] 'mdl::operator-(float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[71/916] 'mdl::operator-(float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[72/916] 'mdl::operator-(float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[73/916] 'mdl::operator-(double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[74/916] 'mdl::operator-(double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[75/916] 'mdl::operator-(double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[76/916] 'mdl::operator-(double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[77/916] 'mdl::operator-(double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[78/916] 'mdl::operator-(double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[79/916] 'mdl::operator-(double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[80/916] 'mdl::operator-(double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[81/916] 'mdl::operator-(double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[82/916] 'mdl::operator+(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[83/916] 'mdl::operator+(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[84/916] 'mdl::operator+(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[85/916] 'mdl::operator+(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[86/916] 'mdl::operator+(float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[87/916] 'mdl::operator+(float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[88/916] 'mdl::operator+(float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[89/916] 'mdl::operator+(float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[90/916] 'mdl::operator+(double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[91/916] 'mdl::operator+(double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[92/916] 'mdl::operator+(double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[93/916] 'mdl::operator+(double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[94/916] 'mdl::operator+(color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[95/916] 'mdl::operator+(float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[96/916] 'mdl::operator+(float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[97/916] 'mdl::operator+(float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[98/916] 'mdl::operator+(float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[99/916] 'mdl::operator+(float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[100/916] 'mdl::operator+(float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[101/916] 'mdl::operator+(float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[102/916] 'mdl::operator+(float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[103/916] 'mdl::operator+(float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[104/916] 'mdl::operator+(double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[105/916] 'mdl::operator+(double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[106/916] 'mdl::operator+(double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[107/916] 'mdl::operator+(double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[108/916] 'mdl::operator+(double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[109/916] 'mdl::operator+(double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[110/916] 'mdl::operator+(double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[111/916] 'mdl::operator+(double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[112/916] 'mdl::operator+(double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[113/916] 'mdl::operator^(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[114/916] 'mdl::operator^(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[115/916] 'mdl::operator^(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[116/916] 'mdl::operator^(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[117/916] 'mdl::operator^(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[118/916] 'mdl::operator^(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[119/916] 'mdl::operator^(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[120/916] 'mdl::operator^(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[121/916] 'mdl::operator^(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[122/916] 'mdl::operator^(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[123/916] 'mdl::operator|(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[124/916] 'mdl::operator|(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[125/916] 'mdl::operator|(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[126/916] 'mdl::operator|(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[127/916] 'mdl::operator|(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[128/916] 'mdl::operator|(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[129/916] 'mdl::operator|(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[130/916] 'mdl::operator|(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[131/916] 'mdl::operator|(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[132/916] 'mdl::operator|(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[133/916] 'mdl::operator&(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[134/916] 'mdl::operator&(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[135/916] 'mdl::operator&(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[136/916] 'mdl::operator&(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[137/916] 'mdl::operator&(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[138/916] 'mdl::operator&(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[139/916] 'mdl::operator&(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[140/916] 'mdl::operator&(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[141/916] 'mdl::operator&(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[142/916] 'mdl::operator&(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[143/916] 'mdl::operator~(int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[144/916] 'mdl::operator~(int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[145/916] 'mdl::operator~(int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[146/916] 'mdl::operator~(int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[147/916] 'mdl::operator>>>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[148/916] 'mdl::operator>>>(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[149/916] 'mdl::operator>>>(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[150/916] 'mdl::operator>>>(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[151/916] 'mdl::operator>>>(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[152/916] 'mdl::operator>>>(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[153/916] 'mdl::operator>>>(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[154/916] 'mdl::operator>>>(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[155/916] 'mdl::operator>>>(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[156/916] 'mdl::operator>>>(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[157/916] 'mdl::operator>>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[158/916] 'mdl::operator>>(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[159/916] 'mdl::operator>>(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[160/916] 'mdl::operator>>(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[161/916] 'mdl::operator>>(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[162/916] 'mdl::operator>>(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[163/916] 'mdl::operator>>(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[164/916] 'mdl::operator>>(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[165/916] 'mdl::operator>>(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[166/916] 'mdl::operator>>(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[167/916] 'mdl::operator<<(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[168/916] 'mdl::operator<<(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[169/916] 'mdl::operator<<(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[170/916] 'mdl::operator<<(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[171/916] 'mdl::operator<<(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[172/916] 'mdl::operator<<(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[173/916] 'mdl::operator<<(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[174/916] 'mdl::operator<<(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[175/916] 'mdl::operator<<(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[176/916] 'mdl::operator<<(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[177/916] 'mdl::operator%(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[178/916] 'mdl::operator%(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[179/916] 'mdl::operator%(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[180/916] 'mdl::operator%(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[181/916] 'mdl::operator%(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[182/916] 'mdl::operator%(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[183/916] 'mdl::operator%(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[184/916] 'mdl::operator%(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[185/916] 'mdl::operator%(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[186/916] 'mdl::operator%(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[187/916] 'mdl::operator||(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[188/916] 'mdl::operator||(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[189/916] 'mdl::operator||(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[190/916] 'mdl::operator||(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[191/916] 'mdl::operator||(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[192/916] 'mdl::operator||(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[193/916] 'mdl::operator||(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[194/916] 'mdl::operator||(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[195/916] 'mdl::operator||(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[196/916] 'mdl::operator||(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[197/916] 'mdl::operator&&(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[198/916] 'mdl::operator&&(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[199/916] 'mdl::operator&&(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[200/916] 'mdl::operator&&(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[201/916] 'mdl::operator&&(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[202/916] 'mdl::operator&&(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[203/916] 'mdl::operator&&(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[204/916] 'mdl::operator&&(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[205/916] 'mdl::operator&&(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[206/916] 'mdl::operator&&(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[207/916] 'mdl::operator!(bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[208/916] 'mdl::operator!(bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[209/916] 'mdl::operator!(bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[210/916] 'mdl::operator!(bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[211/916] 'mdl::operator*(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[212/916] 'mdl::operator*(float2x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[213/916] 'mdl::operator*(float2x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[214/916] 'mdl::operator*(float3x2,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[215/916] 'mdl::operator*(float3x2,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[216/916] 'mdl::operator*(float3x2,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[217/916] 'mdl::operator*(float4x2,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[218/916] 'mdl::operator*(float4x2,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[219/916] 'mdl::operator*(float4x2,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[220/916] 'mdl::operator*(float2x3,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[221/916] 'mdl::operator*(float2x3,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[222/916] 'mdl::operator*(float2x3,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[223/916] 'mdl::operator*(float3x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[224/916] 'mdl::operator*(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[225/916] 'mdl::operator*(float3x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[226/916] 'mdl::operator*(float4x3,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[227/916] 'mdl::operator*(float4x3,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[228/916] 'mdl::operator*(float4x3,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[229/916] 'mdl::operator*(float2x4,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[230/916] 'mdl::operator*(float2x4,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[231/916] 'mdl::operator*(float2x4,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[232/916] 'mdl::operator*(float3x4,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[233/916] 'mdl::operator*(float3x4,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[234/916] 'mdl::operator*(float3x4,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[235/916] 'mdl::operator*(float4x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[236/916] 'mdl::operator*(float4x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[237/916] 'mdl::operator*(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[238/916] 'mdl::operator*(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[239/916] 'mdl::operator*(double2x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[240/916] 'mdl::operator*(double2x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[241/916] 'mdl::operator*(double3x2,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[242/916] 'mdl::operator*(double3x2,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[243/916] 'mdl::operator*(double3x2,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[244/916] 'mdl::operator*(double4x2,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[245/916] 'mdl::operator*(double4x2,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[246/916] 'mdl::operator*(double4x2,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[247/916] 'mdl::operator*(double2x3,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[248/916] 'mdl::operator*(double2x3,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[249/916] 'mdl::operator*(double2x3,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[250/916] 'mdl::operator*(double3x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[251/916] 'mdl::operator*(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[252/916] 'mdl::operator*(double3x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[253/916] 'mdl::operator*(double4x3,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[254/916] 'mdl::operator*(double4x3,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[255/916] 'mdl::operator*(double4x3,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[256/916] 'mdl::operator*(double2x4,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[257/916] 'mdl::operator*(double2x4,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[258/916] 'mdl::operator*(double2x4,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[259/916] 'mdl::operator*(double3x4,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[260/916] 'mdl::operator*(double3x4,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[261/916] 'mdl::operator*(double3x4,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[262/916] 'mdl::operator*(double4x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[263/916] 'mdl::operator*(double4x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[264/916] 'mdl::operator*(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[265/916] 'mdl::operator*(float2x2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[266/916] 'mdl::operator*(float3x2,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[267/916] 'mdl::operator*(float4x2,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[268/916] 'mdl::operator*(float2x3,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[269/916] 'mdl::operator*(float3x3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[270/916] 'mdl::operator*(float4x3,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[271/916] 'mdl::operator*(float2x4,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[272/916] 'mdl::operator*(float3x4,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[273/916] 'mdl::operator*(float4x4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[274/916] 'mdl::operator*(double2x2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[275/916] 'mdl::operator*(double3x2,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[276/916] 'mdl::operator*(double4x2,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[277/916] 'mdl::operator*(double2x3,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[278/916] 'mdl::operator*(double3x3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[279/916] 'mdl::operator*(double4x3,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[280/916] 'mdl::operator*(double2x4,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[281/916] 'mdl::operator*(double3x4,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[282/916] 'mdl::operator*(double4x4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[283/916] 'mdl::operator*(float2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[284/916] 'mdl::operator*(float2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[285/916] 'mdl::operator*(float2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[286/916] 'mdl::operator*(float3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[287/916] 'mdl::operator*(float3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[288/916] 'mdl::operator*(float3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[289/916] 'mdl::operator*(float4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[290/916] 'mdl::operator*(float4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[291/916] 'mdl::operator*(float4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[292/916] 'mdl::operator*(double2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[293/916] 'mdl::operator*(double2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[294/916] 'mdl::operator*(double2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[295/916] 'mdl::operator*(double3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[296/916] 'mdl::operator*(double3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[297/916] 'mdl::operator*(double3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[298/916] 'mdl::operator*(double4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[299/916] 'mdl::operator*(double4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[300/916] 'mdl::operator*(double4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[301/916] 'mdl::operator*(float2x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[302/916] 'mdl::operator*(float,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[303/916] 'mdl::operator*(float2x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[304/916] 'mdl::operator*(float,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[305/916] 'mdl::operator*(float2x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[306/916] 'mdl::operator*(float,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[307/916] 'mdl::operator*(float3x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[308/916] 'mdl::operator*(float,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[309/916] 'mdl::operator*(float3x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[310/916] 'mdl::operator*(float,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[311/916] 'mdl::operator*(float3x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[312/916] 'mdl::operator*(float,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[313/916] 'mdl::operator*(float4x2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[314/916] 'mdl::operator*(float,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[315/916] 'mdl::operator*(float4x3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[316/916] 'mdl::operator*(float,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[317/916] 'mdl::operator*(float4x4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[318/916] 'mdl::operator*(float,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[319/916] 'mdl::operator*(double2x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[320/916] 'mdl::operator*(double,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[321/916] 'mdl::operator*(double2x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[322/916] 'mdl::operator*(double,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[323/916] 'mdl::operator*(double2x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[324/916] 'mdl::operator*(double,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[325/916] 'mdl::operator*(double3x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[326/916] 'mdl::operator*(double,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[327/916] 'mdl::operator*(double3x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[328/916] 'mdl::operator*(double,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[329/916] 'mdl::operator*(double3x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[330/916] 'mdl::operator*(double,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[331/916] 'mdl::operator*(double4x2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[332/916] 'mdl::operator*(double,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[333/916] 'mdl::operator*(double4x3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[334/916] 'mdl::operator*(double,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[335/916] 'mdl::operator*(double4x4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[336/916] 'mdl::operator*(double,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[337/916] 'mdl::operator*(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[338/916] 'mdl::operator*(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[339/916] 'mdl::operator*(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[340/916] 'mdl::operator*(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[341/916] 'mdl::operator*(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[342/916] 'mdl::operator*(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[343/916] 'mdl::operator*(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[344/916] 'mdl::operator*(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[345/916] 'mdl::operator*(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[346/916] 'mdl::operator*(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[347/916] 'mdl::operator*(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[348/916] 'mdl::operator*(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[349/916] 'mdl::operator*(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[350/916] 'mdl::operator*(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[351/916] 'mdl::operator*(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[352/916] 'mdl::operator*(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[353/916] 'mdl::operator*(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[354/916] 'mdl::operator*(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[355/916] 'mdl::operator*(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[356/916] 'mdl::operator*(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[357/916] 'mdl::operator*(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[358/916] 'mdl::operator*(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[359/916] 'mdl::operator*(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[360/916] 'mdl::operator*(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[361/916] 'mdl::operator*(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[362/916] 'mdl::operator*(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[363/916] 'mdl::operator*(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[364/916] 'mdl::operator*(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[365/916] 'mdl::operator*(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[366/916] 'mdl::operator*(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[367/916] 'mdl::operator*(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[368/916] 'mdl::operator*(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[369/916] 'mdl::operator*(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[370/916] 'mdl::operator>=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[371/916] 'mdl::operator>=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[372/916] 'mdl::operator>=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[373/916] 'mdl::operator>(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[374/916] 'mdl::operator>(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[375/916] 'mdl::operator>(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[376/916] 'mdl::operator<=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[377/916] 'mdl::operator<=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[378/916] 'mdl::operator<=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[379/916] 'mdl::operator<(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[380/916] 'mdl::operator<(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[381/916] 'mdl::operator<(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[382/916] 'mdl::operator-(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[383/916] 'mdl::operator-(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[384/916] 'mdl::operator-(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[385/916] 'mdl::operator-(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[386/916] 'mdl::operator-(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[387/916] 'mdl::operator-(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[388/916] 'mdl::operator-(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[389/916] 'mdl::operator-(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[390/916] 'mdl::operator-(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[391/916] 'mdl::operator-(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[392/916] 'mdl::operator-(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[393/916] 'mdl::operator-(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[394/916] 'mdl::operator-(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[395/916] 'mdl::operator-(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[396/916] 'mdl::operator-(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[397/916] 'mdl::operator-(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[398/916] 'mdl::operator-(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[399/916] 'mdl::operator-(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[400/916] 'mdl::operator-(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[401/916] 'mdl::operator-(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[402/916] 'mdl::operator-(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[403/916] 'mdl::operator-(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[404/916] 'mdl::operator-(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[405/916] 'mdl::operator-(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[406/916] 'mdl::operator-(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[407/916] 'mdl::operator-(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[408/916] 'mdl::operator-(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[409/916] 'mdl::operator-(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[410/916] 'mdl::operator-(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[411/916] 'mdl::operator-(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[412/916] 'mdl::operator-(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[413/916] 'mdl::operator-(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[414/916] 'mdl::operator-(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[415/916] 'mdl::operator-(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[416/916] 'mdl::operator-(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[417/916] 'mdl::operator-(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[418/916] 'mdl::operator-(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[419/916] 'mdl::operator-(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[420/916] 'mdl::operator-(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[421/916] 'mdl::operator-(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[422/916] 'mdl::operator-(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[423/916] 'mdl::operator-(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[424/916] 'mdl::operator-(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[425/916] 'mdl::operator-(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[426/916] 'mdl::operator-(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[427/916] 'mdl::operator-(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[428/916] 'mdl::operator-(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[429/916] 'mdl::operator-(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[430/916] 'mdl::operator-(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[431/916] 'mdl::operator-(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[432/916] 'mdl::operator-(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[433/916] 'mdl::operator+(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[434/916] 'mdl::operator+(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[435/916] 'mdl::operator+(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[436/916] 'mdl::operator+(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[437/916] 'mdl::operator+(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[438/916] 'mdl::operator+(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[439/916] 'mdl::operator+(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[440/916] 'mdl::operator+(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[441/916] 'mdl::operator+(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[442/916] 'mdl::operator+(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[443/916] 'mdl::operator+(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[444/916] 'mdl::operator+(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[445/916] 'mdl::operator+(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[446/916] 'mdl::operator+(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[447/916] 'mdl::operator+(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[448/916] 'mdl::operator+(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[449/916] 'mdl::operator+(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[450/916] 'mdl::operator+(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[451/916] 'mdl::operator+(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[452/916] 'mdl::operator+(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[453/916] 'mdl::operator+(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[454/916] 'mdl::operator+(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[455/916] 'mdl::operator+(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[456/916] 'mdl::operator+(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[457/916] 'mdl::operator+(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[458/916] 'mdl::operator+(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[459/916] 'mdl::operator+(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[460/916] 'mdl::operator+(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[461/916] 'mdl::operator+(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[462/916] 'mdl::operator+(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[463/916] 'mdl::operator+(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[464/916] 'mdl::operator+(float,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[465/916] 'mdl::operator+(color,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[466/916] 'mdl::operator+(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[467/916] 'mdl::operator+(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[468/916] 'mdl::operator+(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[469/916] 'mdl::operator+(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[470/916] 'mdl::operator+(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[471/916] 'mdl::operator+(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[472/916] 'mdl::operator+(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[473/916] 'mdl::operator+(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[474/916] 'mdl::operator+(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[475/916] 'mdl::operator+(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[476/916] 'mdl::operator+(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[477/916] 'mdl::operator+(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[478/916] 'mdl::operator+(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[479/916] 'mdl::operator+(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[480/916] 'mdl::operator+(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[481/916] 'mdl::operator+(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[482/916] 'mdl::operator+(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[483/916] 'mdl::operator+(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[484/916] 'mdl::operator!=(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[485/916] 'mdl::operator!=(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[486/916] 'mdl::operator!=(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[487/916] 'mdl::operator!=(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[488/916] 'mdl::operator!=(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[489/916] 'mdl::operator!=(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[490/916] 'mdl::operator!=(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[491/916] 'mdl::operator!=(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[492/916] 'mdl::operator!=(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[493/916] 'mdl::operator!=(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[494/916] 'mdl::operator!=(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[495/916] 'mdl::operator!=(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[496/916] 'mdl::operator!=(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[497/916] 'mdl::operator!=(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[498/916] 'mdl::operator!=(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[499/916] 'mdl::operator!=(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[500/916] 'mdl::operator!=(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[501/916] 'mdl::operator!=(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[502/916] 'mdl::operator!=(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[503/916] 'mdl::operator!=(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[504/916] 'mdl::operator!=(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[505/916] 'mdl::operator!=(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[506/916] 'mdl::operator!=(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[507/916] 'mdl::operator!=(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[508/916] 'mdl::operator!=(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[509/916] 'mdl::operator!=(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[510/916] 'mdl::operator!=(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[511/916] 'mdl::operator!=(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[512/916] 'mdl::operator!=(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[513/916] 'mdl::operator!=(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[514/916] 'mdl::operator!=(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[515/916] 'mdl::operator!=(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[516/916] 'mdl::operator!=(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[517/916] 'mdl::operator!=(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[518/916] 'mdl::operator!=(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[519/916] 'mdl::operator!=(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[520/916] 'mdl::operator!=(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[521/916] 'mdl::operator!=(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[522/916] 'mdl::operator!=(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[523/916] 'mdl::operator!=(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[524/916] 'mdl::operator!=(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[525/916] 'mdl::operator!=(string,string)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'y' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[526/916] 'mdl::operator!=(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[527/916] 'mdl::operator!=(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[528/916] 'mdl::operator!=(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[529/916] 'mdl::operator!=(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[530/916] 'mdl::operator!=(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[531/916] 'mdl::operator!=(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[532/916] 'mdl::operator!=(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[533/916] 'mdl::operator!=(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[534/916] 'mdl::operator!=(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[535/916] 'mdl::operator!=(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[536/916] 'mdl::operator!=(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[537/916] 'mdl::operator!=(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[538/916] 'mdl::operator!=(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[539/916] 'mdl::operator!=(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[540/916] 'mdl::operator!=(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[541/916] 'mdl::operator!=(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[542/916] 'mdl::operator!=(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[543/916] 'mdl::operator!=(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[544/916] 'mdl::operator==(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[545/916] 'mdl::operator==(bool2,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[546/916] 'mdl::operator==(bool,bool2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[547/916] 'mdl::operator==(bool2,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[548/916] 'mdl::operator==(bool3,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[549/916] 'mdl::operator==(bool,bool3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[550/916] 'mdl::operator==(bool3,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[551/916] 'mdl::operator==(bool4,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[552/916] 'mdl::operator==(bool,bool4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[553/916] 'mdl::operator==(bool4,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[554/916] 'mdl::operator==(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[555/916] 'mdl::operator==(int2,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[556/916] 'mdl::operator==(int,int2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[557/916] 'mdl::operator==(int2,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[558/916] 'mdl::operator==(int3,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[559/916] 'mdl::operator==(int,int3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[560/916] 'mdl::operator==(int3,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[561/916] 'mdl::operator==(int4,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[562/916] 'mdl::operator==(int,int4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[563/916] 'mdl::operator==(int4,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[564/916] 'mdl::operator==(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[565/916] 'mdl::operator==(float2,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[566/916] 'mdl::operator==(float,float2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[567/916] 'mdl::operator==(float2,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[568/916] 'mdl::operator==(float3,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[569/916] 'mdl::operator==(float,float3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[570/916] 'mdl::operator==(float3,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[571/916] 'mdl::operator==(float4,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[572/916] 'mdl::operator==(float,float4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[573/916] 'mdl::operator==(float4,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[574/916] 'mdl::operator==(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[575/916] 'mdl::operator==(double2,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[576/916] 'mdl::operator==(double,double2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[577/916] 'mdl::operator==(double2,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[578/916] 'mdl::operator==(double3,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[579/916] 'mdl::operator==(double,double3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[580/916] 'mdl::operator==(double3,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[581/916] 'mdl::operator==(double4,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[582/916] 'mdl::operator==(double,double4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[583/916] 'mdl::operator==(double4,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[584/916] 'mdl::operator==(color,color)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'y' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[585/916] 'mdl::operator==(string,string)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'y' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[586/916] 'mdl::operator==(float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[587/916] 'mdl::operator==(float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[588/916] 'mdl::operator==(float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[589/916] 'mdl::operator==(float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[590/916] 'mdl::operator==(float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[591/916] 'mdl::operator==(float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[592/916] 'mdl::operator==(float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[593/916] 'mdl::operator==(float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[594/916] 'mdl::operator==(float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[595/916] 'mdl::operator==(double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[596/916] 'mdl::operator==(double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[597/916] 'mdl::operator==(double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[598/916] 'mdl::operator==(double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[599/916] 'mdl::operator==(double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[600/916] 'mdl::operator==(double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[601/916] 'mdl::operator==(double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[602/916] 'mdl::operator==(double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[603/916] 'mdl::operator==(double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'y' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[604/916] 'mdl::int(intensity_mode)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[605/916] 'mdl::texture_ptex()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[606/916] 'mdl::texture_ptex(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[607/916] 'mdl::texture_cube()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[608/916] 'mdl::texture_cube(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[609/916] 'mdl::texture_3d()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[610/916] 'mdl::texture_3d(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[611/916] 'mdl::texture_2d()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[612/916] 'mdl::texture_2d(string,::tex::gamma_mode)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString) [Uniform]
				'gamma' = SDValueEnum("mdl::tex::gamma_mode",0) [CONNECTABLE]
					Types:
						'mdl::tex::gamma_mode' (SDTypeEnum) [Uniform]
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[613/916] 'mdl::vdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[614/916] 'mdl::edf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[615/916] 'mdl::hair_bsdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[616/916] 'mdl::bsdf()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[617/916] 'mdl::bsdf_measurement()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[618/916] 'mdl::bsdf_measurement(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[619/916] 'mdl::light_profile()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[620/916] 'mdl::light_profile(string)'
			SDPropertyCategory = 'Input'
				'name' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[621/916] 'mdl::double4x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[622/916] 'mdl::double4x4(double,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm23' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm32' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm33' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[623/916] 'mdl::double4x4(double4,double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col2' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col3' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[624/916] 'mdl::double4x4(float4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[625/916] 'mdl::double4x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[626/916] 'mdl::double4x3(double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm32' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[627/916] 'mdl::double4x3(double3,double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col2' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col3' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[628/916] 'mdl::double4x3(float4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[629/916] 'mdl::double4x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[630/916] 'mdl::double4x2(double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm30' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm31' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[631/916] 'mdl::double4x2(double2,double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col2' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col3' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[632/916] 'mdl::double4x2(float4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[633/916] 'mdl::double3x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[634/916] 'mdl::double3x4(double,double,double,double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm23' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[635/916] 'mdl::double3x4(double4,double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col2' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[636/916] 'mdl::double3x4(float3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[637/916] 'mdl::double3x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[638/916] 'mdl::double3x3(double,double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm22' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[639/916] 'mdl::double3x3(double3,double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col2' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[640/916] 'mdl::double3x3(float3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[641/916] 'mdl::double3x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[642/916] 'mdl::double3x2(double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm20' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm21' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[643/916] 'mdl::double3x2(double2,double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col2' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[644/916] 'mdl::double3x2(float3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[645/916] 'mdl::double2x4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[646/916] 'mdl::double2x4(double,double,double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm03' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm13' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[647/916] 'mdl::double2x4(double4,double4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'col1' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[648/916] 'mdl::double2x4(float2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[649/916] 'mdl::double2x3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[650/916] 'mdl::double2x3(double,double,double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm02' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm12' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[651/916] 'mdl::double2x3(double3,double3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'col1' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[652/916] 'mdl::double2x3(float2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[653/916] 'mdl::double2x2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[654/916] 'mdl::double2x2(double,double,double,double)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm01' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm10' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'm11' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[655/916] 'mdl::double2x2(double2,double2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'col1' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[656/916] 'mdl::double2x2(float2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[657/916] 'mdl::float4x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[658/916] 'mdl::float4x4(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm23' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm32' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm33' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[659/916] 'mdl::float4x4(float4,float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col2' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col3' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[660/916] 'mdl::float4x4(double4x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[661/916] 'mdl::float4x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[662/916] 'mdl::float4x3(float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm32' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[663/916] 'mdl::float4x3(float3,float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col2' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col3' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[664/916] 'mdl::float4x3(double4x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[665/916] 'mdl::float4x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[666/916] 'mdl::float4x2(float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm30' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm31' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[667/916] 'mdl::float4x2(float2,float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col2' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col3' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[668/916] 'mdl::float4x2(double4x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[669/916] 'mdl::float3x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[670/916] 'mdl::float3x4(float,float,float,float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm23' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[671/916] 'mdl::float3x4(float4,float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col2' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[672/916] 'mdl::float3x4(double3x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[673/916] 'mdl::float3x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[674/916] 'mdl::float3x3(float,float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm22' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[675/916] 'mdl::float3x3(float3,float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col2' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[676/916] 'mdl::float3x3(double3x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[677/916] 'mdl::float3x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[678/916] 'mdl::float3x2(float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm20' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm21' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[679/916] 'mdl::float3x2(float2,float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col2' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[680/916] 'mdl::float3x2(double3x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[681/916] 'mdl::float2x4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[682/916] 'mdl::float2x4(float,float,float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm03' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm13' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[683/916] 'mdl::float2x4(float4,float4)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'col1' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[684/916] 'mdl::float2x4(double2x4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[685/916] 'mdl::float2x3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[686/916] 'mdl::float2x3(float,float,float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm02' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm12' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[687/916] 'mdl::float2x3(float3,float3)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'col1' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[688/916] 'mdl::float2x3(double2x3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[689/916] 'mdl::float2x2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[690/916] 'mdl::float2x2(float,float,float,float)'
			SDPropertyCategory = 'Input'
				'm00' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm01' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm10' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'm11' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[691/916] 'mdl::float2x2(float2,float2)'
			SDPropertyCategory = 'Input'
				'col0' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'col1' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[692/916] 'mdl::float2x2(double2x2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[693/916] 'mdl::color(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[694/916] 'mdl::color(float,float,float)'
			SDPropertyCategory = 'Input'
				'r' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'g' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'b' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[695/916] 'mdl::color(float3)'
			SDPropertyCategory = 'Input'
				'rgb' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[696/916] 'mdl::color(float[N],float[N])'
			SDPropertyCategory = 'Input'
				'wavelengths' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'amplitudes' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[697/916] 'mdl::double4(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[698/916] 'mdl::double4(double,double,double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'z' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'w' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[699/916] 'mdl::double4(double,double,double,double).x(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[700/916] 'mdl::double4(double,double,double,double).y(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[701/916] 'mdl::double4(double,double,double,double).z(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[702/916] 'mdl::double4(double,double,double,double).w(double4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[703/916] 'mdl::double4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[704/916] 'mdl::double4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[705/916] 'mdl::double4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[706/916] 'mdl::double3(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[707/916] 'mdl::double3(double,double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'z' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[708/916] 'mdl::double3(double,double,double).x(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[709/916] 'mdl::double3(double,double,double).y(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[710/916] 'mdl::double3(double,double,double).z(double3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[711/916] 'mdl::double3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[712/916] 'mdl::double3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[713/916] 'mdl::double3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[714/916] 'mdl::double2(double)'
			SDPropertyCategory = 'Input'
				'value' = SDValueDouble(double(0)) [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[715/916] 'mdl::double2(double,double)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'y' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[716/916] 'mdl::double2(double,double).x(double2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[717/916] 'mdl::double2(double,double).y(double2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[718/916] 'mdl::double2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[719/916] 'mdl::double2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[720/916] 'mdl::double2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[721/916] 'mdl::double(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[722/916] 'mdl::double(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[723/916] 'mdl::double(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[724/916] 'mdl::float4(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[725/916] 'mdl::float4(float,float,float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'z' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'w' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[726/916] 'mdl::float4(float,float,float,float).x(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[727/916] 'mdl::float4(float,float,float,float).y(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[728/916] 'mdl::float4(float,float,float,float).z(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[729/916] 'mdl::float4(float,float,float,float).w(float4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[730/916] 'mdl::float4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[731/916] 'mdl::float4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[732/916] 'mdl::float4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[733/916] 'mdl::float3(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[734/916] 'mdl::float3(float,float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'z' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[735/916] 'mdl::float3(float,float,float).x(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[736/916] 'mdl::float3(float,float,float).y(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[737/916] 'mdl::float3(float,float,float).z(float3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[738/916] 'mdl::float3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[739/916] 'mdl::float3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[740/916] 'mdl::float3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[741/916] 'mdl::float3(color)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[742/916] 'mdl::float2(float)'
			SDPropertyCategory = 'Input'
				'value' = SDValueFloat(float(0)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[743/916] 'mdl::float2(float,float)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'y' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[744/916] 'mdl::float2(float,float).x(float2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[745/916] 'mdl::float2(float,float).y(float2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[746/916] 'mdl::float2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[747/916] 'mdl::float2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[748/916] 'mdl::float2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[749/916] 'mdl::float(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[750/916] 'mdl::float(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[751/916] 'mdl::float(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[752/916] 'mdl::int4(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[753/916] 'mdl::int4(int,int,int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'z' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'w' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[754/916] 'mdl::int4(int,int,int,int).x(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[755/916] 'mdl::int4(int,int,int,int).y(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[756/916] 'mdl::int4(int,int,int,int).z(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[757/916] 'mdl::int4(int,int,int,int).w(int4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[758/916] 'mdl::int4(bool4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[759/916] 'mdl::int4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[760/916] 'mdl::int4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[761/916] 'mdl::int3(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[762/916] 'mdl::int3(int,int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'z' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[763/916] 'mdl::int3(int,int,int).x(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[764/916] 'mdl::int3(int,int,int).y(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[765/916] 'mdl::int3(int,int,int).z(int3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[766/916] 'mdl::int3(bool3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[767/916] 'mdl::int3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[768/916] 'mdl::int3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[769/916] 'mdl::int2(int)'
			SDPropertyCategory = 'Input'
				'value' = SDValueInt(int(0)) [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[770/916] 'mdl::int2(int,int)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'y' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[771/916] 'mdl::int2(int,int).x(int2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[772/916] 'mdl::int2(int,int).y(int2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[773/916] 'mdl::int2(bool2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[774/916] 'mdl::int2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[775/916] 'mdl::int2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[776/916] 'mdl::int(bool)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[777/916] 'mdl::int(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[778/916] 'mdl::int(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[779/916] 'mdl::bool4(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[780/916] 'mdl::bool4(bool,bool,bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'z' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'w' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[781/916] 'mdl::bool4(bool,bool,bool,bool).x(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[782/916] 'mdl::bool4(bool,bool,bool,bool).y(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[783/916] 'mdl::bool4(bool,bool,bool,bool).z(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[784/916] 'mdl::bool4(bool,bool,bool,bool).w(bool4)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[785/916] 'mdl::bool4(int4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[786/916] 'mdl::bool4(float4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[787/916] 'mdl::bool4(double4)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[788/916] 'mdl::bool3(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[789/916] 'mdl::bool3(bool,bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'z' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[790/916] 'mdl::bool3(bool,bool,bool).x(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[791/916] 'mdl::bool3(bool,bool,bool).y(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[792/916] 'mdl::bool3(bool,bool,bool).z(bool3)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[793/916] 'mdl::bool3(int3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[794/916] 'mdl::bool3(float3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[795/916] 'mdl::bool3(double3)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[796/916] 'mdl::bool2(bool)'
			SDPropertyCategory = 'Input'
				'value' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[797/916] 'mdl::bool2(bool,bool)'
			SDPropertyCategory = 'Input'
				'x' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'y' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[798/916] 'mdl::bool2(bool,bool).x(bool2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[799/916] 'mdl::bool2(bool,bool).y(bool2)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[800/916] 'mdl::bool2(int2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[801/916] 'mdl::bool2(float2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[802/916] 'mdl::bool2(double2)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[803/916] 'mdl::bool(int)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[804/916] 'mdl::bool(float)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[805/916] 'mdl::bool(double)'
			SDPropertyCategory = 'Input'
				'value' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[806/916] 'mdl::material_emission(edf,color,intensity_mode)'
			SDPropertyCategory = 'Input'
				'emission' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				'intensity' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'mode' = SDValueEnum("mdl::intensity_mode",0) [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[807/916] 'mdl::material_emission.emission(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[808/916] 'mdl::material_emission.intensity(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[809/916] 'mdl::material_emission.mode(material_emission)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
		[810/916] 'mdl::material_emission$1.0(edf,color)'
			SDPropertyCategory = 'Input'
				'emission' = SDMDLValueEDF() [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				'intensity' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[811/916] 'mdl::material_surface(bsdf,material_emission)'
			SDPropertyCategory = 'Input'
				'scattering' = SDMDLValueBSDF() [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'emission' = SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0)) [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[812/916] 'mdl::material_surface.scattering(material_surface)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[813/916] 'mdl::material_surface.emission(material_surface)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[814/916] 'mdl::material_volume(vdf,color,color)'
			SDPropertyCategory = 'Input'
				'scattering' = SDMDLValueVDF() [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				'absorption_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'scattering_coefficient' = SDValueColorRGB(ColorRGB(0,0,0)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[815/916] 'mdl::material_volume.scattering(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[816/916] 'mdl::material_volume.absorption_coefficient(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[817/916] 'mdl::material_volume.scattering_coefficient(material_volume)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[818/916] 'mdl::material_geometry(float3,float,float3)'
			SDPropertyCategory = 'Input'
				'displacement' = SDValueFloat3(float3(0,0,0)) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'cutout_opacity' = SDValueFloat(float(1)) [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'normal' = SDMDLValueCall(mdl::state::normal()__default_call___0) [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[819/916] 'mdl::material_geometry.displacement(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[820/916] 'mdl::material_geometry.cutout_opacity(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[821/916] 'mdl::material_geometry.normal(material_geometry)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[822/916] 'mdl::material(bool,material_surface,material_surface,color,material_volume,material_geometry,hair_bsdf)'
			SDPropertyCategory = 'Input'
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'surface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'backface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'ior' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume' = SDValueStruct("mdl::material_volume",scattering=SDMDLValueVDF(),absorption_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),scattering_coefficient=SDValueColorRGB(ColorRGB(0,0,0))) [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				'geometry' = SDMDLValueCall(mdl::material_geometry(float3,float,float3)__default_call___2) [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				'hair' = SDMDLValueHairBSDF() [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[823/916] 'mdl::material.thin_walled(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool) [Uniform]
				
		[824/916] 'mdl::material.surface(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[825/916] 'mdl::material.backface(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[826/916] 'mdl::material.ior(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				
		[827/916] 'mdl::material.volume(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[828/916] 'mdl::material.geometry(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[829/916] 'mdl::material.hair(material)'
			SDPropertyCategory = 'Input'
				's' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[830/916] 'mdl::material$1.4(bool,material_surface,material_surface,color,material_volume,material_geometry)'
			SDPropertyCategory = 'Input'
				'thin_walled' = SDValueBool(bool(false)) [CONNECTABLE]
					Types:
						'bool' (SDTypeBool) [Uniform]
				'surface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'backface' = SDValueStruct("mdl::material_surface",scattering=SDMDLValueBSDF(),emission=SDValueStruct("mdl::material_emission",emission=SDMDLValueEDF(),intensity=SDValueColorRGB(ColorRGB(0,0,0)),mode=SDValueEnum("mdl::intensity_mode",0))) [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'ior' = SDValueColorRGB(ColorRGB(1,1,1)) [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB) [Uniform]
				'volume' = SDValueStruct("mdl::material_volume",scattering=SDMDLValueVDF(),absorption_coefficient=SDValueColorRGB(ColorRGB(0,0,0)),scattering_coefficient=SDValueColorRGB(ColorRGB(0,0,0))) [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				'geometry' = SDMDLValueCall(mdl::material_geometry(float3,float,float3)__default_call___4) [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[831/916] 'mdl::float[]@(float[],int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[832/916] 'mdl::bool2@(bool2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[833/916] 'mdl::bool3@(bool3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[834/916] 'mdl::bool4@(bool4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[835/916] 'mdl::int2@(int2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[836/916] 'mdl::int3@(int3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[837/916] 'mdl::int4@(int4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[838/916] 'mdl::float2@(float2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[839/916] 'mdl::float3@(float3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[840/916] 'mdl::float4@(float4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[841/916] 'mdl::float2x2@(float2x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[842/916] 'mdl::float3x2@(float3x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[843/916] 'mdl::float4x2@(float4x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[844/916] 'mdl::float2x3@(float2x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[845/916] 'mdl::float3x3@(float3x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[846/916] 'mdl::float4x3@(float4x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[847/916] 'mdl::float2x4@(float2x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[848/916] 'mdl::float3x4@(float3x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[849/916] 'mdl::float4x4@(float4x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[850/916] 'mdl::double2@(double2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[851/916] 'mdl::double3@(double3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[852/916] 'mdl::double4@(double4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[853/916] 'mdl::double2x2@(double2x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[854/916] 'mdl::double3x2@(double3x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[855/916] 'mdl::double4x2@(double4x2,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[856/916] 'mdl::double2x3@(double2x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[857/916] 'mdl::double3x3@(double3x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[858/916] 'mdl::double4x3@(double4x3,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[859/916] 'mdl::double2x4@(double2x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[860/916] 'mdl::double3x4@(double3x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[861/916] 'mdl::double4x4@(double4x4,int)'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'i' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[862/916] 'mdl::float[].len(float[])'
			SDPropertyCategory = 'Input'
				'a' [CONNECTABLE]
					Types:
						'SDTypeArray<float>' (SDTypeArray)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[863/916] 'mdl::operator?(bool,intensity_mode,intensity_mode)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::intensity_mode' (SDTypeEnum)
				
		[864/916] 'mdl::operator?(bool,texture_ptex,texture_ptex)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_ptex' (SDMDLTypeTextureReference)
				
		[865/916] 'mdl::operator?(bool,texture_cube,texture_cube)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_cube' (SDMDLTypeTextureReference)
				
		[866/916] 'mdl::operator?(bool,texture_3d,texture_3d)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_3d' (SDMDLTypeTextureReference)
				
		[867/916] 'mdl::operator?(bool,texture_2d,texture_2d)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::texture_2d' (SDMDLTypeTextureReference)
				
		[868/916] 'mdl::operator?(bool,vdf,vdf)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::vdf' (SDMDLTypeVDF)
				
		[869/916] 'mdl::operator?(bool,edf,edf)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::edf' (SDMDLTypeEDF)
				
		[870/916] 'mdl::operator?(bool,hair_bsdf,hair_bsdf)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
				
		[871/916] 'mdl::operator?(bool,bsdf,bsdf)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf' (SDMDLTypeBSDF)
				
		[872/916] 'mdl::operator?(bool,bsdf_measurement,bsdf_measurement)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
				
		[873/916] 'mdl::operator?(bool,light_profile,light_profile)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::light_profile' (SDMDLTypeLightProfileReference)
				
		[874/916] 'mdl::operator?(bool,double4x4,double4x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][4]' (SDTypeMatrix)
				
		[875/916] 'mdl::operator?(bool,double4x3,double4x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][3]' (SDTypeMatrix)
				
		[876/916] 'mdl::operator?(bool,double4x2,double4x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[4][2]' (SDTypeMatrix)
				
		[877/916] 'mdl::operator?(bool,double3x4,double3x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][4]' (SDTypeMatrix)
				
		[878/916] 'mdl::operator?(bool,double3x3,double3x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][3]' (SDTypeMatrix)
				
		[879/916] 'mdl::operator?(bool,double3x2,double3x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[3][2]' (SDTypeMatrix)
				
		[880/916] 'mdl::operator?(bool,double2x4,double2x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][4]' (SDTypeMatrix)
				
		[881/916] 'mdl::operator?(bool,double2x3,double2x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][3]' (SDTypeMatrix)
				
		[882/916] 'mdl::operator?(bool,double2x2,double2x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<double>[2][2]' (SDTypeMatrix)
				
		[883/916] 'mdl::operator?(bool,float4x4,float4x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][4]' (SDTypeMatrix)
				
		[884/916] 'mdl::operator?(bool,float4x3,float4x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][3]' (SDTypeMatrix)
				
		[885/916] 'mdl::operator?(bool,float4x2,float4x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[4][2]' (SDTypeMatrix)
				
		[886/916] 'mdl::operator?(bool,float3x4,float3x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][4]' (SDTypeMatrix)
				
		[887/916] 'mdl::operator?(bool,float3x3,float3x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][3]' (SDTypeMatrix)
				
		[888/916] 'mdl::operator?(bool,float3x2,float3x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[3][2]' (SDTypeMatrix)
				
		[889/916] 'mdl::operator?(bool,float2x4,float2x4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][4]' (SDTypeMatrix)
				
		[890/916] 'mdl::operator?(bool,float2x3,float2x3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][3]' (SDTypeMatrix)
				
		[891/916] 'mdl::operator?(bool,float2x2,float2x2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				'false_exp' [CONNECTABLE]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'matrix<float>[2][2]' (SDTypeMatrix)
				
		[892/916] 'mdl::operator?(bool,color,color)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				'false_exp' [CONNECTABLE]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'ColorRGB' (SDTypeColorRGB)
				
		[893/916] 'mdl::operator?(bool,string,string)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				'false_exp' [CONNECTABLE]
					Types:
						'string' (SDTypeString)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'string' (SDTypeString)
				
		[894/916] 'mdl::operator?(bool,double4,double4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				'false_exp' [CONNECTABLE]
					Types:
						'double4' (SDTypeDouble4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double4' (SDTypeDouble4)
				
		[895/916] 'mdl::operator?(bool,double3,double3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				'false_exp' [CONNECTABLE]
					Types:
						'double3' (SDTypeDouble3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double3' (SDTypeDouble3)
				
		[896/916] 'mdl::operator?(bool,double2,double2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				'false_exp' [CONNECTABLE]
					Types:
						'double2' (SDTypeDouble2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double2' (SDTypeDouble2)
				
		[897/916] 'mdl::operator?(bool,double,double)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				'false_exp' [CONNECTABLE]
					Types:
						'double' (SDTypeDouble)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'double' (SDTypeDouble)
				
		[898/916] 'mdl::operator?(bool,float4,float4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				'false_exp' [CONNECTABLE]
					Types:
						'float4' (SDTypeFloat4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float4' (SDTypeFloat4)
				
		[899/916] 'mdl::operator?(bool,float3,float3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				'false_exp' [CONNECTABLE]
					Types:
						'float3' (SDTypeFloat3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float3' (SDTypeFloat3)
				
		[900/916] 'mdl::operator?(bool,float2,float2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				'false_exp' [CONNECTABLE]
					Types:
						'float2' (SDTypeFloat2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float2' (SDTypeFloat2)
				
		[901/916] 'mdl::operator?(bool,float,float)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				'false_exp' [CONNECTABLE]
					Types:
						'float' (SDTypeFloat)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'float' (SDTypeFloat)
				
		[902/916] 'mdl::operator?(bool,int4,int4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				'false_exp' [CONNECTABLE]
					Types:
						'int4' (SDTypeInt4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int4' (SDTypeInt4)
				
		[903/916] 'mdl::operator?(bool,int3,int3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				'false_exp' [CONNECTABLE]
					Types:
						'int3' (SDTypeInt3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int3' (SDTypeInt3)
				
		[904/916] 'mdl::operator?(bool,int2,int2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				'false_exp' [CONNECTABLE]
					Types:
						'int2' (SDTypeInt2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int2' (SDTypeInt2)
				
		[905/916] 'mdl::operator?(bool,int,int)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				'false_exp' [CONNECTABLE]
					Types:
						'int' (SDTypeInt)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[906/916] 'mdl::operator?(bool,bool4,bool4)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				'false_exp' [CONNECTABLE]
					Types:
						'bool4' (SDTypeBool4)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool4' (SDTypeBool4)
				
		[907/916] 'mdl::operator?(bool,bool3,bool3)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				'false_exp' [CONNECTABLE]
					Types:
						'bool3' (SDTypeBool3)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool3' (SDTypeBool3)
				
		[908/916] 'mdl::operator?(bool,bool2,bool2)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				'false_exp' [CONNECTABLE]
					Types:
						'bool2' (SDTypeBool2)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool2' (SDTypeBool2)
				
		[909/916] 'mdl::operator?(bool,bool,bool)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'false_exp' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'bool' (SDTypeBool)
				
		[910/916] 'mdl::operator?(bool,material_emission,material_emission)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_emission' (SDTypeStruct)
				
		[911/916] 'mdl::operator?(bool,material_surface,material_surface)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_surface' (SDTypeStruct)
				
		[912/916] 'mdl::operator?(bool,material_volume,material_volume)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_volume' (SDTypeStruct)
				
		[913/916] 'mdl::operator?(bool,material_geometry,material_geometry)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material_geometry' (SDTypeStruct)
				
		[914/916] 'mdl::operator?(bool,material,material)'
			SDPropertyCategory = 'Input'
				'cond' [CONNECTABLE]
					Types:
						'bool' (SDTypeBool)
				'true_exp' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				'false_exp' [CONNECTABLE]
					Types:
						'mdl::material' (SDTypeStruct)
				
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'mdl::material' (SDTypeStruct)
				
		[915/916] 'mdl::T[](...)'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
		[916/916] 'mdl::operator_cast()'
			SDPropertyCategory = 'Output'
				'output' [CONNECTABLE, READ_ONLY]
					Types:
						'int' (SDTypeInt)
				
	Types:
		[1/97] 'bool'
			'bool' (SDTypeBool)
		[2/97] 'int'
			'int' (SDTypeInt)
		[3/97] 'float'
			'float' (SDTypeFloat)
		[4/97] 'double'
			'double' (SDTypeDouble)
		[5/97] 'string'
			'string' (SDTypeString)
		[6/97] 'bool2'
			'bool2' (SDTypeBool2)
		[7/97] 'bool3'
			'bool3' (SDTypeBool3)
		[8/97] 'bool4'
			'bool4' (SDTypeBool4)
		[9/97] 'int2'
			'int2' (SDTypeInt2)
		[10/97] 'int3'
			'int3' (SDTypeInt3)
		[11/97] 'int4'
			'int4' (SDTypeInt4)
		[12/97] 'float2'
			'float2' (SDTypeFloat2)
		[13/97] 'float3'
			'float3' (SDTypeFloat3)
		[14/97] 'float4'
			'float4' (SDTypeFloat4)
		[15/97] 'double2'
			'double2' (SDTypeDouble2)
		[16/97] 'double3'
			'double3' (SDTypeDouble3)
		[17/97] 'double4'
			'double4' (SDTypeDouble4)
		[18/97] 'matrix<float>[2][2]'
			'matrix<float>[2][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 2
		[19/97] 'matrix<float>[2][3]'
			'matrix<float>[2][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 3
		[20/97] 'matrix<float>[2][4]'
			'matrix<float>[2][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 2
				Rows : 4
		[21/97] 'matrix<float>[3][2]'
			'matrix<float>[3][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 2
		[22/97] 'matrix<float>[3][3]'
			'matrix<float>[3][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 3
		[23/97] 'matrix<float>[3][4]'
			'matrix<float>[3][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 3
				Rows : 4
		[24/97] 'matrix<float>[4][2]'
			'matrix<float>[4][2]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 2
		[25/97] 'matrix<float>[4][3]'
			'matrix<float>[4][3]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 3
		[26/97] 'matrix<float>[4][4]'
			'matrix<float>[4][4]' (SDTypeMatrix)
				Item Type: 'float' (SDTypeFloat)
				Columns: 4
				Rows : 4
		[27/97] 'matrix<double>[2][2]'
			'matrix<double>[2][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 2
		[28/97] 'matrix<double>[2][3]'
			'matrix<double>[2][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 3
		[29/97] 'matrix<double>[2][4]'
			'matrix<double>[2][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 2
				Rows : 4
		[30/97] 'matrix<double>[3][2]'
			'matrix<double>[3][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 2
		[31/97] 'matrix<double>[3][3]'
			'matrix<double>[3][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 3
		[32/97] 'matrix<double>[3][4]'
			'matrix<double>[3][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 3
				Rows : 4
		[33/97] 'matrix<double>[4][2]'
			'matrix<double>[4][2]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 2
		[34/97] 'matrix<double>[4][3]'
			'matrix<double>[4][3]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 3
		[35/97] 'matrix<double>[4][4]'
			'matrix<double>[4][4]' (SDTypeMatrix)
				Item Type: 'double' (SDTypeDouble)
				Columns: 4
				Rows : 4
		[36/97] 'mdl::light_profile'
			'mdl::light_profile' (SDMDLTypeLightProfileReference)
		[37/97] 'mdl::bsdf_measurement'
			'mdl::bsdf_measurement' (SDMDLTypeBSDFMeasurementReference)
		[38/97] 'mdl::texture_2d'
			'mdl::texture_2d' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.TwoDim
		[39/97] 'mdl::texture_3d'
			'mdl::texture_3d' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.ThreeDim
		[40/97] 'mdl::texture_cube'
			'mdl::texture_cube' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.Cube
		[41/97] 'mdl::texture_ptex'
			'mdl::texture_ptex' (SDMDLTypeTextureReference)
				TextureShape: TextureShape.Ptex
		[42/97] 'mdl::edf'
			'mdl::edf' (SDMDLTypeEDF)
		[43/97] 'mdl::vdf'
			'mdl::vdf' (SDMDLTypeVDF)
		[44/97] 'mdl::bsdf'
			'mdl::bsdf' (SDMDLTypeBSDF)
		[45/97] 'mdl::hair_bsdf'
			'mdl::hair_bsdf' (SDMDLTypeHairBSDF)
		[46/97] 'mdl::call'
			'mdl::call' (SDMDLTypeCall)
		[47/97] 'mdl::paramref'
			'mdl::paramref' (SDMDLTypeParameterReference)
		[48/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[49/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[50/97] 'ColorRGB'
			'ColorRGB' (SDTypeColorRGB)
		[51/97] 'mdl::intensity_mode'
			'mdl::intensity_mode' (SDTypeEnum)
				int intensity_radiant_exitance = SDValueInt(int(0))
				int intensity_power = SDValueInt(int(1))
		[52/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[53/97] 'mdl::material_emission'
			'mdl::material_emission' (SDTypeStruct)
				mdl::edf emission
				ColorRGB intensity
				mdl::intensity_mode mode
		[54/97] 'mdl::material_surface'
			'mdl::material_surface' (SDTypeStruct)
				mdl::bsdf scattering
				mdl::material_emission emission
		[55/97] 'mdl::material_volume'
			'mdl::material_volume' (SDTypeStruct)
				mdl::vdf scattering
				ColorRGB absorption_coefficient
				ColorRGB scattering_coefficient
		[56/97] 'mdl::material_geometry'
			'mdl::material_geometry' (SDTypeStruct)
				float3 displacement
				float cutout_opacity
				float3 normal
		[57/97] 'mdl::material'
			'mdl::material' (SDTypeStruct)
				bool thin_walled
				mdl::material_surface surface
				mdl::material_surface backface
				ColorRGB ior
				mdl::material_volume volume
				mdl::material_geometry geometry
				mdl::hair_bsdf hair
		[58/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[59/97] 'SDTypeArray<float2>'
			'SDTypeArray<float2>' (SDTypeArray)
				Item Type:
					'float2' (SDTypeFloat2)
		[60/97] 'SDTypeArray<float3>'
			'SDTypeArray<float3>' (SDTypeArray)
				Item Type:
					'float3' (SDTypeFloat3)
		[61/97] 'SDTypeArray<float4>'
			'SDTypeArray<float4>' (SDTypeArray)
				Item Type:
					'float4' (SDTypeFloat4)
		[62/97] 'SDTypeArray<double>'
			'SDTypeArray<double>' (SDTypeArray)
				Item Type:
					'double' (SDTypeDouble)
		[63/97] 'SDTypeArray<double2>'
			'SDTypeArray<double2>' (SDTypeArray)
				Item Type:
					'double2' (SDTypeDouble2)
		[64/97] 'SDTypeArray<double3>'
			'SDTypeArray<double3>' (SDTypeArray)
				Item Type:
					'double3' (SDTypeDouble3)
		[65/97] 'SDTypeArray<double4>'
			'SDTypeArray<double4>' (SDTypeArray)
				Item Type:
					'double4' (SDTypeDouble4)
		[66/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[67/97] 'SDTypeArray<float2>'
			'SDTypeArray<float2>' (SDTypeArray)
				Item Type:
					'float2' (SDTypeFloat2)
		[68/97] 'SDTypeArray<float3>'
			'SDTypeArray<float3>' (SDTypeArray)
				Item Type:
					'float3' (SDTypeFloat3)
		[69/97] 'SDTypeArray<float4>'
			'SDTypeArray<float4>' (SDTypeArray)
				Item Type:
					'float4' (SDTypeFloat4)
		[70/97] 'SDTypeArray<double>'
			'SDTypeArray<double>' (SDTypeArray)
				Item Type:
					'double' (SDTypeDouble)
		[71/97] 'SDTypeArray<double2>'
			'SDTypeArray<double2>' (SDTypeArray)
				Item Type:
					'double2' (SDTypeDouble2)
		[72/97] 'SDTypeArray<double3>'
			'SDTypeArray<double3>' (SDTypeArray)
				Item Type:
					'double3' (SDTypeDouble3)
		[73/97] 'SDTypeArray<double4>'
			'SDTypeArray<double4>' (SDTypeArray)
				Item Type:
					'double4' (SDTypeDouble4)
		[74/97] 'SDTypeArray<string>'
			'SDTypeArray<string>' (SDTypeArray)
				Item Type:
					'string' (SDTypeString)
		[75/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[76/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[77/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[78/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[79/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[80/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[81/97] 'SDTypeArray<float2>'
			'SDTypeArray<float2>' (SDTypeArray)
				Item Type:
					'float2' (SDTypeFloat2)
		[82/97] 'SDTypeArray<float3>'
			'SDTypeArray<float3>' (SDTypeArray)
				Item Type:
					'float3' (SDTypeFloat3)
		[83/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
		[84/97] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[85/97] 'SDTypeArray<float4>'
			'SDTypeArray<float4>' (SDTypeArray)
				Item Type:
					'float4' (SDTypeFloat4)
		[86/97] 'SDTypeArray<float2>'
			'SDTypeArray<float2>' (SDTypeArray)
				Item Type:
					'float2' (SDTypeFloat2)
		[87/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[88/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[89/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[90/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB)
		[91/97] 'SDTypeArray<ColorRGB>'
			'SDTypeArray<ColorRGB>' (SDTypeArray)
				Item Type:
					'ColorRGB' (SDTypeColorRGB) [Uniform]
		[92/97] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt) [Uniform]
		[93/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat) [Uniform]
		[94/97] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[95/97] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[96/97] 'SDTypeArray<int>'
			'SDTypeArray<int>' (SDTypeArray)
				Item Type:
					'int' (SDTypeInt)
		[97/97] 'SDTypeArray<float>'
			'SDTypeArray<float>' (SDTypeArray)
				Item Type:
					'float' (SDTypeFloat)
