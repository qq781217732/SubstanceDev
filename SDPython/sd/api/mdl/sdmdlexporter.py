# ADOBE CONFIDENTIAL
#
# Copyright 2020 Adobe
# All Rights Reserved.
#
# NOTICE:  Adobe permits you to use, modify, and distribute this file in
# accordance with the terms of the Adobe license agreement accompanying it.
# If you have received this file from a source other than Adobe,
# then your use, modification, or distribution of it requires the prior
# written permission of Adobe.
#
# Autogenerated by ipa. Don't edit directly, edit the definitions and regenerate it when changing
#

import ctypes
import base64
import sd
from ..sdpackage import SDPackage
from .sdmdlgraph import SDMDLGraph
from ..sdapiobject import SDAPIObject
from ..sdapiobject import SDApiError
from ..apiexception import APIException

class SDMDLExporter(SDAPIObject):
    """
    Utility to export MDL modules and presets
    """
    def __init__(self, APIContext, handle, *args, **kwargs):
        """
        Constructor

        :rtype: SDMDLExporter
        """
        SDAPIObject.__init__(self, APIContext, handle, *args, **kwargs)

    @staticmethod
    def sExportPackage(sdPackage, mdlModuleFilePath):
        """
        Export the specified SDPackage to the specified MDL module file

        :param sdPackage: The SDPackage to export
        :type sdPackage: SDPackage
        :param mdlModuleFilePath: The file path of the MDL Module that will be generated
        :type mdlModuleFilePath: string
        :rtype: None
        """
        _res = sd.getContext().SDMDLExporter_sExportPackage(sdPackage.mHandle, ctypes.create_string_buffer(mdlModuleFilePath.encode('utf-8')))
        if _res != SDApiError.NoError.value:
            if _res == SDApiError.NoErrorOutputParamNotSet.value:
                return None
            raise APIException(SDApiError(_res))
        return None

    @staticmethod
    def sExportPreset(sdMDLGraph, mdlPresetModuleFilePath):
        """
        Export the specified SDMDLGraph as a preset to the specified MDL module file

        :param sdMDLGraph: The SDMDLGraph to export
        :type sdMDLGraph: SDMDLGraph
        :param mdlPresetModuleFilePath: The file path of the MDL Module that will be generated
        :type mdlPresetModuleFilePath: string
        :rtype: None
        """
        _res = sd.getContext().SDMDLExporter_sExportPreset(sdMDLGraph.mHandle, ctypes.create_string_buffer(mdlPresetModuleFilePath.encode('utf-8')))
        if _res != SDApiError.NoError.value:
            if _res == SDApiError.NoErrorOutputParamNotSet.value:
                return None
            raise APIException(SDApiError(_res))
        return None

